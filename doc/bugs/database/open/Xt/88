Return-Path: swick@athena.mit.edu
Received: by expo.lcs.mit.edu; Fri, 2 Sep 88 08:00:51 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA06936; Fri, 2 Sep 88 08:01:00 EDT
Received: by LYRE.MIT.EDU (5.45/4.7) id AA17551; Fri, 2 Sep 88 08:00:24 EDT
Resent-Message-Id: <8809021200.AA17551@LYRE.MIT.EDU>
Received: by E40-PO.MIT.EDU (5.45/4.7) id AA16801; Thu, 1 Sep 88 23:40:32 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA03558; Thu, 1 Sep 88 23:37:48 EDT
Received: by expo.lcs.mit.edu; Thu, 1 Sep 88 23:35:08 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA03525; Thu, 1 Sep 88 23:35:16 EDT
Received: by BLOOM-BEACON.MIT.EDU with sendmail-5.59/4.7 
	id <AA06379@BLOOM-BEACON.MIT.EDU>; Thu, 1 Sep 88 23:24:23 EDT
Received: from USENET by bloom-beacon.mit.edu with netnews
	for xpert@athena.mit.edu (xpert@athena.mit.edu)
	(contact usenet@bloom-beacon.mit.edu if you have questions)
Date: 31 Aug 88 12:56:52 GMT
From: mcvax!ukc!stc!datlog!torch!paul@uunet.uu.net  (Paul Andrews)
Organization: TORCH Computers Ltd., Cambridge, United Kingdom
Subject: Re: Problem compiling X11R2 on Multiflow under BSD4.3
Message-Id: <210@torch.UUCP>
References: <8808152028.AA18193@EXPO.LCS.MIT.EDU>, <392@gt-eedsp.UUCP>
Sender: xpert-request@athena.mit.edu
To: xpert@athena.mit.edu
Resent-To: xbugs@expo.lcs.mit.edu
Resent-Date: Fri, 02 Sep 88 08:00:22 EDT
Resent-From: Ralph R. Swick <swick@athena.mit.edu>

### bug number:   930
### area:         Xt
### severity:     medium
### comments:     

In article <392@gt-eedsp.UUCP> jensen@gt-eedsp.UUCP (P. Allen Jensen) writes:
>In article <8808152028.AA18193@EXPO.LCS.MIT.EDU>, jim@EXPO.LCS.MIT.EDU (Jim Fulton) writes:
>> 
>> The R2 XtOffset macro causes compilers that are fairly picky about pointer
>> arithmetic to complain.  The following version will be used in R3:
>> 
>> 	#define XtOffset(type,field) \
>> 	        ((unsigned int) (((caddr_t) (&(((type)NULL)->field))) - \
>> 	                         ((caddr_t) NULL)))
>
>
>Unfortunately, the new macro does not correct the problem.  Is the
>Multiflow compiler to picky ?

I'm sorry if someone has already responded to this but we have had the same
problem. We are running Unisoft V.2.2 with the portable C compiler. It finds
the complexity of the define to much for it. In the end we reduced it to
the following and put up with the warnings (there are lots of them). We have
submitted a bug report about this to Unisoft:

#ifdef UNISOFTV
#define XtOffset(type,field)    (&(((type)NULL)->field))
#else

Hope this is of use - Paul.

