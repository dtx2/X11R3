Return-Path: kubitron@athena.mit.edu
Received: by expo.lcs.mit.edu; Sun, 11 Sep 88 22:49:40 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA06704; Sun, 11 Sep 88 22:49:44 EDT
Received: by ALEFNULL.MIT.EDU (5.45/4.7) id AA02914; Sun, 11 Sep 88 22:49:36 EDT
Message-Id: <8809120249.AA02914@ALEFNULL.MIT.EDU>
To: swick@athena.mit.edu, xbugs@athena.mit.edu
Subject: r3b Infinite cursor problems in Xibm
Date: Sun, 11 Sep 88 22:49:34 EDT
From: John D. Kubiatowicz <kubitron@athena.mit.edu>

### bug number:   962
### area:         server
### severity:     very high
### comments:     

The following fix is NECESSARY to keep Xibm from going out to lunch when 
you change the current screen by moving the cursor.  Without it, the
cursor goes into oscillation, a state which is often corrected only
by killing the server.  Ack!

We noticed this many moons ago.  I would have thought that IBM would have
also.

--KUBI--
p.s. Ralph, could you get this back to Eric???

--- rtcursor.c	Sun Sep 11 20:47:30 1988
*** /tmp/,RCSt1001503	Sun Sep 11 20:48:03 1988
--- 137,147 ----
  
      if (generateEvent)
      {
+ #ifdef notdef
+ 	/* jtkohl 3/8/88 this causes an infinite recursion */
  	if (ibmQueue->head != ibmQueue->tail)
  	    ProcessInputEvents();
+ #endif notdef
  	motion.u.keyButtonPointer.rootX = x;
  	motion.u.keyButtonPointer.rootY = y;
  	motion.u.keyButtonPointer.time = lastEventTime;

