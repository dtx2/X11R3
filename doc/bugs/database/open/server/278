Return-Path: xpiinc!des@uunet.uu.net
Received: by expo.lcs.mit.edu; Mon, 17 Oct 88 19:17:10 EDT
Received: from xpiinc.UUCP by uunet.UU.NET (5.59/1.14) with UUCP 
	id AA23334; Mon, 17 Oct 88 19:17:03 EDT
Received: from snoopy.xpiinc.uu.net (snoopy) by xpiinc.uu.net (5.5/SMI-3.2)
	id AA06811; Mon, 17 Oct 88 14:56:04 EDT
Message-Id: <8810171855.AA01695@snoopy.xpiinc.uu.net>
Date: Mon, 17 Oct 88 14:55:52 EDT
From: Daniel E. Stone <xpiinc!des@uunet.uu.net>
To: xbugs@expo.lcs.mit.edu
Subject: server mi bug
Cc: des@uunet.uu.net

### bug number:   1082
### area:         server
### severity:     medium
### comments:     sounds like a missing -DMALLOC_RETURNS_NULL


VERSION:
    R3beta


CLIENT MACHINE and OPERATING SYSTEM:
    Sun 2/50 running SunOS 3.2


DISPLAY:
    SUN monochrome


WINDOW MANAGER:
    uwm


AREA:
    server


SYNOPSIS:
    X background weave in window after refresh in server started with -wm flag.


DESCRIPTION:
    Traced the bug down to MoveWindow which for some reason had more
    regions to deal with when the problem would appear.  Found that
    miExposeWindow was not resetting the exposure region to zero even
    though there where no regions to begin with.  It seems servers compiled
    with SUN's alloca will work, because alloca always returns
    a pointer even when asked for a 0 bytes.  Servers compiled with MIT
    alloca will break because it will return NULL when passed a size of 0.
    I did not change alloca.  Instead I checked for the
    exposures->numRects == 0 before doing the ALLOCATE_LOCAL.
    (Looking back at the fix, I don't know why I didn't change the
    'if (exposures)' above it to be if (exposures->numRects) although you'd
    still have to nuke exposures... and the fix does work.  Exercise for
    the reader.)


REPEAT BY:
    Start X11 R3 server with -wm flag compiled with MIT alloca in
    os/4.2bsd/libos.a Fire up R3 xterm and uwm. Do an xrefresh.
    Move the xterm so that it overlaps itself (may not need to overlap.)
    X background will appear in parts of the window.


SAMPLE FIX:
*** miexpose.c	Mon Oct 17 14:23:16 1988
--- tmp/miexpose.c	Mon Oct 10 22:29:55 1988
***************
*** 332,340 ****
  			-pWin->absCorner.x, -pWin->absCorner.y);
  	    pBox = exposures->rects;
  
! 	    if(!(pEvent = (xEvent *)
! 		ALLOCATE_LOCAL(exposures->numRects * sizeof(xEvent))))
  		return;
  	    pe = pEvent;
  
  	    for (i=1; i<=exposures->numRects; i++, pe++, pBox++)
--- 332,356 ----
  			-pWin->absCorner.x, -pWin->absCorner.y);
  	    pBox = exposures->rects;
  
! 	    /*
! 	     * Check for zero.  If true clean up and go home. des 10/10/88
! 	     * NOTE: When using the sun's alloca the ALLOCATE_LOCAL code below
! 	     *       will return non-zero even when numRects is 0.  This means
! 	     *       it will go through and do some extra stuff and then set
! 	     *       pgrn->numRects to zero.  We need that to be zero so
! 	     *       that MoveWindow doesn't get extra garbage. (This means -wm
! 	     *       should work on the server now.)
! 	     *
! 	     *       The MIT alloca as found in os/4.2bsd will return 0 (NULL)
! 	     */
! 	    if ((exposures->numRects == 0) ||
! 	        (!(pEvent = (xEvent *)
! 		ALLOCATE_LOCAL(exposures->numRects * sizeof(xEvent))))) {
! 	    	if (exposures != prgn)
! 	            (* pWin->drawable.pScreen->RegionDestroy) (exposures);
! 		prgn->numRects = 0;
  		return;
+ 	    }
  	    pe = pEvent;
  
  	    for (i=1; i<=exposures->numRects; i++, pe++, pBox++)

