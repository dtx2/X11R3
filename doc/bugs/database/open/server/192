Return-Path: jbs@wonko.mit.edu
Received: by expo.lcs.mit.edu; Fri, 15 Jul 88 14:59:29 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA10171; Fri, 15 Jul 88 14:59:52 EDT
Received: by WONKO.MIT.EDU (5.54/1.2a)
	id AA03383; Fri, 15 Jul 88 14:59:39 EDT
Date: Fri, 15 Jul 88 14:59:39 EDT
From: jbs@wonko.mit.edu (Jeff Siegal)
Message-Id: <8807151859.AA03383@WONKO.MIT.EDU>
To: xbugs@athena.mit.edu
Subject: Machine independant optimizations to mfb bitblt

### bug number:   713
### area:         server
### severity:     enhancement
### comments:     

With these changes, single-line scrolling of large xterm windows is
about 40% faster on a VSII (qvss).  Other block operations are
probably between 5% and 50% faster (not measured).  There is appears
to be some bottleneck in xterm scrolling outside the block moves at
this point (this is a visual observation--the window seems to scroll
one line, then pause, then scroll another line. Also the generated
bitblt copy code should be about 3 times faster (on a vax)--not just
40%).

Jeff Siegal
----cut here----
*** /mit/X/src/server/ddx/mfb/mfbbitblt.c	Tue Feb  2 18:05:53 1988
--- mfbbitblt.c	Thu Jul 14 23:20:07 1988
***************
*** 472,485 ****
  			        psrc++;
  		        }
  
! 		        nl = nlMiddle;
! 		        while (nl--)
! 		        {
! 			    getbits(psrc, xoffSrc, 32, tmpSrc)
! 			    *pdst++ = tmpSrc;
! 			    psrc++;
! 		        }
! 
  		        if (endmask)
  		        {
  			    getbits(psrc, xoffSrc, nend, tmpSrc)
--- 472,492 ----
  			        psrc++;
  		        }
  
! 		        nl = nlMiddle+1;
! 			if (!xoffSrc)
! 			{
! 			    while (--nl)
! 			        *pdst++ = *psrc++;
! 			} 
! 			else 
! 			{
! 			    while (--nl)
! 			    {
! 			        getunalignedword(psrc, xoffSrc, tmpSrc)
! 				*pdst++ = tmpSrc;
! 			        psrc++;
! 			    }
! 			}
  		        if (endmask)
  		        {
  			    getbits(psrc, xoffSrc, nend, tmpSrc)
***************
*** 511,522 ****
  			    putbits(tmpSrc, 0, nend, pdst)
  		        }
  
! 		        nl = nlMiddle;
! 		        while (nl--)
! 		        {
! 			    --psrc;
! 			    getbits(psrc, xoffSrc, 32, tmpSrc)
! 			    *--pdst = tmpSrc;
  		        }
  
  		        if (startmask)
--- 518,539 ----
  			    putbits(tmpSrc, 0, nend, pdst)
  		        }
  
! 		        nl = nlMiddle+1;
! 			if (!xoffSrc)
! 			{
! 		            while (--nl)
! 		            {
! 			        *--pdst = *--psrc;
! 		            }
! 			}
! 			else
! 			{
! 		            while (--nl)
! 		            {
! 			        --psrc;
! 			        getunalignedword(psrc, xoffSrc, tmpSrc)
! 			        *--pdst = tmpSrc;
! 			    }
  		        }
  
  		        if (startmask)
***************
*** 611,624 ****
  			        psrc++;
  		        }
  
! 		        nl = nlMiddle;
! 		        while (nl--)
! 		        {
! 			    getbits(psrc, xoffSrc, 32, tmpSrc)
! 			    *pdst = DoRop(alu, tmpSrc, *pdst);
! 			    pdst++;
! 			    psrc++;
! 		        }
  
  		        if (endmask)
  		        {
--- 628,653 ----
  			        psrc++;
  		        }
  
! 		        nl = nlMiddle+1;
! 			if (!xoffSrc)
! 			{
! 			    while (--nl)
! 			    {
! 				*pdst = DoRop(alu, *psrc, *pdst);
! 				pdst++;
! 				psrc++;
! 			    }
! 			}
! 			else
! 			{
! 		            while (--nl)
! 		            {
! 			        getunalignedword(psrc, xoffSrc, tmpSrc)
! 			        *pdst = DoRop(alu, tmpSrc, *pdst);
! 			        pdst++;
! 			        psrc++;
! 		            }
!                         }
  
  		        if (endmask)
  		        {
***************
*** 651,664 ****
  			    putbitsrop(tmpSrc, 0, nend, pdst, alu)
  		        }
  
! 		        nl = nlMiddle;
! 		        while (nl--)
! 		        {
! 			    --psrc;
! 			    --pdst;
! 			    getbits(psrc, xoffSrc, 32, tmpSrc)
! 			    *pdst = DoRop(alu, tmpSrc, *pdst);
! 		        }
  
  		        if (startmask)
  		        {
--- 680,705 ----
  			    putbitsrop(tmpSrc, 0, nend, pdst, alu)
  		        }
  
! 		        nl = nlMiddle+1;
! 			if (!xoffSrc)
! 			{
! 		            while (--nl)
! 		            {
! 			        --psrc;
! 			        --pdst;
! 			        *pdst = DoRop(alu, *psrc, *pdst);
! 		            }
! 			}
! 			else
! 			{
! 		            while (--nl)
! 		            {
! 			        --psrc;
! 			        --pdst;
! 			        getunalignedword(psrc, xoffSrc, tmpSrc)
! 			        *pdst = DoRop(alu, tmpSrc, *pdst);
! 		            }
!                         }
  
  		        if (startmask)
  		        {
*** /mit/X/src/server/ddx/mfb/maskbits.h	Tue Mar 15 18:39:33 1988
--- maskbits.h	Thu Jul 14 23:15:57 1988
***************
*** 228,233 ****
--- 228,242 ----
  }
  
  
+ #define getunalignedword(psrc, x, dst) \
+ { \
+     int m; \
+     m = 32-(x); \
+     dst = (SCRLEFT(*(psrc), (x)) & endtab[m]) | \
+ 	  (SCRRIGHT(*((psrc)+1), m) & starttab[m]); \
+ }
+ 
+ 
  #define putbits(src, x, w, pdst) \
  if ( ((x)+(w)) <= 32) \
  { \

