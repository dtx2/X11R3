Return-Path: kubitron@athena.mit.edu
Received: by expo.lcs.mit.edu; Sun, 11 Sep 88 23:05:52 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA06839; Sun, 11 Sep 88 23:05:54 EDT
Received: by ALEFNULL.MIT.EDU (5.45/4.7) id AA03000; Sun, 11 Sep 88 23:05:47 EDT
Message-Id: <8809120305.AA03000@ALEFNULL.MIT.EDU>
To: swick@athena.mit.edu, xbugs@athena.mit.edu
Subject: r3b Caps lock functionality in Xibm
Date: Sun, 11 Sep 88 23:05:45 EDT
From: John D. Kubiatowicz <kubitron@athena.mit.edu>

### bug number:   964
### area:         server
### severity:     enhancement
### comments:     

Grrrr!!  Once again, they (IBM PaloAlto) left caps-lock functionality out
of their server.  While this can always be disabled if it exists, it can't
be enabled if it doesn't.

A patch to two files (common/ibmio.c and BSDrt/rtkeyboard.c) follows:

--KUBI--
p.s. I have used this patch for quite a while on the X11R2 server; it is
what we have distributed to the clusters....
p.p.s Perhaps you should mention this one to Eric also....

*** /tmp/,RCSt1002965	Sun Sep 11 22:58:59 1988
--- ibmio.c	Sun Sep 11 22:33:19 1988
***************
*** 80,85 ****
--- 80,90 ----
  XEventQueue	*ibmQueue;
  extern	int	screenIsSaved;
  
+ /* These two values maintain the current state of the caps lock */
+ int		CurrentShiftSt;
+ static int	CurrentShiftKey;
+ extern CARD16	keyModifiersList[];
+ 
  /*****************
   * ProcessInputEvents:
   *    processes all the pending input events
***************
*** 241,259 ****
  
  		if ((pE->xe_type == XE_BUTTON)&&(pE->xe_device==XE_DKB))
  		{
! 		    e.u.u.detail= pE->xe_key;
! 		    switch (pE->xe_direction) {
  			case XE_KBTDOWN:
! 				e.u.u.type= KeyPress;
! 				(ibmKeybd->processInputProc)(&e,ibmKeybd);
! 				break;
  			case XE_KBTUP:
! 				e.u.u.type= KeyRelease;
! 				(ibmKeybd->processInputProc)(&e,ibmKeybd);
! 				break;
  			default:	/* hopefully BUTTON_RAW_TYPE */
! 				ErrorF("got a raw button, what do I do?\n");
! 				break;
  		    }
  		}
  		else if ((pE->xe_device==XE_MOUSE)||(pE->xe_device==XE_TABLET))
--- 246,289 ----
  
  		if ((pE->xe_type == XE_BUTTON)&&(pE->xe_device==XE_DKB))
  		{
! 		    /*
! 		     * The following provides Caps-Lock functionality.
! 		     * 		John Kubiatowicz
! 		     * 			IBM/Athena
! 		     */
! 		    if (keyModifiersList[pE->xe_key] & LockMask) {
! 			/* Deal with Shift-Lock toggling */
! 			if (pE->xe_direction == XE_KBTDOWN) {
! 			    CurrentShiftSt ^= 1;
! 			    /* Set LED appropriately */
! #ifdef	BSDrt
! 			    ioctl(rtEmulatorFD,CurrentShiftSt?QIOCSETCAPSL:QIOCCLRCAPSL);
! #endif
! 			    if (CurrentShiftSt) {   /* Turning lock on */
! 				e.u.u.type = KeyPress;
! 				e.u.u.detail = CurrentShiftKey = pE->xe_key;
! 			    } else {
! 			    /* Turn off same key as was originally Locked */
! 				e.u.u.type = KeyRelease;
! 				e.u.u.detail = CurrentShiftKey;
! 			    }
! 			    (*ibmKeybd->processInputProc)(&e,ibmKeybd);
! 			}
! 		    } else {
! 			e.u.u.detail= pE->xe_key;
! 			switch (pE->xe_direction) {
  			case XE_KBTDOWN:
! 			    e.u.u.type= KeyPress;
! 			    (ibmKeybd->processInputProc)(&e,ibmKeybd);
! 			    break;
  			case XE_KBTUP:
! 			    e.u.u.type= KeyRelease;
! 			    (ibmKeybd->processInputProc)(&e,ibmKeybd);
! 			    break;
  			default:	/* hopefully BUTTON_RAW_TYPE */
! 			    ErrorF("got a raw button, what do I do?\n");
! 			    break;
! 			}
  		    }
  		}
  		else if ((pE->xe_device==XE_MOUSE)||(pE->xe_device==XE_TABLET))
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> CUT HERE <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
*** /tmp/,RCSt1002995	Sun Sep 11 23:03:56 1988
--- rtkeyboard.c	Sun Sep 11 21:20:58 1988
***************
*** 50,55 ****
--- 50,56 ----
  #include "trace.h"
  
  DevicePtr	ibmKeybd;
+ extern int	CurrentShiftSt;
  
  static	struct spk_blk	rtBellSetting= { 0,0,0,0 };  /* Be vewwwy quiet... */
  
***************
*** 232,237 ****
--- 233,239 ----
      {
  	case DEVICE_INIT: 
  	    ibmKeybd = pDev;
+ 	    CurrentShiftSt = 0;	/* make sure shift key is off... */
  	    pDev->devicePrivate = (pointer) & ibmQueue;
  	    rtGetKbdMappings( &keySyms, modMap );
  	    InitKeyboardDeviceStruct(


