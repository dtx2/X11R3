Return-Path: ibmuupa!erik@ucbvax.berkeley.edu
Received: from ucbvax.Berkeley.EDU by EXPO.LCS.MIT.EDU; Wed, 16 Mar 88 03:14:31 EST
Received: by  (5.58/1.26)
	id AA04507; Tue, 15 Mar 88 20:59:05 PST
Received: by ibmpa.pasc.ibm.com (5.51/4.7)
	id AA03756; Tue, 15 Mar 88 12:25:20 PST
Received: by salmon.pasc.ibm.com (5.51/5.17)
	id AA07454; Tue, 15 Mar 88 12:30:10 PST
Date: Tue, 15 Mar 88 12:30:10 PST
From: ibmuupa!erik@ucbvax.berkeley.edu (Erik Fortune)
Message-Id: <8803152030.AA07454@salmon.pasc.ibm.com>
To: xbugs@expo.lcs.mit.edu
Subject: screen switching is broken

### bug number:   124
### area:         server
### severity:     fairly high
### assigned to:  rws
### status:       

VERSION:
	X11 release 2

CLIENT MACHINE:
	IBM RT/PC and IBM6152

CLIENT OPERATING SYSTEM:
	4.3

DISPLAY:
	Any combination of displays (more than one)

SYNOPSIS:
	Cursor movement from screen to screen is broken.
	(Release 2 IBM TCS bug #4)

DESCRIPTION:
	The cursor on the RT and 6152 should be able to slide from screen 
	to screen -- on release 2 (with IBM TCS bugs 1-3 applied), the cursor
	flickers back and forth from screen to screen and around the edge of
	each screen, but never just moves from one to the next.

REPEAT-BY:
	Start up a server with multiple screens, then try to move the
	cursor off of one screen onto the next.  Watch the cursor do
	all kinds of interesting things, none of which include moving
	(for any period of time) onto the next screen.

FIX:
	I didn't study the release 2 code -- I replaced NewCurrentScreen
	with the RT release 1 version (different than the MIT release 1
	version), and screen switching works again.
	In dix/events.c:
*** /tmp/,RCSt1007433	Tue Mar 15 12:23:37 1988
--- events.c	Tue Mar 15 12:12:03 1988
***************
*** 1086,1107 ****
      ScreenPtr newScreen;
      int x,y;
  {
!     if (newScreen == currentScreen)
!         return;
!     ROOT = &WindowTable[newScreen->myNum];
!     currentScreen = newScreen;
! 
!     sprite.hotLimits.x1 = 0 ;
!     sprite.hotLimits.y1 = 0 ;
!     sprite.hotLimits.x2 = newScreen->width ;
!     sprite.hotLimits.y2 = newScreen->height ;
!     (*currentScreen->CursorLimits) (
! 	currentScreen, sprite.current, &sprite.hotLimits, &sprite.physLimits);
!     (* currentScreen->ConstrainCursor)(currentScreen, &sprite.physLimits);
! 
!     (void) CheckMotion(x, y, TRUE);
! 
!     return ;
  }
  
  int
--- 1086,1093 ----
      ScreenPtr newScreen;
      int x,y;
  {
!     if (newScreen != currentScreen)
! 	ConfineCursorToWindow(&WindowTable[newScreen->myNum], x, y, TRUE);
  }
  
  int

