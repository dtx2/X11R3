Return-Path: jim@EXPO.LCS.MIT.EDU 
Received: by EXPO.LCS.MIT.EDU; Thu, 10 Mar 88 10:04:37 EST
Date: Thu, 10 Mar 88 10:04:37 EST
From: jim@expo.lcs.mit.edu (Jim Fulton)
Message-Id: <8803101504.AA00348@EXPO.LCS.MIT.EDU>
To: bugs
Subject: Seimens cursors

### bug number:   65
### area:         fonts
### severity:     
### assigned to:  
### status:       closed

(Message inbox:39)
Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: from KILLINGTON.LCS.MIT.EDU by EXPO.LCS.MIT.EDU; Thu, 10 Mar 88 08:35:23 EST
Return-Path: <swick@ATHENA.MIT.EDU>
Received: from ATHENA.MIT.EDU by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 126313; 26 Feb 88 13:39:02 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA02601; Fri, 26 Feb 88 13:38:50 EST
Received: by LYRE.MIT.EDU (5.45/4.7) id AA23808; Fri, 26 Feb 88 13:38:14 EST
Message-Id: <8802261838.AA23808@LYRE.MIT.EDU>
To: rws@zermatt.lcs.mit.edu, jim@athena.mit.edu
Subject: Seimens cursors
Date: Fri, 26 Feb 88 13:38:08 EST
From: Ralph R. Swick <swick@athena.mit.edu>
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Thu, 10 Mar 88 08:35 EST
Resent-Message-Id: <880310083518.7.RWS@KILLINGTON.LCS.MIT.EDU>

found this buried in my mail.

------- Forwarded Message

Received: by E40-PO.MIT.EDU (5.45/4.7) id AA26536; Thu, 11 Feb 88 16:07:50 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA14642; Thu, 11 Feb 88 16:06:53 EST
Received: by edsel.siemens.com (5.54/1.15) 
	id AA00226; Thu, 11 Feb 88 16:06:28 EST
Date: Thu, 11 Feb 88 16:06:28 EST
From: biggers@edsel.siemens.com (Mark Biggers)
Message-Id: <8802112106.AA00226@edsel.siemens.com>
To: swick@ATHENA.MIT.EDU
Subject: updated cursors enclosed


Hi,

We have some bugs in the our cursors and cursor masks, as
originally supplied for version 11 release 1.  Below is a shar of
"bitmap" format files to replace those cursors in the "cursorfont"
font.

thanks,
mark

(note: hand.cursor replaces cursorfont:hand2)

 =================================================
 "So it goes."

 Mark Biggers
 UUCP: {almost anywhere}!princeton!siemens!biggers
 ARPA: biggers@siemens.com

 Siemens Research & Technology Laboratories
 105 College Road East
 Princeton, NJ  08540 	(609) 734-3325
 =================================================

- ----------------------------------------------------------------------
#! /bin/sh
# This is a shell archive, meaning:
# 1. Remove everything above the #! /bin/sh line.
# 2. Save the resulting text in a file.
# 3. Execute the file with /bin/sh (not csh) to create the files:
#	dot_box.cursor
#	dot_box_mask.cursor
#	draped_box.cursor
#	draped_box_mask.cursor
#	rtl_logo.cursor
#	rtl_logo_mask.cursor
#	question_arrow.cursor
#	question_arrow_mask.cursor
#	iron_cross.cursor
#	iron_cross_mask.cursor
#	hand.cursor
#	hand_mask.cursor
# This archive created: Thu Feb 11 15:55:07 1988
export PATH; PATH=/bin:$PATH
if test -f 'dot_box.cursor'
then
	echo shar: will not over-write existing file "'dot_box.cursor'"
else
cat << \SHAR_EOF > 'dot_box.cursor'
#define dot_box_width 16
#define dot_box_height 16
#define dot_box_x_hot 8
#define dot_box_y_hot 7
static short dot_box_bits[] = {
   0x0000, 0x0000, 0x3ffc, 0x2004,
   0x2004, 0x2004, 0x2004, 0x2184,
   0x2184, 0x2004, 0x2004, 0x2004,
   0x2004, 0x3ffc, 0x0000, 0x0000};
SHAR_EOF
fi # end of overwriting check
if test -f 'dot_box_mask.cursor'
then
	echo shar: will not over-write existing file "'dot_box_mask.cursor'"
else
cat << \SHAR_EOF > 'dot_box_mask.cursor'
#define dot_box_mask_width 16
#define dot_box_mask_height 16
#define dot_box_mask_x_hot 8
#define dot_box_mask_y_hot 7
static char dot_box_mask_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
SHAR_EOF
fi # end of overwriting check
if test -f 'draped_box.cursor'
then
	echo shar: will not over-write existing file "'draped_box.cursor'"
else
cat << \SHAR_EOF > 'draped_box.cursor'
#define draped_box_width 16
#define draped_box_height 16
#define draped_box_x_hot 8
#define draped_box_y_hot 7
static short draped_box_bits[] = {
   0x0000, 0x0000, 0x3ffc, 0x2244,
   0x2664, 0x2c34, 0x381c, 0x2184,
   0x2184, 0x381c, 0x2c34, 0x2664,
   0x2244, 0x3ffc, 0x0000, 0x0000};
SHAR_EOF
fi # end of overwriting check
if test -f 'draped_box_mask.cursor'
then
	echo shar: will not over-write existing file "'draped_box_mask.cursor'"
else
cat << \SHAR_EOF > 'draped_box_mask.cursor'
#define draped_box_mask_width 16
#define draped_box_mask_height 16
#define draped_box_mask_x_hot 8
#define draped_box_mask_y_hot 7
static char draped_box_mask_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
SHAR_EOF
fi # end of overwriting check
if test -f 'rtl_logo.cursor'
then
	echo shar: will not over-write existing file "'rtl_logo.cursor'"
else
cat << \SHAR_EOF > 'rtl_logo.cursor'
#define rtl_logo_width 16
#define rtl_logo_height 16
#define rtl_logo_x_hot 7
#define rtl_logo_y_hot 7
static short rtl_logo_bits[] = {
   0x0000, 0x7ffe, 0x4402, 0x4402,
   0x4402, 0x47fe, 0x4422, 0x4422,
   0x4422, 0x4422, 0x7fe2, 0x4022,
   0x4022, 0x4022, 0x7ffe, 0x0000};
SHAR_EOF
fi # end of overwriting check
if test -f 'rtl_logo_mask.cursor'
then
	echo shar: will not over-write existing file "'rtl_logo_mask.cursor'"
else
cat << \SHAR_EOF > 'rtl_logo_mask.cursor'
#define rtl_logo_mask_width 16
#define rtl_logo_mask_height 16
#define rtl_logo_mask_x_hot 8
#define rtl_logo_mask_y_hot 7
static char rtl_logo_mask_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
SHAR_EOF
fi # end of overwriting check
if test -f 'question_arrow.cursor'
then
	echo shar: will not over-write existing file "'question_arrow.cursor'"
else
cat << \SHAR_EOF > 'question_arrow.cursor'
#define question_arrow_width 16
#define question_arrow_height 16
#define question_arrow_x_hot 8
#define question_arrow_y_hot 8
static char question_arrow_bits[] = {
   0x00, 0x00, 0xc0, 0x07, 0xe0, 0x0f, 0x70, 0x1c, 0x30, 0x18, 0x30, 0x18,
   0x70, 0x1c, 0x60, 0x0e, 0x00, 0x07, 0x80, 0x03, 0x80, 0x03, 0x00, 0x01,
   0x00, 0x00, 0x00, 0x01, 0x80, 0x03, 0x00, 0x01};
SHAR_EOF
fi # end of overwriting check
if test -f 'question_arrow_mask.cursor'
then
	echo shar: will not over-write existing file "'question_arrow_mask.cursor'"
else
cat << \SHAR_EOF > 'question_arrow_mask.cursor'
#define question_arrow_mask_width 16
#define question_arrow_mask_height 16
#define question_arrow_mask_x_hot 8
#define question_arrow_mask_y_hot 8
static char question_arrow_mask_bits[] = {
   0xc0, 0x07, 0xe0, 0x0f, 0xf0, 0x1f, 0xf8, 0x3f, 0x78, 0x3c, 0x78, 0x3c,
   0xf8, 0x3e, 0xf0, 0x1f, 0xe0, 0x0f, 0xc0, 0x07, 0xc0, 0x07, 0x80, 0x03,
   0x00, 0x01, 0xc0, 0x07, 0xc0, 0x07, 0xc0, 0x07};
SHAR_EOF
fi # end of overwriting check
if test -f 'iron_cross.cursor'
then
	echo shar: will not over-write existing file "'iron_cross.cursor'"
else
cat << \SHAR_EOF > 'iron_cross.cursor'
#define iron_cross_width 16
#define iron_cross_height 16
#define iron_cross_x_hot 8
#define iron_cross_y_hot 7
static char iron_cross_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0xf0, 0x0f, 0xe0, 0x07, 0xc4, 0x23, 0x8c, 0x31,
   0x9c, 0x39, 0xfc, 0x3f, 0xfc, 0x3f, 0x9c, 0x39, 0x8c, 0x31, 0xc4, 0x23,
   0xe0, 0x07, 0xf0, 0x0f, 0x00, 0x00, 0x00, 0x00};
SHAR_EOF
fi # end of overwriting check
if test -f 'iron_cross_mask.cursor'
then
	echo shar: will not over-write existing file "'iron_cross_mask.cursor'"
else
cat << \SHAR_EOF > 'iron_cross_mask.cursor'
#define iron_cross_mask_width 16
#define iron_cross_mask_height 16
#define iron_cross_mask_x_hot 8
#define iron_cross_mask_y_hot 7
static char iron_cross_mask_bits[] = {
   0x00, 0x00, 0xf8, 0x1f, 0xf8, 0x1f, 0xf6, 0x6f, 0xee, 0x77, 0xde, 0x7b,
   0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xfe, 0x7f, 0xde, 0x7b, 0xee, 0x77,
   0xf6, 0x6f, 0xf8, 0x1f, 0xf8, 0x1f, 0x00, 0x00};
SHAR_EOF
fi # end of overwriting check
if test -f 'hand.cursor'
then
	echo shar: will not over-write existing file "'hand.cursor'"
else
cat << \SHAR_EOF > 'hand.cursor'
#define hand_width 16
#define hand_height 16
#define hand_x_hot 7
#define hand_y_hot 5
static short hand_bits[] = {
   0x0000, 0x01fe, 0x0201, 0x047e,
   0x0808, 0x0870, 0x0808, 0x1470,
   0x2208, 0x4130, 0x20c0, 0x1240,
   0x0880, 0x0500, 0x0200, 0x0000};
SHAR_EOF
fi # end of overwriting check
if test -f 'hand_mask.cursor'
then
	echo shar: will not over-write existing file "'hand_mask.cursor'"
else
cat << \SHAR_EOF > 'hand_mask.cursor'
#define hand_mask_width 16
#define hand_mask_height 16
#define hand_mask_x_hot 7
#define hand_mask_y_hot 5
static char hand_mask_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff};
SHAR_EOF
fi # end of overwriting check
#	End of shell archive
exit 0

------- End of Forwarded Message


