Return-Path: kit@athena.mit.edu
Received: from ATHENA (ATHENA.MIT.EDU) by EXPO.LCS.MIT.EDU; Fri, 25 Mar 88 16:26:00 EST
From: kit@athena.mit.edu
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA05521; Fri, 25 Mar 88 16:25:03 EST
Received: by MYCROFT (5.45/4.7)
	id AA02213; Fri, 25 Mar 88 16:23:25 EST
Message-Id: <8803252123.AA02213@MYCROFT>
To: xbugs@expo.lcs.mit.edu
Cc: kit@athena.mit.edu
Subject: uwm ignores WMHints on second iconify
Date: Fri, 25 Mar 88 16:23:18 EST

### bug number:   224
### area:         uwm
### severity:     enhancement
### comments:     This depends on the ICCCM.  The window manager is not allowed
###               to change any of the client-set properties.  This should be
###               using a private protocol.


VERSION:
	X11 release 2

CLIENT MACHINE:
	VS2000

CLIENT OPERATING SYSTEM:
	4.3bsd - athena 6.0a

DISPLAY:
	QVSS

SYNOPSIS:
	 
Once an icon is placed with uwm it cannot be moved using the WMHints structure
and XSetWMHints().

DESCRIPTION:

I have a quick little program that will allow an xterm to be iconified 
and placed from the command line.  Unfortunatly uwm does not look at its hints
for the placement of the icon once the icon window has been created, and thus
once the icon exists it cannot be moved by CLib calls.

REPEAT-BY:

use the following calls to the program xsetsize.

xsetsize -icon =+10+10

if the xterm involved has never been iconified then this should work fine.
if not it will be iconified in its las position.

In the same xterm window execute.

xsetsize -icon =+100+100

The icon will appear in the +10+10 location.

source for xsetsize
------------------------------------------------------------
#ifndef lint
  static char rcsid_module_c[] = "$Header: README,v 1.2 87/08/08 20:06:43 treese Exp $";
#endif lint

/*	This is xsetsize.c 
 *
 *      Changes the size and placement of an xterm window.
 *	
 *	Created:        October 15 1987
 *	By:		John E. Elsbree and Christopher J. VanHaren.
 *      Modified:       March 24 1988
 *      By:             Chris D. Peterson
 *
 *      $Source: /u2/projects/template/RCS/README,v $
 *      $Author: treese $
 *      $Header: README,v 1.2 87/08/08 20:06:43 treese Exp $
 *	
 *  	Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 *	For further information on copyright and distribution 
 *	see the file mit-copyright.h
 */

#ifndef TRUE
#define TRUE 1
#endif TRUE

#ifndef FALSE
#define FALSE 0
#endif FALSE

#include "mit-copyright.h"
#include <stdio.h>
#include <X11/Xlib.h>
#include <X11/Xutil.h>

#define BAD_VALUE -1

void main(), PrintUsage();
char * getenv();

void
main(argc, argv)
int argc;
char *argv[];
{
  int geom_mask, i, x, y, width, height, border_width;
  int icon_move, quiet;
  Display *display;
  Window window;
  XWindowAttributes w_attr, r_attr;
  XWMHints * wmhints;
  char *w_str;

  display = XOpenDisplay("");
  w_str = getenv("WINDOWID");
  window = (Window) atoi(w_str);

  border_width = BAD_VALUE;
  icon_move = FALSE;
  quiet = FALSE;

  if (argc == 1)
    PrintUsage(display);

  for (i=1; i < argc; i++) {
    if ( strcmp(argv[i],"-q") == 0 || strcmp(argv[i],"-quiet") == 0)
      quiet = TRUE;
    else if ( strcmp(argv[i],"-i") == 0 || strcmp(argv[i],"-icon") == 0)
      icon_move = TRUE;
    else if (strcmp(argv[i],"-bw") == 0) {
      if (++i < argc)
	border_width = atoi(argv[i]);
    }
    else if ( (geom_mask = XParseGeometry(argv[i], &x, &y, &width, &height)) 
	     == 0 ) 
      PrintUsage(display);
  }

  if (border_width > BAD_VALUE)
    XSetWindowBorderWidth(display, window, border_width);
  
  if (icon_move) {		/* move icon */
    wmhints = XGetWMHints(display, window);
    if (wmhints == NULL) {
      fprintf(stderr,
	      "Could not iconify, is this window a child of the root?\n");
      XCloseDisplay(display);
      exit(1);
    }

    if (XValue & geom_mask) {
      wmhints->icon_x = x;
      wmhints->flags |= IconPositionHint;
    }

    if (YValue & geom_mask) {
      wmhints->icon_y = y;
      wmhints->flags |= IconPositionHint;
    }

    wmhints->flags |= StateHint;
    wmhints->initial_state = IconicState;

    XSetWMHints(display, window, wmhints);  

    /* convince uwm to do what you told it to do. */

    XUnmapWindow(display,window); 
    XMapWindow(display,window); 
  }
  else {			/* size window. */
    XGetWindowAttributes(display, window, &w_attr);
    XGetWindowAttributes(display, w_attr.root, &r_attr);
  
    if (!(geom_mask & WidthValue))
      width = w_attr.width;
    
    if (!(geom_mask & HeightValue))
      height = w_attr.height;

    if (!(geom_mask & XValue))
      x = w_attr.x;

    if (!(geom_mask & YValue))
      y = w_attr.y;

    if (geom_mask & XNegative)
      x = r_attr.width - width - (w_attr.border_width * 2) + x;
    
    if (geom_mask & YNegative)
      y = r_attr.height - height - (w_attr.border_width * 2) + y;

    XMoveResizeWindow(display, window, x, y, width, height);
    XRaiseWindow(display, window);

    if ( !quiet && (width != w_attr.width || height != w_attr.height) ) {
      fprintf(stdout,"Your xterm has been resized to make sure that\n");
      fprintf(stdout,"everything works correctly execute the command:\n\n\n");
      fprintf(stdout,"'%% set noglob; eval `resize`'\n\n\n");
    }
  }
  XFlush(display);
  XCloseDisplay(display);
}

void
PrintUsage(disp)
Display * disp;
{
  printf("usage:  xsetsize [options]\n");
  printf("[=[width]x[height][[+-]xoff[+-]yoff]]\n");
  printf("-icon \n");
  printf("-quiet \n");
  printf("-bw border_width \n");
  
  XCloseDisplay(disp);
  exit(1);
}
------------------------------------------------------------

FIX:

I guess uwm should look at the wmhints structure everytime it remaps, I don't
really know what to do about this, I think it exists mostly because nobody
realized that you would want to do what I am doing.

I can make the fix, if someone tells me what is the "right" thing to do.


							Chris

