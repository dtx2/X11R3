Return-Path: attunix!sfrod!jmb@ucbvax.berkeley.edu
Received: by expo.lcs.mit.edu; Sun, 29 May 88 17:20:33 EDT
Received: by ucbvax.Berkeley.EDU (5.59/1.28)
	id AA01591; Sun, 29 May 88 14:11:52 PDT
Date: Sun, 29 May 88 14:11:52 PDT
From: attunix!sfrod!jmb@ucbvax.berkeley.edu
Message-Id: <8805292111.AA01591@ucbvax.Berkeley.EDU>
To: attunix!expo.lcs.mit.edu!xbugs
Subject: Bug in font compiler
Cc: davef@ucbvax.berkeley.edu

### bug number:   545
### area:         fonts
### severity:     low
### comments:     

VERSION:
        X11 release 2

CLIENT MACHINE:
        AT&T 6386 WGS

CLIENT OPERATING SYSTEM:
        UNIX System V Release 3.2

DISPLAY:
        IBM Enhanced Graphics Adapter (EGA)

SYNOPSIS:
	Font compiler in X11 release 2 still doesn't work for systems where
	IMAGE_BYTE_ORDER != BITMAP_BIT_ORDER.

DESCRIPTION:
	The Intel 80386 is LSBFirst.  The EGA card is MSBFirst.  In this case,
	the font compiler need to do byte-swapping for the .snf file, but no
	support is there.

REPEAT-BY:
        Use the font compiler off the MIT tape, compile the fonts, and run xfd.
	The image data will look wrong - it is correct within a byte, but the
	byte ordering is incorrect.

FIX:
	A new option to do byte-swapping, "-s", was added to the compiler and
	its utilities.  (The fix below works only for when GLYPHPADBYTES == 4.)

*** /tmp/Ocompiler/fc.c	Fri Feb 26 00:42:22 1988
--- fonts/compiler/fc.c	Tue Mar 15 21:06:33 1988
***************
*** 1,6 ****
--- 1,9 ----
  /* $Header: fc.c,v 1.6 88/01/31 17:57:21 rws Exp $ */
  
  #include <stdio.h>
+ #ifdef SYSV
+ #include <sys/types.h>
+ #endif /* SYSV */
  #include <sys/file.h> 
  #include <errno.h> 
  #include <ctype.h> 
***************
*** 32,37 ****
--- 35,41 ----
  int linenum = 0;	/* for error messages */
  int or_glyphPad = 0;	/* override glyphPading?? */
  int or_bitorder = 0;	/* override bitorder?? */
+ int byteswap = 0;	/* do byte-swapping?? */
  
  
  int glyphPad = DEFAULTGLPAD;
***************
*** 107,114 ****
   */
  void
  bitorderinvert( in, out, nbytes)
!     register unsigned char	*in;
!     register unsigned char	*out;
      register int	nbytes;
  {
      static int BOTableInitialized = 0;
--- 111,118 ----
   */
  void
  bitorderinvert( in, out, nbytes)
!     register BYTE	*in;
!     register BYTE	*out;
      register int	nbytes;
  {
      static int BOTableInitialized = 0;
***************
*** 132,137 ****
--- 136,165 ----
  }
  
  /*
+  *	Invert byte order within each WORD of an array.
+  *	"In" and "out" may point to the same array.
+  *
+  *	Current implementation requires that glyphPad be 4, though this
+  *	is probably not strictly required with some work.
+  */
+ void
+ byteorderinvert( in, out, nwords)
+     register BITS32	*in;
+     register BITS32	*out;
+     register int	nwords;
+ {
+     if (glyphPad != 4) {
+ 	fprintf(stderr, "Error: Can't byte-swap if GLYPHPADBYTES != 4\n");
+ 	return;
+     }
+ 
+     while ( nwords--) {
+ 	*out++ = lswapl( *in);	/* NOTE: lswapl() is a macro found in misc.h */
+ 	in++;
+     }
+ }
+ 
+ /*
   * return TRUE if str is a prefix of buf
   */
  prefix(buf, str)
***************
*** 338,343 ****
--- 366,375 ----
  		bitorder = LSBFirst;
  		break;
  
+             case 's':
+ 		byteswap = 1;
+ 		break;
+ 
  	    default:
  		fprintf(stderr, "bad flag -%c\n", argv[0][1]);
  		break;
***************
*** 345,351 ****
  	} else {
  	    if (bdffile)
  	usage:
! 		fatal("usage: %s [-p#] [bdf file]", myname);
  	    bdffile = argv[0];
  	    if (freopen( bdffile, "r", stdin) == NULL)
  		fatal("could not open  file %s\n", bdffile);
--- 377,383 ----
  	} else {
  	    if (bdffile)
  	usage:
! 		fatal("usage: %s [-p#] [-m | -l] [-s] [bdf file]", myname);
  	    bdffile = argv[0];
  	    if (freopen( bdffile, "r", stdin) == NULL)
  		fatal("could not open  file %s\n", bdffile);
***************
*** 614,620 ****
  	    for ( ix=0; ix < bytesperrow; ix++)
  	    {
  	        if ( bytesGlUsed >= bytesGlAlloced)
! 	    	pGl = (unsigned char *)realloc( pGl, (bytesGlAlloced *= 2));
  	        pGl[bytesGlUsed] = hexbyte(p);
  	        p += 2;
  	        bytesGlUsed++;
--- 646,652 ----
  	    for ( ix=0; ix < bytesperrow; ix++)
  	    {
  	        if ( bytesGlUsed >= bytesGlAlloced)
! 		    pGl = (unsigned char *)realloc( pGl, (bytesGlAlloced *= 2));
  	        pGl[bytesGlUsed] = hexbyte(p);
  	        p += 2;
  	        bytesGlUsed++;
***************
*** 672,677 ****
--- 704,713 ----
  
      if (bitorder == LSBFirst)
  	bitorderinvert( pGl, pGl, bytesGlUsed);
+ 
+     if (byteswap)
+ 	byteorderinvert( (BITS32 *) pGl, (BITS32 *) pGl, bytesGlUsed >> 2 );
+ 
  #ifdef UNSPECIFIED
      if (!or_glyphPad || !or_bitorder) {
  	fprintf(stderr, "%s: ", currentfont);


*** /tmp/Ocompiler/fontutil.c	Fri Feb 26 00:42:24 1988
--- fonts/compiler/fontutil.c	Tue Mar 15 21:10:40 1988
***************
*** 1,4 ****
--- 1,7 ----
  #include <stdio.h>
+ #ifdef SYSV
+ #include <sys/types.h>
+ #endif /* SYSV */
  #include <sys/file.h>
  
  #include "X.h"
***************
*** 16,21 ****
--- 19,25 ----
  
  extern int	glyphPad;
  extern int	bitorder;
+ extern int	byteswap;
  
  char *	malloc();
  char *	invertbitsandbytes();
***************
*** 353,362 ****
              for ( b=0;
  		b < pCI[ch].metrics.rightSideBearing - pCI[ch].metrics.leftSideBearing;
  		b++) {
  		if (bitorder == LSBFirst) {
! 			putchar((row[b>>3] & (1<<(b&7)))? '#' : '_');
  		} else {
! 			putchar((row[b>>3] & (1<<(7-(b&7))))? '#' : '_');
  		}
  	    }
              putchar('\n');
--- 357,368 ----
              for ( b=0;
  		b < pCI[ch].metrics.rightSideBearing - pCI[ch].metrics.leftSideBearing;
  		b++) {
+ 		/* Byte-swap here if necessary. Note that b is a bit-count */
+ 		CARD16 c = byteswap ? ((b&~0x18)+(0x18-(b&0x18))) : b;
  		if (bitorder == LSBFirst) {
! 			putchar((row[c>>3] & (1<<(c&7)))? '#' : '_');
  		} else {
! 			putchar((row[c>>3] & (1<<(7-(c&7))))? '#' : '_');
  		}
  	    }
              putchar('\n');


*** /tmp/Ocompiler/showsnf.c	Fri Feb 26 00:42:24 1988
--- fonts/compiler/showsnf.c	Tue Mar 15 21:13:41 1988
***************
*** 24,29 ****
--- 24,30 ----
  
  int glyphPad = DEFAULTGLPAD;
  int bitorder = DEFAULTBITORDER;
+ int byteswap = 0;	/* do byte-swapping?? */
  
  main(argc, argv)
  	int	argc;
***************
*** 39,44 ****
--- 40,46 ----
  			case 'v':	verbose++; break;
  			case 'm':	bitorder = MSBFirst; break;
  			case 'l':	bitorder = LSBFirst; break;
+ 			case 's':	byteswap = 1; break;
  			default:	usage(); break;
  			}
  		else {
***************
*** 53,59 ****
  
  usage()
  {
! 	fprintf(stderr, "Usage: %s [-v] fontfile ...\n", program);
  	exit(1);
  }
  
--- 55,61 ----
  
  usage()
  {
! 	fprintf(stderr, "Usage: %s [-v] [-m | -l] [-s] fontfile ...\n",program);
  	exit(1);
  }
  


Jim Bash
AT&T Bell Labs
Room G-211, 190 River Road, Summit, NJ 07901
(201) 522-6649
[...|ucbvax|ihnp4|bellcore|allegra]!attunix!jmb


(P.S. to Dave - These fixes have already been applied to our official source.)


