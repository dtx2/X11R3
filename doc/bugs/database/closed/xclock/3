Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: from ATHENA (ATHENA.MIT.EDU) by EXPO.LCS.MIT.EDU; Thu, 17 Mar 88 14:09:32 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA28475; Thu, 17 Mar 88 14:08:35 EST
Received: from hp-pcd.HP.COM ([15.0.200.33]) by hplabs.HP.COM with SMTP ; Thu, 17 Mar 88 09:12:46 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA09372; Thu, 17 Mar 88 08:51:25 PST
Received: from hpcvxlc by hpcvxlc.HP.COM; Thu, 17 Mar 88 08:51:53 pst
Message-Id: <8803171651.AA25440@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: xclock bug
X-Mailer: mh6.5
Date: Thu, 17 Mar 88 08:51:49 PST
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   158
### area:         xclock
### severity:     
### assigned to:  
### status:       closed
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	When moving a clock with second hand, the second hand may not get
	erased.
DESCRIPTION:
	When an exposure event occurs, the clock face is redrawn and clock_tic
	is called to erase the old hands and draw the new. Unfortunately, when
	the clock face is redrawn, the flag that determines if the hands are
	to be erased is cleared and the routine clock_tic does not know that
	the hands need to be erased.
REPEAT-BY:
	Start up 'xclock -update 1'.
	Use 'moveopaque' in 'uwm' to move the clock around the screen.
	Eventually the second hand will start leaving images of itself in the
	window.
FIX:
	When an exposure event happens, first check to see if the hands need
	erasing before redrawing the clock face. You must leave the test for
	erasing the hands in clock_tic for when the routine is entered via an
	alarm call rather than from the Redisplay routine processing the
	exposure event. Unfortunately, the Redisplay routine is called the
	first time the clock face and hands are to be drawn, for that case
	don't erase the hands (therefore the kludge with the variable 'first'
	in Redisplay).

*** lib/Xaw/Clock.c.old	Wed Mar 16 15:36:28 1988
--- lib/Xaw/Clock.c	Wed Mar 16 15:42:06 1988
***************
*** 35,40
  
  extern long time();
  static void clock_tic(), DrawHand(), DrawSecond(), SetSeg(), DrawClockFace();
  	
  /* Private Definitions */
  

--- 35,41 -----
  
  extern long time();
  static void clock_tic(), DrawHand(), DrawSecond(), SetSeg(), DrawClockFace();
+ static void erase_hands();
  	
  /* Private Definitions */
  
***************
*** 262,267
      XEvent *event;		/* unused */
      Region region;		/* unused */
  {
      ClockWidget w = (ClockWidget) gw;
      if (w->clock.analog)
          DrawClockFace(w);

--- 263,270 -----
      XEvent *event;		/* unused */
      Region region;		/* unused */
  {
+     static int first = 1;
+ 
      ClockWidget w = (ClockWidget) gw;
      if (w->clock.analog) {
  	if (!first)
***************
*** 263,269
      Region region;		/* unused */
  {
      ClockWidget w = (ClockWidget) gw;
!     if (w->clock.analog)
          DrawClockFace(w);
      clock_tic((caddr_t)w, (XtIntervalId)NULL);
  }

--- 266,276 -----
      static int first = 1;
  
      ClockWidget w = (ClockWidget) gw;
!     if (w->clock.analog) {
! 	if (!first)
! 	    erase_hands(w, (struct tm *) 0);
! 	else
! 	    first = 0;
          DrawClockFace(w);
      }
      clock_tic((caddr_t)w, (XtIntervalId)NULL);
***************
*** 265,270
      ClockWidget w = (ClockWidget) gw;
      if (w->clock.analog)
          DrawClockFace(w);
      clock_tic((caddr_t)w, (XtIntervalId)NULL);
  }
  

--- 272,278 -----
  	else
  	    first = 0;
          DrawClockFace(w);
+     }
      clock_tic((caddr_t)w, (XtIntervalId)NULL);
  }
  
***************
*** 329,379
  			/*
  			 * Erase old hands.
  			 */
! 			if(w->clock.numseg > 0) {
! 			    if (w->clock.show_second_hand == TRUE) {
! 				XDrawLines(dpy, win,
! 					w->clock.EraseGC,
! 					w->clock.sec,
! 					VERTICES_IN_HANDS-1,
! 					CoordModeOrigin);
! 				if(w->clock.Hdpixel != w->core.background_pixel) {
! 				    XFillPolygon(dpy,
! 					win, w->clock.EraseGC,
! 					w->clock.sec,
! 					VERTICES_IN_HANDS-2,
! 					Convex, CoordModeOrigin
! 				    );
! 				}
! 			    }
! 			    if(	tm.tm_min != w->clock.otm.tm_min ||
! 				tm.tm_hour != w->clock.otm.tm_hour ) {
! 				XDrawLines( dpy,
! 					   win,
! 					   w->clock.EraseGC,
! 					   w->clock.segbuff,
! 					   VERTICES_IN_HANDS,
! 					   CoordModeOrigin);
! 				XDrawLines( dpy,
! 					   win,
! 					   w->clock.EraseGC,
! 					   w->clock.hour,
! 					   VERTICES_IN_HANDS,
! 					   CoordModeOrigin);
! 				if(w->clock.Hdpixel != w->core.background_pixel) {
! 				    XFillPolygon( dpy,
! 					win, w->clock.EraseGC,
! 					w->clock.segbuff, VERTICES_IN_HANDS,
! 					Convex, CoordModeOrigin
! 				    );
! 				    XFillPolygon(dpy,
! 					win, w->clock.EraseGC,
! 					w->clock.hour,
! 					VERTICES_IN_HANDS,
! 					Convex, CoordModeOrigin
! 				    );
! 				}
! 			    }
! 		    }
  
  		    if (w->clock.numseg == 0 ||
  			tm.tm_min != w->clock.otm.tm_min ||

--- 337,343 -----
  			/*
  			 * Erase old hands.
  			 */
! 			erase_hands(w, &tm);
  
  		    if (w->clock.numseg == 0 ||
  			tm.tm_min != w->clock.otm.tm_min ||
***************
*** 448,453
  			
  		}
  }
  	
  /*
   * DrawLine - Draws a line.

--- 412,474 -----
  			
  		}
  }
+ 
+ /* ARGSUSED */
+ static void erase_hands(client_data, tm)
+         caddr_t client_data;
+ 	struct tm *tm; 
+ {
+         ClockWidget w = (ClockWidget)client_data;    
+         register Display *dpy = XtDisplay(w);
+         register Window win = XtWindow(w);
+ 
+ 	if(w->clock.numseg > 0) {
+ 	    if (w->clock.show_second_hand == TRUE) {
+ 		XDrawLines(dpy, win,
+ 			w->clock.EraseGC,
+ 			w->clock.sec,
+ 			VERTICES_IN_HANDS-1,
+ 			CoordModeOrigin);
+ 		if(w->clock.Hdpixel != w->core.background_pixel) {
+ 		    XFillPolygon(dpy,
+ 			win, w->clock.EraseGC,
+ 			w->clock.sec,
+ 			VERTICES_IN_HANDS-2,
+ 			Convex, CoordModeOrigin
+ 		    );
+ 		}
+ 	    }
+ 	    if(	!tm || tm->tm_min != w->clock.otm.tm_min ||
+ 		tm->tm_hour != w->clock.otm.tm_hour ) {
+ 		XDrawLines( dpy,
+ 			   win,
+ 			   w->clock.EraseGC,
+ 			   w->clock.segbuff,
+ 			   VERTICES_IN_HANDS,
+ 			   CoordModeOrigin);
+ 		XDrawLines( dpy,
+ 			   win,
+ 			   w->clock.EraseGC,
+ 			   w->clock.hour,
+ 			   VERTICES_IN_HANDS,
+ 			   CoordModeOrigin);
+ 		if(w->clock.Hdpixel != w->core.background_pixel) {
+ 		    XFillPolygon( dpy,
+ 			win, w->clock.EraseGC,
+ 			w->clock.segbuff, VERTICES_IN_HANDS,
+ 			Convex, CoordModeOrigin
+ 		    );
+ 		    XFillPolygon(dpy,
+ 			win, w->clock.EraseGC,
+ 			w->clock.hour,
+ 			VERTICES_IN_HANDS,
+ 			Convex, CoordModeOrigin
+ 		    );
+ 		}
+ 	    }
+ 	}
+ }
+ 
  	
  /*
   * DrawLine - Draws a line.

