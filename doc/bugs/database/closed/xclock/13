Return-Path: pat@uxc.cso.uiuc.edu
Received: by expo.lcs.mit.edu; Mon, 25 Apr 88 21:35:24 EDT
Received: by uxc.cso.uiuc.edu (5.51/9.7)
	id AA06712; Mon, 25 Apr 88 20:33:49 CDT
Date: Mon, 25 Apr 88 20:33:49 CDT
From: pat@uxc.cso.uiuc.edu (Patrick E. Kane )
Message-Id: <8804260133.AA06712@uxc.cso.uiuc.edu>
To: xbugs@expo.lcs.mit.edu
Subject: One more time: Xclock widget bug
Cc: pat@uxc.cso.uiuc.edu

### bug number:   418
### area:         xclock
### severity:     low
### comments:     See bug 365


****************************************************************
* NOTE: I submitted this bug report last week with a bogus     * 
*       FIX (sigh). The incorrect fix that I suggested was to  *
*       add an "if (id)" in the "clock_tic" procedure.     PEK *
****************************************************************


VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/50, Gould PN, Gould NP, VAX 11/750

CLIENT OPERATING SYSTEM:
	Sun UNIX 4.2, UTX 2.1, UTX 3.0,  4.3bsd

DISPLAY:
	Sun 3/50

SYNOPSIS:
	xclock update period automagically decreases

DESCRIPTION:
	The Clock widget has a bug that causes the update period to decrease
	everytime the widget's Redisplay routine is called.

REPEAT-BY:
	To reproduce the bug set your clock to update every few seconds,
	and then open and close the clock window a few times.

FIX:
	
	The bug is in  Xaw/Clock.c  in the "Redisplay" procedure. 
	The fix is to add the lines marked (with !):

	 static void Redisplay (gw, event, region)
	    Widget gw;
	    XEvent *event;              /* unused */
	    Region region;              /* unused */
	{	
    		ClockWidget w = (ClockWidget) gw;
	    	if (w->clock.analog)
        		DrawClockFace(w);

  !		if (w->clock.interval_id)  /* remove any pending TimeOut */
  !  		{
  !    			XtRemoveTimeOut (w->clock.interval_id);
  !  		}

    		clock_tic((caddr_t)w, (XtIntervalId)NULL);
	}


Pat Kane
Gould CSD
Urbana, IL  61821

kane@Gould.COM


