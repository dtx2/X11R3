Return-Path: ekberg@home.csc.ti.com
Received: by expo.lcs.mit.edu; Wed, 27 Apr 88 18:14:46 EDT
Received: by ti.com id AA12862; Wed, 27 Apr 88 17:12:34 CDT
Received: from home by tilde id AA10479; Wed, 27 Apr 88 14:55:30 CDT
Received: by home id AA10832; Wed, 27 Apr 88 14:55:00 CDT
Date: Wed, 27 Apr 88 14:55:00 CDT
From: Tom Ekberg <ekberg@home.csc.ti.com>
Message-Id: <8804271955.AA10832@home>
To: xbugs@expo.lcs.mit.edu
Subject: Configure-window makes diagonal windows

### bug number:   432
### area:         server
### severity:     low
### comments:     

Example bug report:

	VERSION:
		X11 release 2

	CLIENT MACHINE:
		sun 3/75 or 
		sun 4 (take your pick)

	CLIENT OPERATING SYSTEM:
		Sun UNIX 4.2 Release 3.4 or
		SunOS Release Sys4-3.2

	DISPLAY:
		monochrome frame buffer - sun 3
		color frame buffer - sun 4

	SYNOPSIS:
		With a bit gravity of south and a child's window gravity of
		center, configure window turns the child into a diagonal
		window.

	DESCRIPTION:
		In the test case below, the parent window, a child of the root,
		has a bit gravity of south and its child has a window gravity
		of center.  Cycling through a series of width/heights passed to
		configure-window for the parent, starting with a width/height
		pair where the child is not visible and ending with a pair
		where the child is visible, causes the appearence of the child
		to look like a trapezoid.

	REPEAT-BY:
		Here is come CLX code which causes the problem.  To convert to
		C, be sure to read the comments (they are the lines that have a
		; in them).

;;; -*- Mode:Common-Lisp; Package:XLIB; Fonts:(MEDFNB); Base:10 -*-

;;; This is a test case for configure window which does not work on a sun 3/75
;;; running X11R2 of the X Window System.  Compile everything in this file and
;;; then execute the function FOO.  I commented this a lot in case you don't
;;; have CLX handy to make it easier to convert to C.  Be sure to duplicate the
;;; window width/height since variations of these will most likely not produce
;;; the desired result.

;;; Define some variables for the root, server connection and some other
;;; data structures.
(DEFPARAMETER *X-ROOT* NIL)
(DEFPARAMETER X-SERVER NIL)
(DEFPARAMETER X-GC NIL)
(DEFPARAMETER X-WIN NIL)
(DEFPARAMETER X-CHILD NIL)


(DEFUN FOO (&OPTIONAL (HOST-STRING "POND"))
  "Generate a diagonal child."
  ;; An UNWIND-PROTECT will always execute the close-display form (see the end
  ;; of this function) even when the user aborts out of FOO.
  (UNWIND-PROTECT
      (PROGN
	;; Open the display.
	(SETQ X-SERVER (OPEN-DISPLAY HOST-STRING :AUTHORIZATION-NAME "tranya"
				     :AUTHORIZATION-DATA "00"))
	;; Save the root window away.
	(SETQ *X-ROOT* (SCREEN-ROOT (CAR (DISPLAY-ROOTS X-SERVER))))
	;; Create a window Let the depth default to that of the parent (i.e.
	;; the root).  Likewise for the visual.  Border-width defaults to 0.
	;; Note that the bit gravity is SOUTH -- this is crucial.
	(SETQ X-WIN (CREATE-WINDOW :PARENT *X-ROOT* :CLASS :INPUT-OUTPUT 
                                   :X 50 :Y 50
				   :WIDTH 100 :HEIGHT 500
				   :EVENT-MASK 0
				   :BIT-GRAVITY :SOUTH
				   :BORDER-WIDTH 2
				   :BORDER 1
				   :BACKGROUND 0))
	;; Create a child of X-WIN that has a gravity of CENTER.
	(SETQ X-CHILD (CREATE-WINDOW :PARENT X-WIN
				     :X 300 :Y 50
				     :CLASS :INPUT-OUTPUT
				     :WIDTH 100 :HEIGHT 50
				     :GRAVITY :CENTER
				     :EVENT-MASK 0
				     :BORDER-WIDTH 5
				     :BORDER 1
				     :BACKGROUND 0))
	;; Create a Gcontext so we can display some text.
	(SETQ X-GC (CREATE-GCONTEXT :DRAWABLE X-WIN :FOREGROUND 1
                                    :BACKGROUND 0))
	;; Map both windows.
	(MAP-WINDOW X-WIN)
	(MAP-WINDOW X-CHILD)
	;; Tell the reader that we have started, and put something in the
	;; window.
	(DRAW-GLYPHS X-WIN X-GC 0 50 "Initial Configuration")
	;; Tell CLX to take the requests it has queued and dump them to the
	;; server.
	(DISPLAY-FORCE-OUTPUT X-SERVER)
	;; same as:
	;; for(width=290,height=600;(width<420)&&(height>100);width++,height--)
	(LOOP FOR WIDTH FROM 290 BELOW 420 BY 1
	      FOR HEIGHT FROM 600 ABOVE 100 BY 1
	      DO
	      ;; Do a configure-window and change the width and height.  This
	      ;; other stuff is to make sure that CLX sends both of these two
	      ;; changes as one request instead of 2 of them.
	      (LET ((OLD-FUN (DISPLAY-AFTER-FUNCTION X-SERVER)))
		;; Change to a specific force-output
		(SETF (DISPLAY-AFTER-FUNCTION X-SERVER) 'IGNORE)
		(WITH-STATE (X-WIN)
		  (SETF (DRAWABLE-WIDTH     X-WIN) width)
		  (SETF (DRAWABLE-HEIGHT    X-WIN) height))
		(DISPLAY-FORCE-OUTPUT X-SERVER)
		(SETF (DISPLAY-AFTER-FUNCTION X-SERVER) OLD-FUN)))
	;; Tell the reader that we have finished.
	(DRAW-GLYPHS X-WIN X-GC 0 50 "At end")
	(DISPLAY-FORCE-OUTPUT X-SERVER)
	;; Wait a 30 seconds to see the results.
	(SLEEP 30))
    (CLOSE-DISPLAY X-SERVER)))

	FIX:
		Don't know.  Somewhere in the /server/dix/window.c I suppose,
		but it could be at a lower level too.

  -- tom (aisle C-4L), ekberg@csc.ti.com

