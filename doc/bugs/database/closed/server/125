Return-Path: jupiter!bob@cad.berkeley.edu
Received: by expo.lcs.mit.edu; Wed, 13 Jul 88 16:47:12 EDT
Received: by cad.Berkeley.EDU (5.58/1.28)
	id AA07019; Wed, 13 Jul 88 13:44:00 PST
Received: by jupiter.IS (4.12/6.0.GT)
	id AA10111; Wed, 13 Jul 88 13:43:21 pdt
Date: Wed, 13 Jul 88 13:43:21 pdt
From: Bob Schulman <jupiter!bob%jupiter@cad.berkeley.edu>
Posted-Date: Wed, 13 Jul 88 13:43:21 pdt
Message-Id: <8807132043.AA10111@jupiter.IS>
To: xbugs@expo.lcs.mit.edu
Cc: bob@cad.berkeley.edu

### bug number:   712
### area:         server
### severity:     very high
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/160

CLIENT OPERATING SYSTEM:
	SunOS 3.2

DISPLAY:
	Jupiter's Sun Satellite

SYNOPSIS:
	 cfbPadPixmap() doesn't maintain the pPixmap->width field correctly.
	 The incorrect value in this field can cause a server crash.

DESCRIPTION:
	 The code and documentation for cfbPadPixmap() states that it
	 pads pixmaps to 32 bits (if possible). It does that fine, but
	 it sets pPixmap->width incorrectly. It sets pPixmap->width to
	 32 REGARDLESS OF THE DEPTH. This is wrong. It should set it to
		(32 / appropriate depth)

REPEAT-BY:
	Run xperfmon and watch the server die. The cause of the death
	is: cfbChangeWindowAttributes() is called to change the background
	pixmap. This pixmap has a width of 2. cfbPadPixmap() is called to
	expand the pixmap definition to 32 bits. It marks the width
	(incorrectly) as 32 pixels(!). Folloiwing that, cfbRotatePixmap()
	is called, in which we call cfbXRotatePixmap(). In cfbXRotatePixmap(),
	we allocate pwNew which uses devKind which was set up using a width
	of 2. The math in cfbXRotatePixmap uses the width of 32, however,
	and quickly falls off the end of the area allocated for pwNew.
	This "falling off" trashes other data and the server is soon kaput.

FIX:
	*** cfbpixmap.c.coreX	Wed Jul 13 13:40:44 1988
	--- cfbpixmap.c.fixed	Wed Jul 13 11:35:38 1988
	***************
	*** 250,256 ****
	          }
	          p++;
	      }    
	!     pPixmap->width = 32;
	      return(TRUE);
	  }
	  
	--- 250,256 ----
	          }
	          p++;
	      }    
	!     pPixmap->width = 32 / pPixmap->drawable.depth;
	      return(TRUE);
	  }
	  

