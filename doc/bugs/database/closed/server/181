Return-Path: u-jmolse%ug@cs.utah.edu
Received: by expo.lcs.mit.edu; Mon, 22 Aug 88 11:24:11 EDT
Received: by cs.utah.edu (5.54/utah-2.0-cs)
	id AA25066; Mon, 22 Aug 88 09:24:20 MDT
Received: by ug.utah.edu (5.54/utah-2.0-leaf)
	id AA01068; Mon, 22 Aug 88 09:24:12 MDT
Date: Mon, 22 Aug 88 09:24:12 MDT
From: u-jmolse%ug@cs.utah.edu (John M. Olsen)
Message-Id: <8808221524.AA01068@ug.utah.edu>
To: rws@zermatt.lcs.mit.edu, xbugs@expo.lcs.mit.edu
Subject: Problem with XGrabKeyboard

### bug number:   898
### area:         server
### severity:     low
### comments:     


Here is a fairly small sample program which demonstrates a problem with
XGrabKeyboard.  All the instructions for repeating the problem are in
the comment header.  There should be a .signature file at the end.
----------------------------------------------------------------
/****************************************************************
 * This code demonstrates a bug in XGrabWindow.  To see the bug,
 * move the pointer to the subwindow, press a button, release the
 * button and quickly move the pointer into the main window immediately
 * after releasing the button.  The printed messages will indicate 
 * that the keydown events are sent to the parent, while the key up 
 * events are sent to the child.  If you don't move out of the sub
 * window quickly after the button release, then the sub window gets
 * both the key down and key up messages just like you would expect.
 *
 *
 * IMPORTANT TO YOUR SANITY:
 * To ungrab the keyboard, press the <ESC> key.  Otherwise, you
 * have to kill the job from another terminal.
 ****************************************************************/

#include <X11/Xlib.h>
#include <X11/Xatom.h>
#include <X11/Xutil.h>
#include <X11/X.h>
#include <stdio.h>

Display *dpy;
XSetWindowAttributes xswa;
XWindowAttributes xwa;
XEvent xev;
int fg,bg;       /* used to store foreground and background colors. */
int inverse = 0;
Window win1, win2;
int grabbed = 0;
char a[5];

main()
{
  if (!(dpy= XOpenDisplay(NULL))) {   /* Open the display */
    puts("Cannot open display\n");
    exit(-1);
  }
  fg = WhitePixel(dpy, DefaultScreen(dpy));
  bg = BlackPixel(dpy, DefaultScreen(dpy));

  xswa.event_mask = 0;
  xswa.background_pixel = bg;
  xswa.border_pixel = fg;
  
/* set up the main window */

  win1 = XCreateWindow(dpy, DefaultRootWindow(dpy), 0, 0,
		       400, 400, 2,
		       DefaultDepth(dpy, DefaultScreen(dpy)),
		       InputOutput,
		       DefaultVisual(dpy, DefaultScreen(dpy)),
		       CWEventMask | CWBackPixel | CWBorderPixel,
		       &xswa);
  XSelectInput(dpy, win1,
	       ButtonPressMask | ButtonReleaseMask | StructureNotifyMask
	       | ExposureMask | EnterWindowMask | LeaveWindowMask
	       | KeyPressMask);
  XMapWindow(dpy, win1);

/* set up the child window */

  win2 = XCreateWindow(dpy, win1, 10, 10, 100, 100, 2,
		       DefaultDepth(dpy, DefaultScreen(dpy)),
		       InputOutput,
		       DefaultVisual(dpy, DefaultScreen(dpy)),
		       CWEventMask | CWBackPixel | CWBorderPixel,
		       &xswa);
  XSelectInput(dpy, win2,
	       ButtonPressMask | ButtonReleaseMask | StructureNotifyMask
	       | ExposureMask | EnterWindowMask | LeaveWindowMask
	       | KeyPressMask);
  XMapWindow(dpy, win2);

  while(1){
    if (XPending(dpy)){ 
      XNextEvent(dpy, &xev);
      if (xev.type == Expose){
	printf("Exposure for %s window\n",
	       (((XExposeEvent *)&xev)->window == win1?"main":"sub"));
      }
      else if(xev.type == EnterNotify){
	printf("Entered %s window\n",
	       (((XCrossingEvent *)&xev)->window == win1?"main":"sub"));
      }
      else if(xev.type == LeaveNotify){
	printf("Exited %s window\n",
	       (((XCrossingEvent *)&xev)->window == win1?"main":"sub"));
      }
      else if(xev.type == ButtonRelease){
	printf("Button release in %s window\n",
	       (((XButtonEvent *)&xev)->window == win1?"main":"sub"));
	grabbed = 1;
	puts("grabbed");
	XGrabKeyboard(dpy, ((XCrossingEvent *)&xev)->window,
		      1, GrabModeSync, GrabModeAsync, CurrentTime);
      }
      else if(xev.type == ButtonPress){
	printf("Button press in %s window\n",
	       (((XButtonEvent *)&xev)->window == win1?"main":"sub"));
      }
      else if(xev.type == KeyPress){
	printf("Key press in %s window\n",
	       (((XKeyPressedEvent *)&xev)->window == win1?"main":"sub"));
	XLookupString((XKeyPressedEvent *)&xev, a, 1, NULL, NULL);
	if(a[0] == 27){
	  puts("ungrabbed");
	  XUngrabKeyboard(dpy, CurrentTime);
	}
      }
      else if(xev.type == KeyRelease){
	printf("Key release in %s window\n",
	       (((XKeyPressedEvent *)&xev)->window == win1?"main":"sub"));
      }
    }
  }
}
----------------------------------------------------------------
 /|  |     /|||  /\|       | John M. Olsen, 1547 Jamestown Drive
 \|()|\|\_  |||. \/|/)@|\_ | Salt Lake City, UT  84121-2051     
  |	u-jmolse%ug@cs.utah.edu or ...!utah-cs!utah-ug!u-jmolse
	"I'd give my right arm to be ambidexterous."

