Return-Path: deboor%bay.Berkeley.EDU@berkeley.edu
Received: from bay.Berkeley.EDU by EXPO.LCS.MIT.EDU; Fri, 25 Mar 88 10:55:20 EST
Received: by bay.Berkeley.EDU (5.57/1.25)
	id AA23432; Thu, 24 Mar 88 22:55:50 PST
Date: Thu, 24 Mar 88 22:55:50 PST
From: deboor%bay.Berkeley.EDU@berkeley.edu (Adam R de Boor)
Message-Id: <8803250655.AA23432@bay.Berkeley.EDU>
To: x11%brie@sun.com, xbugs@expo.lcs.mit.edu
Subject: bitGravity/winGravity interaction

### bug number:   217
### area:         server
### severity:     
### assigned to:  
### status:       closed
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/160C or 3/75M

CLIENT OPERATING SYSTEM:
	SunOS 3.2 or Sprite (Berkeley experimental)

DISPLAY:
	cg2 or bw2

SYNOPSIS:
	 bitGravity can be hazardous to your winGravity

DESCRIPTION:
	 Because ResizeChildrenWinSize doesn't actually move the inferior
	 windows, the combination of non-Forget bitGravity and winGravity
	 will cause evil things to happen.

REPEAT-BY:
	Run the test program given below. Note how part of the original
	crossed lines remain in the parent, while an area outside the apparent
	position of the child window is what is cleared by the XClearArea().

FIX:
	I'm working on it -- I'll let you know.

----------
#include <stdio.h>
#include "X11/Xlib.h"
#include "X11/Xatom.h"


#define rnd(x)		(random() % (x))

Display *dpy;

StartConnectionToServer(argc, argv)
int	argc;
char	*argv[];
{
    char *display;
    int i;

    display = NULL;
    for(i = 1; i < argc; i++)
    {
        if(index(argv[i], ':') != NULL)
	    display = argv[i];
    }
    if (!(dpy = XOpenDisplay(display)))
    {
       perror("Cannot open display\n");
       exit(0);
   }
}

main(argc, argv)
    int argc;
    char **argv;

{
	int	i;
	Window	w1, w2;
	GC gc;
	XGCValues xgcv;
        char *windowName = "Test of CopyArea";
        char line[30];
        XSetWindowAttributes xswa;
	XEvent pe;
        Visual visual;

	StartConnectionToServer(argc, argv);

        xswa.event_mask = ExposureMask;
	xswa.bit_gravity = SouthWestGravity;
	xswa.background_pixel = WhitePixel(dpy, 0);
        visual.visualid = CopyFromParent;
        w1 = XCreateWindow(dpy, RootWindow(dpy, 0), 100, 100, 200, 200,
	    2, DefaultDepth(dpy, 0), InputOutput, &visual,
	    CWEventMask|CWBitGravity|CWBackPixel,  &xswa);
	xswa.win_gravity = NorthEastGravity;
	xswa.background_pixel = BlackPixel(dpy, 0);
	w2 = XCreateWindow(dpy, w1, 50, 50, 100, 100,
	    2, DefaultDepth(dpy, 0), InputOutput, &visual,
	    CWEventMask|CWWinGravity|CWBackPixel, &xswa);
	
	XMapWindow(dpy, w2);
	XMapWindow(dpy, w1);

	XChangeProperty(dpy, 
	    w1, XA_WM_NAME, XA_STRING, 8, PropModeReplace,
	    windowName, strlen(windowName));

	gc = XCreateGC(dpy, w1, 0, 0);
        XSync(dpy, 0);
	
	/* wait for exposure event so window manager can get reparented, etc */
        while (1)
        {
            XNextEvent(dpy, &pe);   
	    if (pe.type == Expose) break;
        }
        XSync(dpy, 1);

	XDrawLine(dpy,  w2, gc, 0, 0, 100, 100);
	XDrawLine(dpy, w2, gc, 100, 0, 0, 100);

	XResizeWindow(dpy, w1, 250, 250);
	XClearArea(dpy, w2, 0, 0, 0, 0);

	XSync(dpy, 0);

	printf("Type CR to finish\n");
	gets(line);
}


