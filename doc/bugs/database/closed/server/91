Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: by expo.lcs.mit.edu; Mon, 6 Jun 88 19:08:55 EDT
Return-Path: <@KILLINGTON.LCS.MIT.EDU:RWS@ZERMATT.LCS.MIT.EDU>
Received: from EXPO.LCS.MIT.EDU by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 161158; 6 Jun 88 19:05:10 EDT
Received: by expo.lcs.mit.edu; Mon, 6 Jun 88 19:05:56 EDT
Date: Mon, 6 Jun 88 19:05 EDT
From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Subject: "empty" bitmap clip-mask produces opposite of desired effect
To: bug-trackers@expo.lcs.mit.edu
Message-Id: <19880606230503.6.RWS@KILLINGTON.LCS.MIT.EDU>
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Mon, 6 Jun 88 19:08 EDT
Resent-Message-Id: <19880606230804.7.RWS@KILLINGTON.LCS.MIT.EDU>
Resent-Comments: oops, sent to wrong address first time

### bug number:   566
### area:         server
### severity:     low
### comments:     

VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	any

DISPLAY:
	most

AREA:
	server

SYNOPSIS:
	setting the clip-mask to a bitmap filled with zeros should
	cause all subsequent output to be completely clipped, but
	instead causes all subsequent output to completely unclipped.

DESCRIPTION:
	ditto.  The bug is that mfbPixmapToRegion returns a NULL
	pointer in this case, instead of a null region.

REPEAT-BY:
	set the clip-mask of a gc to a bitmap filled with zeros,
	the try to draw, expecting nothing to appear, and see
	full output instead.

FILES:
	server/ddx/mfb/mfbclip.c, server/ddx/hp/mfb/mfbclip.c

FIX:

*** /tmp/,RCSt1a07002	Mon Jun  6 18:56:52 1988
--- server/ddx/mfb/mfbclip.c	Mon Jun  6 18:53:46 1988
***************
*** 21,27 ****
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbclip.c,v 1.15 87/12/29 18:39:44 rws Exp $ */
  #include "X.h"
  #include "miscstruct.h"
  #include "pixmapstr.h"
--- 21,27 ----
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbclip.c,v 1.16 88/06/06 18:52:51 rws Exp $ */
  #include "X.h"
  #include "miscstruct.h"
  #include "pixmapstr.h"
***************
*** 55,61 ****
  
      if((pReg = (*pPix->drawable.pScreen->RegionCreate)(NULL, 1)) == NullRegion)
  	return NullRegion;
!     rects = (BoxPtr) Xalloc(sizeof(BoxRec));
      FirstRect = rects;
      width = pPix->width;
      pw = (unsigned int  *)pPix->devPrivate;
--- 55,61 ----
  
      if((pReg = (*pPix->drawable.pScreen->RegionCreate)(NULL, 1)) == NullRegion)
  	return NullRegion;
!     rects = (BoxPtr) xalloc(sizeof(BoxRec));
      FirstRect = rects;
      width = pPix->width;
      pw = (unsigned int  *)pPix->devPrivate;
***************
*** 183,199 ****
  	if(!fSame)
  	    irectPrevStart = irectLineStart;
      }
-     Xfree((char *)pReg->rects);
      if(pReg->numRects)
      {
! 	pReg->size = pReg->numRects;
  	pReg->rects = FirstRect;
      }
      else
      {
! 	Xfree((char *) FirstRect);
! 	Xfree((char *) pReg);
! 	pReg = NullRegion;
      }
  
      return(pReg);
--- 183,197 ----
  	if(!fSame)
  	    irectPrevStart = irectLineStart;
      }
      if(pReg->numRects)
      {
! 	xfree(pReg->rects);
  	pReg->rects = FirstRect;
      }
      else
      {
! 	xfree(FirstRect);
! 	pReg->size = 1;
      }
  
      return(pReg);


*** /tmp/,RCSt1a06995	Mon Jun  6 18:56:23 1988
--- server/ddx/hp/mfb/mfbclip.c	Mon Jun  6 18:55:54 1988
***************
*** 48,54 ****
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbclip.c,v 1.2 87/12/29 18:41:01 rws Exp $ */
  #include "X.h"
  #include "miscstruct.h"
  #include "pixmapstr.h"
--- 48,54 ----
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbclip.c,v 1.3 88/06/06 18:55:14 rws Exp $ */
  #include "X.h"
  #include "miscstruct.h"
  #include "pixmapstr.h"
***************
*** 82,88 ****
  
      if((pReg = (*pPix->drawable.pScreen->RegionCreate)(NULL, 1)) == NullRegion)
  	return NullRegion;
!     rects = (BoxPtr) Xalloc(sizeof(BoxRec));
      FirstRect = rects;
      width = pPix->width;
      pw = (unsigned int  *) (((mfbPrivPixmapPtr)(pPix->devPrivate))->bits);
--- 82,88 ----
  
      if((pReg = (*pPix->drawable.pScreen->RegionCreate)(NULL, 1)) == NullRegion)
  	return NullRegion;
!     rects = (BoxPtr) xalloc(sizeof(BoxRec));
      FirstRect = rects;
      width = pPix->width;
      pw = (unsigned int  *) (((mfbPrivPixmapPtr)(pPix->devPrivate))->bits);
***************
*** 214,230 ****
  	if(!fSame)
  	    irectPrevStart = irectLineStart;
      }
-     Xfree((char *)pReg->rects);
      if(pReg->numRects)
      {
! 	pReg->size = pReg->numRects;
  	pReg->rects = FirstRect;
      }
      else
      {
! 	Xfree((char *) FirstRect);
! 	Xfree((char *) pReg);
! 	pReg = NullRegion;
      }
  
      return(pReg);
--- 214,228 ----
  	if(!fSame)
  	    irectPrevStart = irectLineStart;
      }
      if(pReg->numRects)
      {
! 	xfree(pReg->rects);
  	pReg->rects = FirstRect;
      }
      else
      {
! 	xfree(FirstRect);
! 	pReg->size = 1;
      }
  
      return(pReg);

