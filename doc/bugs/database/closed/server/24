Return-Path: jim@EXPO.LCS.MIT.EDU 
Received: by EXPO.LCS.MIT.EDU; Thu, 10 Mar 88 10:07:49 EST
Date: Thu, 10 Mar 88 10:07:49 EST
From: jim@expo.lcs.mit.edu (Jim Fulton)
Message-Id: <8803101507.AA00463@EXPO.LCS.MIT.EDU>
To: bugs
Subject: miClearToBackground misses exposures if no background pixmap

### bug number:   72
### area:         server
### severity:     
### assigned to:  
### status:       

(Message inbox:46)
Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: from KILLINGTON.LCS.MIT.EDU by EXPO.LCS.MIT.EDU; Thu, 10 Mar 88 08:44:12 EST
Return-Path: <@EXPO.LCS.MIT.EDU:bilbo.geoff@seas.ucla.edu>
Received: from EXPO.LCS.MIT.EDU (EXPO.LCS.MIT.EDU) by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 128326; 29 Feb 88 21:21:39 EST
Received: from ATHENA (ATHENA.MIT.EDU) by EXPO.LCS.MIT.EDU; Mon, 29 Feb 88 17:53:04 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA18057; Mon, 29 Feb 88 17:52:31 EST
Message-Id: <8802292252.AA18057@ATHENA.MIT.EDU>
Date:           Mon, 29 Feb 88 14:43:12 PST
From: Geoff Kuenning <bilbo.geoff@seas.ucla.edu>
Received:       from BILBO (193.255.1.3) by FRODO
                id smtp.69917; Mon, 29 Feb 88 14:42:24 PST
To: xbugs@athena.mit.edu
Subject:        miClearToBackground misses exposures if no background pixmap
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Thu, 10 Mar 88 08:44 EST
Resent-Message-Id: <880310084411.4.RWS@KILLINGTON.LCS.MIT.EDU>

VERSION:
	X11 release 1
SYNOPSIS:
	miClearToBackground misses exposures if no background pixmap
DESCRIPTION:
	If a window does not have a background pixmap, miClearToBackground
	won't generate exposures
REPEAT-BY:
	Create a window with no background, and use miClearToBackground
	to clear it.  Note that no exposure events are received.
FIX:
	Apply the following patch:

Index: server/ddx/mi/miwindow.c

*** miwindow.c.old	Mon Feb 29 14:50:35 1988
--- miwindow.c	Thu Feb 25 12:32:55 1988
***************
*** 54,62
      BoxRec box;
      RegionPtr pReg;
  
!     if ((pWin->backgroundTile == (PixmapPtr)None) ||
! 	(pWin->class == InputOnly))
!         return ;
      box.x1 = pWin->absCorner.x + x;
      box.y1 = pWin->absCorner.y + y;
      if (w)

--- 54,61 -----
      BoxRec box;
      RegionPtr pReg;
  
!     if (pWin->class == InputOnly) return;
!     
      box.x1 = pWin->absCorner.x + x;
      box.y1 = pWin->absCorner.y + y;
      if (w)
***************
*** 76,83
      }
      else
      {
!         (* pWin->drawable.pScreen->Intersect)(pReg, pReg, pWin->clipList);
!         (*pWin->PaintWindowBackground)(pWin, pReg, PW_BACKGROUND);
      }
      (* pWin->drawable.pScreen->RegionDestroy)(pReg);
  }

--- 75,84 -----
      }
      else
      {
! 	if (pWin->backgroundTile != (PixmapPtr)None) {
! 	    (* pWin->drawable.pScreen->Intersect)(pReg, pReg, pWin->clipList);
! 	    (*pWin->PaintWindowBackground)(pWin, pReg, PW_BACKGROUND);
! 	}
      }
      (* pWin->drawable.pScreen->RegionDestroy)(pReg);
  }

	Geoff Kuenning	geoff@lcc.ucla.edu	geoff@ITcorp.com

