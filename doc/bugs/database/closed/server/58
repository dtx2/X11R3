Return-Path: keith
Received: by expo.lcs.mit.edu; Thu, 19 May 88 14:24:30 EDT
From: keith@expo.lcs.mit.edu (Keith Packard)
Message-Id: <8805191824.AA17296@EXPO.LCS.MIT.EDU>
To: xbugs
Subject: mfbfillrct.c revisited
Date: Thu, 19 May 88 14:24:29 EDT

### bug number:   522
### area:         server
### severity:     low
### comments:     bug 496 revisited

The previous fix was incorrect.  First, it's better to check for empty
rectangle after you've clipped, rather than before.  Second, it was clipping
prect->{x,y} against themselves, rather than against pextent.  Third, once
box.{x1,y1} are correctly clipped, you can't use them to initially compute
{x2,y2}.

*** /tmp/,RCSt1a02676	Thu May 19 09:41:12 1988
- --- server/ddx/mfb/mfbfillrct.c	Thu May 19 09:40:55 1988
***************
*** 21,27 ****
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbfillrct.c,v 1.35 88/05/18 15:52:48 keith Exp $ */
  #include "X.h"
  #include "Xprotostr.h"
  #include "pixmapstr.h"
- --- 21,27 ----
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbfillrct.c,v 1.36 88/05/19 09:40:35 rws Exp $ */
  #include "X.h"
  #include "Xprotostr.h"
  #include "pixmapstr.h"
***************
*** 98,109 ****
  	BoxRec box;
  	int	x2, y2;
  
- - 	if (prect->width == 0 || prect->height == 0)
- - 	{
- - 	    prect++;
- - 	    continue;
- - 	}
- - 
  	/*
  	 * clip the box to the extent of the region --
  	 * avoids overflowing shorts and minimizes other
- --- 98,103 ----
***************
*** 111,134 ****
  	 */
  
  	box.x1 = prect->x;
! 	if (prect->x > box.x1)
! 		box.x1 = prect->x;
  
  	box.y1 = prect->y;
! 	if (prect->y > box.y1)
! 		box.y1 = prect->y;
  
! 	x2 = (int) box.x1 + (int) prect->width;
  	if (x2 > pextent->x2)
  		x2 = pextent->x2;
  	box.x2 = x2;
  
! 	y2 = (int) box.y1 + (int) prect->height;
  	if (y2 > pextent->y2)
  		y2 = pextent->y2;
  	box.y2 = y2;
  
  	prect++;
  
  	switch((*pGC->pScreen->RectIn)(prgnClip, &box))
  	{
- --- 105,131 ----
  	 */
  
  	box.x1 = prect->x;
! 	if (box.x1 < pextent->x1)
! 		box.x1 = pextent->x1;
  
  	box.y1 = prect->y;
! 	if (box.y1 < pextent->y1)
! 		box.y1 = pextent->y1;
  
! 	x2 = (int) prect->x + (int) prect->width;
  	if (x2 > pextent->x2)
  		x2 = pextent->x2;
  	box.x2 = x2;
  
! 	y2 = (int) prect->y + (int) prect->height;
  	if (y2 > pextent->y2)
  		y2 = pextent->y2;
  	box.y2 = y2;
  
  	prect++;
+ 
+ 	if ((box.x1 >= box.x2) || (box.y1 >= box.y2))
+ 	    continue;
  
  	switch((*pGC->pScreen->RectIn)(prgnClip, &box))
  	{


*** /tmp/,RCSt1a02710	Thu May 19 09:46:37 1988
- --- server/ddx/hp/mfb/mfbfillrct.c	Thu May 19 09:46:27 1988
***************
*** 48,54 ****
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbfillrct.c,v 1.1 87/12/16 13:31:56 hp Exp $ */
  #include "X.h"
  #include "Xprotostr.h"
  #include "pixmapstr.h"
- --- 48,54 ----
  SOFTWARE.
  
  ******************************************************************/
! /* $Header: mfbfillrct.c,v 1.2 88/05/19 09:46:11 rws Exp $ */
  #include "X.h"
  #include "Xprotostr.h"
  #include "pixmapstr.h"
***************
*** 84,89 ****
- --- 84,90 ----
      register BoxPtr pbox;	/* used to clip with */
      register BoxPtr pboxClipped;
      BoxPtr pboxClippedBase;
+     BoxPtr pextent;
  
      int alu;
      void (* pfn) ();
***************
*** 116,135 ****
      }
  
      prect = prectInit;
      while (nrectFill--)
      {
  	BoxRec box;
  
! 	if (prect->width <= 0 || prect->height <= 0)
! 	{
! 	    prect++;
! 	    continue;
! 	}
  	box.x1 = prect->x;
  	box.y1 = prect->y;
! 	box.x2 = box.x1 + prect->width;
! 	box.y2 = box.y1 + prect->height;
  	prect++;
  
  	switch((*pGC->pScreen->RectIn)(prgnClip, &box))
  	{
- --- 117,158 ----
      }
  
      prect = prectInit;
+ 
+     pextent = (*pGC->pScreen->RegionExtents)(prgnClip);
+ 
      while (nrectFill--)
      {
  	BoxRec box;
+ 	int	x2, y2;
  
! 	/*
! 	 * clip the box to the extent of the region --
! 	 * avoids overflowing shorts and minimizes other
! 	 * computations
! 	 */
! 
  	box.x1 = prect->x;
+ 	if (box.x1 < pextent->x1)
+ 		box.x1 = pextent->x1;
+ 
  	box.y1 = prect->y;
! 	if (box.y1 < pextent->y1)
! 		box.y1 = pextent->y1;
! 
! 	x2 = (int) prect->x + (int) prect->width;
! 	if (x2 > pextent->x2)
! 		x2 = pextent->x2;
! 	box.x2 = x2;
! 
! 	y2 = (int) prect->y + (int) prect->height;
! 	if (y2 > pextent->y2)
! 		y2 = pextent->y2;
! 	box.y2 = y2;
! 
  	prect++;
+ 
+ 	if ((box.x1 >= box.x2) || (box.y1 >= box.y2))
+ 	    continue;
  
  	switch((*pGC->pScreen->RectIn)(prgnClip, &box))
  	{
