Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Wed, 3 Aug 88 16:37:39 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA15605; Wed, 3 Aug 88 16:37:38 EDT
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Wed, 3 Aug 88 12:36:21 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA14684; Wed, 3 Aug 88 13:37:42 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Wed, 3 Aug 88 13:39:05 pdt
Message-Id: <8808032039.AA02286@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: xwininfo id message
X-Mailer: mh6.5
Date: Wed, 03 Aug 88 13:39:00 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   823
### area:         xwininfo
### severity:     low
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	message cut off if window id is invalid.
DESCRIPTION:
	If the '-id' specification given to xwininfo is invalid, the error
	message is rather difficult to read.
	Minor enhancement.
REPEAT-BY:
	xwininfo -id 99999
SUGGESTED FIX:
*** clients/xwininfo/xwininfo.c.old	Fri Apr 22 10:33:34 1988
--- clients/xwininfo/xwininfo.c	Fri Apr 22 10:58:18 1988
***************
*** 184,189
  
  
  /*
   * Routine to display a window id in dec/hex with name if window has one
   */
  

--- 184,207 -----
  
  
  /*
+  * Error handler for invalid id #
+  */
+ get_error(disp, error_event)
+   Display	*disp;
+   XErrorEvent *error_event;
+ {
+   char	buffer[100];
+ 
+   printf("\n");
+   XGetErrorText(disp, error_event->error_code, buffer, 99);
+   if (strlen(buffer))
+ 	printf("%s: error: %s\n", program_name, buffer);
+   else
+ 	printf("%s: error code = %d\n", program_name, error_event->error_code);
+   exit(1);
+ }
+ 
+ /*
   * Routine to display a window id in dec/hex with name if window has one
   */
  
***************
*** 197,202
  	  printf(" (none)\n");
  	  return;
    }
    if (!XFetchName(dpy, window, &win_name)) { /* Get window name if any */
  	  printf(" (has no name)\n");
  	  return;

--- 215,222 -----
  	  printf(" (none)\n");
  	  return;
    }
+ 
+   XSetErrorHandler(get_error);
    if (!XFetchName(dpy, window, &win_name)) { /* Get window name if any */
  	  printf(" (has no name)\n");
  	  return;
***************
*** 201,206
  	  printf(" (has no name)\n");
  	  return;
    }
    if (win_name) {
      printf(" (%s)\n", win_name);
      free(win_name);

--- 221,228 -----
  	  printf(" (has no name)\n");
  	  return;
    }
+   XSetErrorHandler(NULL);
+ 
    if (win_name) {
      printf(" (%s)\n", win_name);
      free(win_name);

