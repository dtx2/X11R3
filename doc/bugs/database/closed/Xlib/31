Return-Path: swick@athena.mit.edu
Received: by expo.lcs.mit.edu; Tue, 14 Jun 88 16:44:19 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA01219; Tue, 14 Jun 88 16:42:55 EDT
Received: by LYRE.MIT.EDU (5.45/4.7) id AA00651; Tue, 14 Jun 88 16:42:44 EDT
Message-Id: <8806142042.AA00651@LYRE.MIT.EDU>
To: xbugs@expo.lcs.mit.edu
Subject: XrmPutLineResource, XrmGetStringDatabase can store wrong values
Date: Tue, 14 Jun 88 16:42:40 EDT
From: Ralph R. Swick <swick@athena.mit.edu>

### bug number:   603
### area:         Xlib
### severity:     low
### comments:     


VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	any

DISPLAY:
	n.a.

WINDOW MANAGER:
	n.a.

AREA:
	Xlib

SYNOPSIS:
	Attempts to store a resource with a nil value will frequently
	store a non-nil value.  Blank lines in a line resource will
	cause extra resource names to be stored.  Extra odd resources
	may be stored into the resource database,

DESCRIPTION:
	The internal routine PutLineResources was not being sufficiently
	careful about treating \n as a string terminator.  It also runs
	off the end of the input string, usually storing a bogus entry.

REPEAT-BY:
	XrmGetStringDatabase("first:value\nsecond:");
	XrmGetStringDatabase("abcdef:ghijkl\n\n");
	and either of the above with XrmPutLineResource().

FILES:
	lib/X/Xrm.c

FIX:
*** old/lib/X/Xrm.c
--- lib/X/Xrm.c
***************
*** 1,5 ****
  #ifndef lint
! static char rcsid[] = "$Header: Xrm.c,v 1.11 88/04/09 16:21:21 rws Exp $";
  #endif lint
  
  /***********************************************************
--- 1,5 ----
  #ifndef lint
! static char rcsid[] = "$Header: Xrm.c,v 1.13 88/06/14 16:40:44 swick Exp $";
  #endif lint
  
  /***********************************************************
***************
*** 346,355 ****
  	if (*src == '\0') return NULL;
  	while (--nchars >= 0) {
  		*dst++ = c = *src++;
! 		if (c == '\n' || c == '\0') {
  			*dp = src;
  			return (buf);
  		}
  	}
  	return buf;
  }
--- 346,359 ----
  	if (*src == '\0') return NULL;
  	while (--nchars >= 0) {
  		*dst++ = c = *src++;
! 		if (c == '\n') {
  			*dp = src;
  			return (buf);
  		}
+ 		if (c == '\0') {
+ 			*dp = src-1;
+ 			return (buf);
+ 		}
  	}
  	return buf;
  }
***************
*** 649,656 ****
  	if (s == NULL) return;
  
  	/* Scan to start of resource name/class specification */
! 	for (; isspace(*s); s++) {};
! 	if ((*s == '\0') || (*s == '\n') || (*s == '#')) continue;
      
  	/* Scan to end of resource name/class specification */
  	for (nameStr = s, ts = s-1; ; s++) {
--- 653,660 ----
  	if (s == NULL) return;
  
  	/* Scan to start of resource name/class specification */
! 	for (; ((ch = *s) != '\n') && isspace(ch); s++) {};
! 	if ((ch == '\0') || (ch == '\n') || (ch == '#')) continue;
      
  	/* Scan to end of resource name/class specification */
  	for (nameStr = s, ts = s-1; ; s++) {
***************
*** 668,674 ****
  	ts[1] = '\0';
  	
  	/* Scan to start of resource value */
! 	for (; isspace(*s); s++) {};
      
  	/* Scan to end of resource value */
  	for (valStr = ts = s; ((ch = *s) != '\0' && ch != '\n');s++) {
--- 672,678 ----
  	ts[1] = '\0';
  	
  	/* Scan to start of resource value */
! 	for (; *s != '\n' && isspace(*s); s++) {};
      
  	/* Scan to end of resource value */
  	for (valStr = ts = s; ((ch = *s) != '\0' && ch != '\n');s++) {

