Return-Path: elsie!ado@cvl.umd.edu
Received: by expo.lcs.mit.edu; Sat, 16 Jul 88 19:56:41 EDT
Received: by cvl.umd.edu (5.54/4.7)
	id AA00779; Sat, 16 Jul 88 19:57:08 EDT
Received: by elsie.UUCP (5.51/4.7)
	id AA10930; Sat, 16 Jul 88 19:56:41 EDT
Date: Sat, 16 Jul 88 19:56:41 EDT
From: elsie!ado@cvl.umd.edu (Arthur David Olson)
Message-Id: <8807162356.AA10930@elsie.UUCP>
To: expo.lcs.mit.edu!xbugs@cvl.umd.edu

### bug number:   735
### area:         Xlib
### severity:     low
### comments:     


VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/160

CLIENT OPERATING SYSTEM:
	Sun UNIX 4.2 Release 3.5

DISPLAY:
	Sun B&W

SYNOPSIS:
	Clients can block in "XReadEvents" when they shouldn't.

DESCRIPTION:
	Before XReadEvents tries to read in events, it calls _XFlush.
	If the server falls behind, _XFlush in turn calls _XWaitForWritable,
	which may end up reading in events.  But these event reads aren't
	noticed by XReadEvents.

REPEAT-BY:
	Start up an xterm window in an out-of-the-way corner of the screen,
	then type this command at /bin/sh:
		while : ; do cat /usr/include/X11/*.h ; done
	and start doing some work in another window on the screen.  Note that
	after a while output to the out-of-the-way window stops.  If you move
	the cursor into and out of the out-of-the-way window, output resumes.

FIX:
*** 1.2/XlibInt.c	Sat Jul 16 17:29:07 1988
--- 1.3/XlibInt.c	Sat Jul 16 17:29:12 1988
***************
*** 124,130 ****
--- 124,134 ----
  	long pend_not_register; /* because can't "&" a register variable */
  	register long pend;
  	register xEvent *ev;
+ #if !defined ASWAS
+ 	register int	oldlength;
  
+ 	oldlength = QLength(dpy);
+ #endif /* !defined ASWAS */
  	_XFlush (dpy);
  	do {
  	    /* find out how much data can be read */
***************
*** 134,139 ****
--- 138,149 ----
  
  	    /* must read at least one xEvent; if none is pending, then
  	       we'll just block waiting for it */
+ #if !defined ASWAS
+ 	    /* Note, though, that we might have read in an event when
+ 	       we flushed; if we did, we don't block */
+ 	    if (pend < sizeof *ev && oldlength < QLength(dpy))
+ 		break;
+ #endif /* !defined ASWAS */
  	    if (pend < sizeof(xEvent))
  	    	pend = sizeof (xEvent);
  		
-- 
	ado@ncifcrf.gov			ADO is a trademark of Ampex.

