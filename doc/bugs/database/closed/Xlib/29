Return-Path: mcvax!cwi.nl!guido@uunet.uu.net
Received: by expo.lcs.mit.edu; Fri, 24 Jun 88 10:26:18 EDT
Received: from mcvax.UUCP by uunet.UU.NET (5.59/1.14) with UUCP 
	id AA02424; Fri, 24 Jun 88 08:53:28 EDT
Received: by mcvax.cwi.nl; Fri, 24 Jun 88 14:37:31 +0200 (MET)
Received: by piring.cwi.nl; Fri, 24 Jun 88 14:37:24 +0200 (MET)
Message-Id: <8806241237.AA08008@piring.cwi.nl>
To: xbugs@expo.lcs.mit.edu
Cc: mcvax!cwi.nl!guido@uunet.uu.net
Subject: XSetRegion doesn't work for non-rectangular region
From: Guido van Rossum <mcvax!cwi.nl!guido@uunet.uu.net>
Organization: CWI (Centre for Mathematics and Computer Science), Amsterdam
Phone: +31 20 5924138 (work), +31 20 225521 (home), +31 20 5924199 (fax)
Date: Fri, 24 Jun 88 14:37:21 +0100
Sender: mcvax!cwi.nl!guido@uunet.uu.net

### bug number:   639
### area:         Xlib
### severity:     low
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	VaxStation 2000

CLIENT OPERATING SYSTEM:
	Ultrix 2.0

DISPLAY:
	QVSS

WINDOW MANANGER:
	twm 3.0 with local changes

SYNOPSIS:
	XSetRegion doesn't work for non-rectangular region

DESCRIPTION:
	A bug in XSetRegion causes XSetClipRectangles to be called with
	bogus arguments when the region consists of more than one
	rectangle.  The reason is that the pointer 'xr' to the next
	rectangle is never incremented.
	
	BTW: Shouldn't the last argument to XSetClipRectangles be set to
	YXBanded?

REPEAT-BY:
	Sorry, the program in which I detected this is too big to
	include.  Inspection of the source for XSetRegion showed an
	obvious logic error, so I didn't bother to construct a simpler
	program demonstrating the error.

FIX:
*** /backup/X/lib/X/XRegion.c	Fri Feb 26 04:57:09 1988
--- XRegion.c	Fri Jun 24 14:32:59 1988
***************
*** 171,179 ****
      register Region r;
  {
      register int i;
!     register XRectangle *xr;
      LockDisplay (dpy);
!     xr = (XRectangle *) 
      	_XAllocScratch(dpy, (unsigned long)(r->numRects * sizeof (XRectangle)));
      for (i = 0; i < r->numRects; i++) {
          xr->x = r->rects[i].x1;
--- 171,179 ----
      register Region r;
  {
      register int i;
!     register XRectangle *xr, *xxr;
      LockDisplay (dpy);
!     xxr = xr = (XRectangle *) 
      	_XAllocScratch(dpy, (unsigned long)(r->numRects * sizeof (XRectangle)));
      for (i = 0; i < r->numRects; i++) {
          xr->x = r->rects[i].x1;
***************
*** 180,187 ****
  	xr->y = r->rects[i].y1;
  	xr->width = r->rects[i].x2 - r->rects[i].x1;
  	xr->height = r->rects[i].y2 - r->rects[i].y1;
        }
!     _XSetClipRectangles(dpy, gc, 0, 0, xr, r->numRects, Unsorted);
      UnlockDisplay(dpy);
      SyncHandle();
  }
--- 180,188 ----
  	xr->y = r->rects[i].y1;
  	xr->width = r->rects[i].x2 - r->rects[i].x1;
  	xr->height = r->rects[i].y2 - r->rects[i].y1;
+ 	xr++;
        }
!     _XSetClipRectangles(dpy, gc, 0, 0, xxr, r->numRects, Unsorted);
      UnlockDisplay(dpy);
      SyncHandle();
  }
--
Guido van Rossum, Centre for Mathematics and Computer Science (CWI), Amsterdam
guido@cwi.nl or mcvax!guido or (from ARPAnet) guido%cwi.nl@uunet.uu.net

