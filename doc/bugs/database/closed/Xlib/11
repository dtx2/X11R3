Return-Path: swick@athena.mit.edu
Received: by expo.lcs.mit.edu; Tue, 24 May 88 16:26:37 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA20044; Tue, 24 May 88 15:25:28 EST
Received: by LYRE.MIT.EDU (5.45/4.7) id AA14930; Tue, 24 May 88 16:24:57 EDT
Message-Id: <8805242024.AA14930@LYRE.MIT.EDU>
To: xbugs@expo.lcs.mit.edu
Subject: XPending can return the wrong answer
Date: Tue, 24 May 88 16:24:54 EDT
From: Ralph R. Swick <swick@athena.mit.edu>

### bug number:   536
### area:         Xlib
### severity:     medium
### comments:     


VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	Any

DISPLAY:
	Any

AREA:
	Xlib

SYNOPSIS:
	XPending and XEventsQueued(,QueuedAfterFlush) might return 0 when
	there are events in the queue.

	X*Event might block indefinitely waiting for an event that has
	already arrived.

DESCRIPTION:
	If XEventsQueued(,QueuedAfterFlush) actually flushes, then events
	can be read and enqueued by _XWaitForWritable.  If all pending events
	are enqueued before control is returned to XEventsQueued, XEventsQueued
	returns 0 rather than the proper count.

	Similarly for the X*Event routines (which all call _XReadEvents),
	if all pending events are enqueued by _XWaitForWritable, _XReadEvents
	will block for one additional event.

	See also bugs 449 (Xt) and 476 (Xlib).

REPEAT-BY:
	Give the server a lot of work to do and compare the return value
	of XPending with dpy->qlen.  Look at the code.

FILES:
	lib/X/XlibInt.c

FIX:

*** old/lib/X/XlibInt.c
--- lib/X/XlibInt.c
***************
*** 99,105 ****
  	if (BytesReadable(dpy->fd, (char *) &pend) < 0)
  	    (*_XIOErrorFunction)(dpy);
  	if ((len = pend) < sizeof(xReply))
! 	    return(0);
  	else if (len > BUFSIZE)
  	    len = BUFSIZE;
  	len /= sizeof(xReply);
--- 99,105 ----
  	if (BytesReadable(dpy->fd, (char *) &pend) < 0)
  	    (*_XIOErrorFunction)(dpy);
  	if ((len = pend) < sizeof(xReply))
! 	    return(dpy->qlen);	/* _XFlush can enqueue events */
  	else if (len > BUFSIZE)
  	    len = BUFSIZE;
  	len /= sizeof(xReply);
***************
*** 115,121 ****
  }
  
  /* _XReadEvents - Flush the output queue,
!  * then read as many events as possible and enqueue them
   */
  _XReadEvents(dpy)
  	register Display *dpy;
--- 115,121 ----
  }
  
  /* _XReadEvents - Flush the output queue,
!  * then read as many events as possible (but at least 1) and enqueue them
   */
  _XReadEvents(dpy)
  	register Display *dpy;
***************
*** 124,131 ****
--- 124,134 ----
  	long pend_not_register; /* because can't "&" a register variable */
  	register long pend;
  	register xEvent *ev;
+ 	int qlen = dpy->qlen;
  
  	_XFlush (dpy);
+ 	if (qlen != dpy->qlen)
+ 	    return;
  	do {
  	    /* find out how much data can be read */
  	    if (BytesReadable(dpy->fd, (char *) &pend_not_register) < 0)

