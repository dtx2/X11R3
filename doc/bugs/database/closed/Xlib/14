Return-Path: pete@sun.com
Received: by expo.lcs.mit.edu; Fri, 22 Apr 88 14:01:10 EDT
Received: from snail.sun.com by Sun.COM (4.0/SMI-4.0)
	id AA21243; Fri, 22 Apr 88 10:59:31 PDT
Received: from europa.sun.com by snail.sun.com (4.0/SMI-3.2)
	id AA26266; Fri, 22 Apr 88 10:58:30 PDT
Received: by europa.sun.com (4.0/SMI-4.0Beta)
	id AA13153; Fri, 22 Apr 88 10:58:40 PDT
Date: Fri, 22 Apr 88 10:58:40 PDT
From: pete@sun.com (Pete Ma)
Message-Id: <8804221758.AA13153@europa.sun.com>
To: xbugs@expo.lcs.mit.edu
Subject: XChangeGC bug

### bug number:   407
### area:         Xlib
### severity:     low
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	All Sun machines

CLIENT OPERATING SYSTEM:
	SunOS4.0

DISPLAY:
	bwtwo and cg2

SYNOPSIS:
	 XChangeGC doesn't check whether font, tile, stipple have changed before flushing gc cache

DESCRIPTION:
	 in XChGC.c, the code checks to see if at least one of 
	 GCFont, GCTile or GCStipple is specified in the vlauemask, if
	 it is, then it doesn't check whether the new value is different
	 from the old before calling _XFlushGCCache.  This could cause
	 unnecessary gc flushes.  On the other hand XSetFont, XSetStipple, and
	 XSetTile all do the right thing.

REPEAT-BY:
	(What you did to get the error; include test program if appropriate)

FIX:
XChGC.c
	20c20,25
<     if (valuemask & (GCFont | GCTile | GCStipple)) _XFlushGCCache(dpy, gc);
---
>     
>     if ((valuemask & GCFont) && (values->font != gc->values.font) ||
>         (valuemask & GCTile) && (values->tile != gc->values.tile) ||
> 	(valuemask & GCStipple) && (values->stipple != gc->values.stipple)) {
>         _XFlushGCCache(dpy, gc);
>     }



