Return-Path: @XX.LCS.MIT.EDU,@relay.cs.net:davidsc%shark.gwd.tek.com@tektronix.tek.com
Received: by expo.lcs.mit.edu; Mon, 15 Aug 88 17:49:28 EDT
Received: from RELAY.CS.NET by XX.LCS.MIT.EDU with TCP/SMTP; Mon 15 Aug 88 17:51:11-EDT
Received: from relay2.cs.net by RELAY.CS.NET id am03412; 15 Aug 88 17:38 EDT
Received: from tektronix.tek.com by RELAY.CS.NET id aa16866; 15 Aug 88 17:12 EDT
Received: from shark.GWD.TEK.COM by tektronix.TEK.COM (5.51/6.24)
	id AA14072; Mon, 15 Aug 88 13:12:57 PDT
Received: by shark.GWD.TEK.COM (5.16/6.24)
	id AA23492; Mon, 15 Aug 88 13:14:01 PDT
From: David Schiferl <davidsc@shark.gwd.tek.com>
Message-Id: <8808152014.AA23492@shark.GWD.TEK.COM>
Date: Mon, 15 Aug 88 13:13:59 PDT
To: xbugs@expo.lcs.mit.edu
Cc: alt@shark.gwd.tek.com
Fcc: //shark/bd/X11/doc/bugtracking/xbugs_mail, pending
Subject: X11 R2 bug report: XPutImage bits_per_pixel=4, odd req_xoffset coded

### bug number:   874
### area:         Xlib
### severity:     low
### comments:     


David Schiferl
M.S. 61-277
Tektronix, Inc.
P.O. Box 1000
Wilsonville, OR
	 97070-1000

(503) 685-2482
davidsc@shark.tek.com

--------------------
VERSION:
	X11 release 2 with fixes 1-186 applied

CLIENT MACHINE:
	4-plane systems

CLIENT OPERATING SYSTEM:
	any

DISPLAY:
	any

SYNOPSIS:
	XPutImage() had not implemented the case when bits_per_pixel is 4
	and req_xoffset is odd for Z format images.
	I have implemented this case.

DESCRIPTION:
	Area: xlib
	Files: lib/X/XPutImage.c

REPEAT-BY:
	Comment in original code:
      /* XXX this won't work when bits_per_pixel is 4 and req_xoffset is odd */

FIX:

*** /tmp/,RCSt1004026	Wed Aug 10 17:33:06 1988
--- XPutImage.c	Tue Aug  9 15:52:02 1988
***************
*** 193,198
  }
  
  static int
  SwapBits (src, dest, srclen, srcinc, destinc, height)
      register unsigned char *src, *dest;
      long srclen, srcinc, destinc;

--- 193,217 -----
  }
  
  static int
+ ShiftNibblesLeft (src, dest, srclen, srcinc, destinc, height)
+     register unsigned char *src, *dest;
+     long srclen, srcinc, destinc;
+     unsigned int height;
+ {
+     register long h, n;
+     register unsigned char c1, c2;
+ 
+     srcinc -= srclen;
+     destinc -= srclen;
+     for (h = height; --h >= 0; src += srcinc, dest += destinc)
+ 	for (n = srclen; --n >= 0; ) {
+ 	    c1 = *src++;
+ 	    c2 = *src;
+ 	    *dest++ = ((c1 & 0x0f) << 4) | ((c2 & 0xf0) >> 4);
+ 	}
+ }
+ 
+ static int
  SwapBits (src, dest, srclen, srcinc, destinc, height)
      register unsigned char *src, *dest;
      long srclen, srcinc, destinc;
***************
*** 510,516
      int req_xoffset, req_yoffset, dest_bits_per_pixel, dest_scanline_pad;
  {
      long bytes_per_src, bytes_per_dest, length;
!     unsigned char *src, *dest;
  
      req->leftPad = 0;
      bytes_per_src = ROUNDUP((long)req->width * image->bits_per_pixel, 8) >> 3;

--- 529,535 -----
      int req_xoffset, req_yoffset, dest_bits_per_pixel, dest_scanline_pad;
  {
      long bytes_per_src, bytes_per_dest, length;
!     unsigned char *src, *dest, *shifted_src = NULL;
  
      req->leftPad = 0;
      bytes_per_src = ROUNDUP((long)req->width * image->bits_per_pixel, 8) >> 3;
***************
*** 518,524
  			     dest_scanline_pad) >> 3;
      length = bytes_per_dest * req->height;
      req->length += (length + 3) >> 2;
!     /* XXX this won't work when bits_per_pixel is 4 and req_xoffset is odd */
      src = (unsigned char *)image->data +
  	  (req_yoffset * image->bytes_per_line) +
  	  ((req_xoffset * image->bits_per_pixel) >> 3);

--- 537,543 -----
  			     dest_scanline_pad) >> 3;
      length = bytes_per_dest * req->height;
      req->length += (length + 3) >> 2;
! 
      src = (unsigned char *)image->data +
            (req_yoffset * image->bytes_per_line) +
            ((req_xoffset * image->bits_per_pixel) >> 3);
***************
*** 520,527
      req->length += (length + 3) >> 2;
      /* XXX this won't work when bits_per_pixel is 4 and req_xoffset is odd */
      src = (unsigned char *)image->data +
! 	  (req_yoffset * image->bytes_per_line) +
! 	  ((req_xoffset * image->bits_per_pixel) >> 3);
  
      /* when req_xoffset > 0, we have to worry about stepping off the
       * end of image->data.

--- 539,552 -----
      req->length += (length + 3) >> 2;
  
      src = (unsigned char *)image->data +
!           (req_yoffset * image->bytes_per_line) +
!           ((req_xoffset * image->bits_per_pixel) >> 3);
!     if ((image->bits_per_pixel == 4) && ((unsigned int) req_xoffset & 0x01)) {
! 	shifted_src = Xmalloc(req->height * image->bytes_per_line);
! 	ShiftNibblesLeft(src, shifted_src, bytes_per_src,
! 		  image->bytes_per_line, image->bytes_per_line, req->height);
! 	src = shifted_src;
!     }
  
      /* when req_xoffset > 0, we have to worry about stepping off the
       * end of image->data.
***************
*** 532,537
  	((req_xoffset == 0) ||
  	 ((req_yoffset + req->height) < image->height))) {
  	Data(dpy, (char *)src, length);
  	return;
      }
  

--- 557,564 -----
  	((req_xoffset == 0) ||
  	 ((req_yoffset + req->height) < image->height))) {
  	Data(dpy, (char *)src, length);
+ 	if (shifted_src)
+ 	    Xfree(shifted_src);
  	return;
      }
  
***************
*** 561,566
  	dpy->bufptr += length;
      else
  	_XSend(dpy, (char *)dest, length);
  }
  
  static void

--- 588,596 -----
  	dpy->bufptr += length;
      else
  	_XSend(dpy, (char *)dest, length);
+ 
+     if (shifted_src)
+         Xfree(shifted_src);
  }
  
  static void

