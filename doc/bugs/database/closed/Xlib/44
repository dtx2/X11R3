Return-Path: jlf%sierra.CRAY.COM@uc.msc.umn.edu
Received: by expo.lcs.mit.edu; Thu, 4 Aug 88 18:10:14 EDT
Received: by uc.msc.umn.edu (5.54/1.14)
	id AA12640; Thu, 4 Aug 88 17:07:57 CDT
Received: from jlf.cray.com by hall.cray.com
	id AA05544; 3.2/CRI-3.1; Thu, 4 Aug 88 17:14:11 CDT
Received: by jlf.cray.com
	id AA00923; 3.2/CRI-3.1; Thu, 4 Aug 88 17:14:09 CDT
Date: Thu, 4 Aug 88 17:14:09 CDT
From: jlf%sierra.CRAY.COM@uc.msc.umn.edu (John Freeman)
Message-Id: <8808042214.AA00923@jlf.cray.com>
To: xbugs@expo.lcs.mit.edu
Subject: Cray XSetModifierMapping bug report

### bug number:   826
### area:         Xlib
### severity:     low
### comments:     [done -- jim]

VERSION:
	X11 release 2  Xlib

CLIENT MACHINE:
	Cray-XMP and Cray2

CLIENT OPERATING SYSTEM:
	UNICOS 5.0

DISPLAY:
	sun3/50

SYNOPSIS:

	XSetModifierMapping putting data in wrong location of output buffer

DESCRIPTION:

Xlib failed these tests with unexpected modifiers, esp 'lock modifier'.
XSetModiferMapping is trying to bcopy data from the user into 
the output buffer at location &req[1], where req is a pointer to an 
xSetModifierMappingReq.  This is just a variation of the (req + 1) 
problem, meaning the compiler will add the sizeof a Cray 
xSetModifierMappingReq, not a SIZEOF xSetModifierMappingReq.

REPEAT-BY:

	Run test suite for XGetModifierMapping

FIX:

Fixed by using (char *) req + SIZEOF(xSetModifierMappingReq).
***************
*** 50,61 ****
  
      req->numKeyPerModifier = modifier_map->max_keypermod;
  
- #ifdef CRAY
-     bcopy(modifier_map->modifiermap, 
- 	(char *)req + SIZEOF(xSetModifierMappingReq), mapSize);
- #else
      bcopy(modifier_map->modifiermap, (char *)&req[1], mapSize);
- #endif
  
      (void) _XReply(dpy, (xReply *) & rep,
  	(SIZEOF(xSetModifierMappingReply) - SIZEOF(xReply)) >> 2, xTrue);
--- 50,56 ----

