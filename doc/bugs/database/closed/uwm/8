Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: from ATHENA (ATHENA.MIT.EDU) by EXPO.LCS.MIT.EDU; Fri, 18 Mar 88 12:28:01 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA21476; Fri, 18 Mar 88 12:26:45 EST
Received: from hp-pcd.HP.COM ([15.0.200.33]) by hplabs.HP.COM with SMTP ; Fri, 18 Mar 88 09:24:50 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA14990; Fri, 18 Mar 88 09:28:21 PST
Received: from hpcvxlc by hpcvxlc.HP.COM; Fri, 18 Mar 88 09:28:45 pst
Message-Id: <8803181728.AA27146@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: uwm bug
X-Mailer: mh6.5
Date: Fri, 18 Mar 88 09:28:39 PST
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   176
### area:         uwm
### severity:     
### assigned to:  
### status:       closed
### comments:     includes source code for fix

VERSION:
	X11 release 2
SYNOPSIS:
	When colors are specified for all the elements in a menu, the menu is
	in black and white.
DESCRIPTION:
	When the foreground/background and the highlight pair is specified
	for the menu declaration; I.E:
		menu = "Window Manager" (wheat: navy: wheat: navy) {
	and the foreground/background is specified for ALL the elements
	of the menu; I.E:
		Move:			(navy: wheat):		f.move
		MoveOpaque:		(navy: wheat):		f.moveopaque
		Size:			(navy: wheat):		f.resize
		Raise:			(navy: wheat):		f.raise
		Lower:			(navy: wheat):		f.lower
		Iconify:		(navy: wheat):		f.iconify
		Restart uwm:		(navy: wheat):		f.restart
	the resulting menu is black and white.

	If the menu declaration does not have anything specified for 
	foreground/background or the highlight (or both are missing); I.E:
		menu = "Window Manager" (wheat: navy::) {
	or
		menu = "Window Manager" (:: wheat: navy) {
	or an element does not have anything specified for foreground/back-
	ground, the menu colors will be correct.

	The problem resides in GetMenuColors routine. Coming into the routine,
	a flag is TRUE, meaning that the menu is going to use black & white for
	its colors. If colors are found, the flag is suppose to be set to FALSE.
	Currently, the logic for the routine is flipped. The flag is getting
	set to FALSE when THERE IS NO COLOR FOUND. Therefore if just one of the
	color pairs is not specified, the colors for the menu header and
	elements will be set and the flag will be set to FALSE.
REPEAT-BY:
	Specify colors for all the elements in a menu.
FIX:
	Change the logic so that the flag is set to FALSE when good colors are
	found for the menu header or elements.
*** Menu.c.old	Thu Mar 17 14:32:36 1988
--- Menu.c	Thu Mar 17 15:06:32 1988
***************
*** 586,591
                XAllocColor(dpy, DefaultColormap(dpy, scr), &menu->bg))) {
              menu->fg.pixel = MTextForground;
              menu->bg.pixel = MTextBackground;
  	    alternateGC = False;
          } else {
              AdjustMaxColors(menu->fg.pixel);

--- 586,592 -----
                XAllocColor(dpy, DefaultColormap(dpy, scr), &menu->bg))) {
              menu->fg.pixel = MTextForground;
              menu->bg.pixel = MTextBackground;
+ #ifdef broken
  	    alternateGC = False;
  #endif
          } else {
***************
*** 587,592
              menu->fg.pixel = MTextForground;
              menu->bg.pixel = MTextBackground;
  	    alternateGC = False;
          } else {
              AdjustMaxColors(menu->fg.pixel);
              AdjustMaxColors(menu->bg.pixel);

--- 588,594 -----
              menu->bg.pixel = MTextBackground;
  #ifdef broken
  	    alternateGC = False;
+ #endif
          } else {
              AdjustMaxColors(menu->fg.pixel);
              AdjustMaxColors(menu->bg.pixel);
***************
*** 590,596
          } else {
              AdjustMaxColors(menu->fg.pixel);
              AdjustMaxColors(menu->bg.pixel);
- #ifdef broken
  	    alternateGC = FALSE;
  #endif
          }

--- 592,597 -----
          } else {
              AdjustMaxColors(menu->fg.pixel);
              AdjustMaxColors(menu->bg.pixel);
  	    alternateGC = FALSE;
          }
  
***************
*** 592,598
              AdjustMaxColors(menu->bg.pixel);
  #ifdef broken
  	    alternateGC = FALSE;
- #endif
          }
  
          /*

--- 593,598 -----
              AdjustMaxColors(menu->fg.pixel);
              AdjustMaxColors(menu->bg.pixel);
  	    alternateGC = FALSE;
          }
  
          /*
***************
*** 607,612
                XAllocColor(dpy, DefaultColormap(dpy, scr), &menu->hlbg))) {
              menu->hlfg.pixel = MTextBackground;
              menu->hlbg.pixel = MTextForground;
  	    alternateGC = False;
          } else {
              AdjustMaxColors(menu->hlfg.pixel);

--- 607,613 -----
                XAllocColor(dpy, DefaultColormap(dpy, scr), &menu->hlbg))) {
              menu->hlfg.pixel = MTextBackground;
              menu->hlbg.pixel = MTextForground;
+ #ifdef broken
  	    alternateGC = False;
  #endif
          } else {
***************
*** 608,613
              menu->hlfg.pixel = MTextBackground;
              menu->hlbg.pixel = MTextForground;
  	    alternateGC = False;
          } else {
              AdjustMaxColors(menu->hlfg.pixel);
              AdjustMaxColors(menu->hlbg.pixel);

--- 609,615 -----
              menu->hlbg.pixel = MTextForground;
  #ifdef broken
  	    alternateGC = False;
+ #endif
          } else {
              AdjustMaxColors(menu->hlfg.pixel);
              AdjustMaxColors(menu->hlbg.pixel);
***************
*** 611,617
          } else {
              AdjustMaxColors(menu->hlfg.pixel);
              AdjustMaxColors(menu->hlbg.pixel);
- #ifdef broken
  	    alternateGC = FALSE;
  #endif
          }

--- 613,618 -----
          } else {
              AdjustMaxColors(menu->hlfg.pixel);
              AdjustMaxColors(menu->hlbg.pixel);
  	    alternateGC = FALSE;
          }
  
***************
*** 613,619
              AdjustMaxColors(menu->hlbg.pixel);
  #ifdef broken
  	    alternateGC = FALSE;
- #endif
          }
  
          /*

--- 614,619 -----
              AdjustMaxColors(menu->hlfg.pixel);
              AdjustMaxColors(menu->hlbg.pixel);
  	    alternateGC = FALSE;
          }
  
          /*
***************
*** 627,632
                    XAllocColor(dpy, DefaultColormap(dpy, scr), &ml->bg))) {
                  ml->fg.pixel = MTextForground;
                  ml->bg.pixel = MTextBackground;
  		alternateGC = False;
              } else {
                  AdjustMaxColors(ml->fg.pixel);

--- 627,633 -----
                    XAllocColor(dpy, DefaultColormap(dpy, scr), &ml->bg))) {
                  ml->fg.pixel = MTextForground;
                  ml->bg.pixel = MTextBackground;
+ #ifdef broken
  		alternateGC = False;
  #endif
              } else {
***************
*** 628,633
                  ml->fg.pixel = MTextForground;
                  ml->bg.pixel = MTextBackground;
  		alternateGC = False;
              } else {
                  AdjustMaxColors(ml->fg.pixel);
                  AdjustMaxColors(ml->bg.pixel);

--- 629,635 -----
                  ml->bg.pixel = MTextBackground;
  #ifdef broken
  		alternateGC = False;
+ #endif
              } else {
                  AdjustMaxColors(ml->fg.pixel);
                  AdjustMaxColors(ml->bg.pixel);
***************
*** 631,637
              } else {
                  AdjustMaxColors(ml->fg.pixel);
                  AdjustMaxColors(ml->bg.pixel);
- #ifdef broken
  		alternateGC = FALSE;
  #endif
              }

--- 633,638 -----
              } else {
                  AdjustMaxColors(ml->fg.pixel);
                  AdjustMaxColors(ml->bg.pixel);
  		alternateGC = FALSE;
              }
          }
***************
*** 633,639
                  AdjustMaxColors(ml->bg.pixel);
  #ifdef broken
  		alternateGC = FALSE;
- #endif
              }
          }
  

--- 634,639 -----
                  AdjustMaxColors(ml->fg.pixel);
                  AdjustMaxColors(ml->bg.pixel);
  		alternateGC = FALSE;
              }
          }
  

