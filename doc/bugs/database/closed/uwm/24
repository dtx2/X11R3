Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Thu, 23 Jun 88 23:31:53 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA23852; Thu, 23 Jun 88 23:30:25 EDT
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Thu, 23 Jun 88 19:30:26 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA08652; Thu, 23 Jun 88 20:30:01 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Thu, 23 Jun 88 20:31:47 pdt
Message-Id: <8806240331.AA06744@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: uwm cursor jumps
X-Mailer: mh6.5
Date: Thu, 23 Jun 88 20:31:42 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   632
### area:         uwm
### severity:     low
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	Cursor jumps from icon to icon when doing a menu move/resize.
DESCRIPTION:
	At least that's how it was discovered.
	First have two or more icons. Bring up a menu so that one or more
	icons are at least partially obscured. Now pick the move command in
	the menu. Select an icon to move. As soon as the button is pressed
	to initiate the move, the cursor will jump from the icon selected to
	the icons that were partially obscured ending up on one of the icons
	that was obscured. You can go ahead and complete the move, but there
	is no guarantee that the jumped on icons will not be mangled.

	Here's whats happening. When the menu is unmapped, exposure events are
	generated for the partially obscured icons. The move routine attempts
	to catch these events and let GetButton handle them, but an
	UnMapNotify event is sitting in the queue before the exposure events.
	Therefore, the move routine passes them by. Later when the exposure
	events are seen, the variable Frozen does not equal 0, which causes
	GetButton to drop down into the KeyPress-on-icons section of code,
	which besides doing an update of the icon, it does a warp pointer to
	the icon it is updating. Whamo, jumping cursor.
REPEAT-BY:
	See above.
	I also had 'freeze' in my .uwmrc file.
SUGGESTED FIX:
	During a move, uwm is looking for a ButtonPress or ButtonRelease,
	so process any event in the queue until then.
*** clients/uwm/Move.c.old	Thu Jun 23 16:09:47 1988
--- clients/uwm/Move.c	Thu Jun 23 16:00:50 1988
***************
*** 123,129
       */
      while (QLength(dpy) > 0) {
          XPeekEvent(dpy, &button_event);
!         if (((XAnyEvent *)&button_event)->window == RootWindow(dpy, scr))
              break;
          GetButton(&button_event);
      }

--- 123,131 -----
       */
      while (QLength(dpy) > 0) {
          XPeekEvent(dpy, &button_event);
!         if (((XAnyEvent *)&button_event)->window == RootWindow(dpy, scr) &&
! 		(button_event.type == ButtonPress ||
! 			button_event.type == ButtonRelease))
              break;
          GetButton(&button_event);
      }

