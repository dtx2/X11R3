Return-Path: jim
Received: by expo.lcs.mit.edu; Fri, 8 Jul 88 17:04:49 EDT
Date: Fri, 8 Jul 88 17:04:49 EDT
From: jim@expo.lcs.mit.edu (Jim Fulton)
Message-Id: <8807082104.AA03005@EXPO.LCS.MIT.EDU>
To: xbugs
Subject: invoking uwm function through menu requires button silliness

### bug number:   740
### area:         uwm
### severity:     very low
### comments:     

			  X Window System Bug Report
			    xbugs@expo.lcs.mit.edu


VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	all

DISPLAY:
	all

WINDOW MANAGER:
	uwm

AREA:
	uwm

SYNOPSIS:
	Uwm requires functions selected through a menu to use the same button
	that was used to bring down the menu.

DESCRIPTION:
	If you bring up a menu under uwm and select a function that operates
	on a window (such as move, resize, etc.), you currently have to select
	the window using the same button that you used to bring down the menu.

REPEAT BY:
	Choose move from a menu and move a window using a different button.

FIX:
*** /tmp/,RCSt1a02884		Fri Jul  8 16:58:44 1988
--- ./clients/uwm/Menu.c	Fri Jul  8 16:36:34 1988
***************
*** 123,128 ****
--- 123,129 ----
      char *strbuf;			/* String buffer for IsTextNL. */
      Bool checkMotion = TRUE;		/* To Restore Cursor Position */
      char *malloc();
+     int funcbutton;			/* function button for window select */
  
      /*
       * Change the cursor.
***************
*** 292,305 ****
  					       TargetCursor, CurrentTime )
  				   != GrabSuccess )
  			         Error( "Could not grab pointer" );
! 		             GetContext(
! 			       &sub_window, &event_x, &event_y);
  		             UnmapMenu(menu);
  		             if (sub_window != menu->w)
  			       func_stat =
! 		                 (*ml->func) (
! 				   sub_window, mask, button, event_x, 
! 				   event_y);
  			     else func_stat = FALSE;
  			     if (!func_stat) {
  			       /* eat the next ButtonRelease */
--- 293,305 ----
  					       TargetCursor, CurrentTime )
  				   != GrabSuccess )
  			         Error( "Could not grab pointer" );
! 		             funcbutton = GetContext (&sub_window,
! 						      &event_x, &event_y);
  		             UnmapMenu(menu);
  		             if (sub_window != menu->w)
  			       func_stat =
! 		                 (*ml->func) (sub_window, mask, funcbutton,
! 					      event_x, event_y);
  			     else func_stat = FALSE;
  			     if (!func_stat) {
  			       /* eat the next ButtonRelease */
***************
*** 544,552 ****
  }
  
  /*
!  * Get the context for invoking a window manager function.
   */
! GetContext(w, x, y)
  Window *w;
  int *x, *y;
  {
--- 544,553 ----
  }
  
  /*
!  * Get the context for invoking a window manager function; return the button
!  * pressed.
   */
! int GetContext(w, x, y)
  Window *w;
  int *x, *y;
  {
***************
*** 585,591 ****
          if (*w == 0)
              *w = RootWindow(dpy, scr);
  
!         return;
      }
  }
  
--- 586,592 ----
          if (*w == 0)
              *w = RootWindow(dpy, scr);
  
!         return (((XButtonPressedEvent *) &button_event)->button);
      }
  }
  

