Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: from ATHENA (ATHENA.MIT.EDU) by EXPO.LCS.MIT.EDU; Wed, 16 Mar 88 21:24:49 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA08379; Wed, 16 Mar 88 21:23:47 EST
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Wed, 16 Mar 88 11:08:59 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA07685; Wed, 16 Mar 88 11:12:27 PST
Received: from hpcvxlc by hpcvxlc.HP.COM; Wed, 16 Mar 88 11:13:02 pst
Message-Id: <8803161913.AA24494@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: uwm bug
X-Mailer: mh6.5
Date: Wed, 16 Mar 88 11:12:57 PST
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   148
### area:         uwm
### severity:     
### assigned to:  
### status:       rejected
### comments:     the normal bad input mechanisms should take care of this

VERSION:
	X11 release 2
SYNOPSIS:
	uwm will 'read' a file even if it is a directory.
DESCRIPTION:
	If '.uwmrc' or the filename give with the '-f' option is a
	directory, uwm will 'read' it.
REPEAT-BY:
	uwm -f filename, with filename a directory.
FIX:
*** uwm.c.R2	Tue Mar 15 15:34:51 1988
--- uwm.c	Tue Mar 15 15:44:16 1988
***************
*** 66,71
  char *sfilename;
  extern FILE *yyin;
  
  /*
   * Main program.
   */

--- 66,74 -----
  char *sfilename;
  extern FILE *yyin;
  
+ #include <sys/types.h>
+ #include <sys/stat.h>
+ 
  /*
   * Main program.
   */
***************
*** 106,111
           fallbackIFont = False;	/* icons */
      XSetWindowAttributes attr;	/* for setting save under flag */
  
  #ifdef PROFIL
      signal(SIGTERM, ptrap);
  #endif

--- 109,116 -----
           fallbackIFont = False;	/* icons */
      XSetWindowAttributes attr;	/* for setting save under flag */
  
+     struct stat buf;
+ 
  #ifdef PROFIL
      signal(SIGTERM, ptrap);
  #endif
***************
*** 153,158
       */
      sfilename = rc_file = malloc(NAME_LEN);
      sprintf(rc_file, "%s/.uwmrc", getenv("HOME"));
      if ((yyin = fopen(rc_file, "r")) != NULL) {
          Lineno = 1;
          yyparse();

--- 158,167 -----
       */
      sfilename = rc_file = malloc(NAME_LEN);
      sprintf(rc_file, "%s/.uwmrc", getenv("HOME"));
+     if (!stat(rc_file, &buf)) {
+ 	if ((buf.st_mode & 0170000) == 040000)
+             Error("Bad .uwmrc file. Is a directory...aborting");
+     }
      if ((yyin = fopen(rc_file, "r")) != NULL) {
          Lineno = 1;
          yyparse();
***************
*** 167,172
       */
      if (Startup_File[0] != '\0') {
          sfilename = Startup_File;
          if ((yyin = fopen(Startup_File, "r")) == NULL) {
      	sprintf(message, "Cannot open startup file '%s'", Startup_File);
              Error(message);

--- 176,185 -----
       */
      if (Startup_File[0] != '\0') {
          sfilename = Startup_File;
+ 	if (!stat(Startup_File, &buf)) {
+ 	   if ((buf.st_mode & 0170000) == 040000)
+                Error("Bad startup file. Is a directory...aborting");
+ 	}
          if ((yyin = fopen(Startup_File, "r")) == NULL) {
      	sprintf(message, "Cannot open startup file '%s'", Startup_File);
              Error(message);

