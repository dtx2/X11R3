Return-Path: jim
Received: by expo.lcs.mit.edu; Thu, 31 Mar 88 10:42:33 EST
Date: Thu, 31 Mar 88 10:42:33 EST
From: jim@expo.lcs.mit.edu (Jim Fulton)
Message-Id: <8803311542.AA28429@EXPO.LCS.MIT.EDU>
To: xbugs
Subject: makedepend gets confused by some cc arguments

### bug number:   303
### area:         makedepend
### severity:     
### assigned to:  
### status:       closed
### comments:     

VERSION:
	X Version 11 Release 2

CLIENT MACHINE:
	all

CLIENT OPERATING SYSTEM:
	all

DISPLAY:
	all

AREA:
	makedepend

SYNOPSIS:
	If CFLAGS contains any flags that makedepend normally swallows, 
	makedepend will get confused.

DESCRIPTION:
	The standard Imake.rules passes CFLAGS to makedepend so that it
	can have access to the -D, -I, and -U switches.  However, if CFLAGS
	contains any switches that makedepend uses (such as the -fswitch 
	option on Suns), it will misinterpret them.

REPEAT-BY:
	Add -fswitch to the standard cc defines and do a make depend.

FILES:
	util/imake.includes/Imake.rules
	util/makedepend/main.c

FIX:
	Add a new command line switch "--endmarker" (where endmarker is 
	is an optional string that defaults to "--") to makedepend that 
	tells it to treat everything up until the end marker as an argument
	to cc of which it should only pay attention to -D, -I, and -U.

	For reference, here is the response sent to one person asking about
	this. 

To:naughton@sun.soe.clarkson.edu
cc:xpert@athena.mit.edu
Subject:re: Problems with makedepend using Imake.
--------

> I used the cc switch -fswitch to allow the compiler to link the software
> and hardware versions of the library in to my code so the program will
> work on machines with and without fpa's. 
> 
> This however causes a problem with makedepend trying to interpret the
> -fswitch command as a switch to itself rather than CPP. 
> 
> Is this a bug or am I misusing Imake?


A bug report on it has been submitted.  To be fixed in R3.  For now, you can
do one of the following:


Method 1 - Quick Fix

Write a little program that prints any -D, -I, and -U command line switches
back out onto stdout and ignores everything else.  Change the depend rule in
util/imake.includes/Imake.rules to be something like:

depend::                                                                @@\
        $(DEPEND) -s "# DO NOT DELETE" `stripccargs $(CFLAGS)` $(SRCS)  @@\

and rebuild all of your Makefiles.  If you wanted, you could even make the
stripccargs program be a macro that is defined to be something like
$(TOP)/util/makedepend/stripccargs in the Imake.tmpl file so that you don't
need to have stripccargs in your path. 


Method 2 - Making makedepend a little smarter

A better way to solve the problem would be to add another switch to makedepend
that tells it to to assume that everything between it and some special marker
should be considered arguments to cc.  Then, change the depend rule in
util/imake.includes/Imake.rules to pass this flag.  For example, if the special
switch were called "--endmarker" (where endmarker is replaced with whatever you
want the closing marker to be, defaulting to the same value as the opening
marker), new rule could be

depend::                                                                @@\
        $(DEPEND) -s "# DO NOT DELETE" -- $(CFLAGS) -- $(SRCS)          @@\

Then, if you needed to pass "--" to your compiler for some reason, you could
change the line to be something like:

depend::                                                                @@\
        $(DEPEND) -s "# DO NOT DELETE" --, $(CFLAGS) , $(SRCS)          @@\


Jim


	

