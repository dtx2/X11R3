Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: by expo.lcs.mit.edu; Fri, 30 Sep 88 10:40:24 EDT
Return-Path: <Oren@home.csc.ti.com>
Received: from EXPO.LCS.MIT.EDU by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 192346; 9 Sep 88 10:06:24 EDT
Received: by expo.lcs.mit.edu; Fri, 9 Sep 88 10:03:44 EDT
Received: by ti.com id AA28315; Fri, 9 Sep 88 09:03:34 CDT
Received: from SI by tilde id AA09352; Fri, 9 Sep 88 08:46:57 CDT
Message-Id: <2798804802-10527449@SI>
Sender: OREN@si.csc.ti.com
Date: Fri, 9 Sep 88  08:46:42 CDT
From: LaMott Oren <Oren@home.csc.ti.com>
To: bug-clx@expo.lcs.mit.edu
Subject: Re:  sequence in every event
In-Reply-To: Msg of Tue, 6 Sep 88  16:22:46 CDT from LaMott Oren <Oren@home.csc.ti.com>
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Fri, 30 Sep 88 10:44 EDT
Resent-Message-Id: <19880930144410.0.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   1027
### area:         CLX
### severity:     medium
### comments:     

I'm embarrassed (again) about yet another bug I inserted in CLX with the
sequence fix I sent.  I thought I had tested all the places that used
read-bitvector256, but missed the keyboard-control function.

In the BUFFER file, change the first DO termination check to be
((index>= j 256)) instead of ((= i 32))

(defun read-bitvector256 (buffer-bbuf boffset data)
  (declare (type buffer-bytes buffer-bbuf)
	   (type array-index boffset)
	   (type (OR null (simple-bit-vector 256)) data))
  (LET ((result (OR data (make-array 256 :element-type 'bit :initial-element 0))))
    (declare-array (simple-bit-vector 256) result)
    (do ((i (index+ boffset 1) (index+ i 1)) ;; Skip first byte
	 (j 8 (index+ j 8)))
	((index>= j 256))
    ...

