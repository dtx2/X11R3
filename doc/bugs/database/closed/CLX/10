Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: from KILLINGTON.LCS.MIT.EDU by EXPO.LCS.MIT.EDU; Mon, 14 Mar 88 09:59:32 EST
Return-Path: <roman@ATHENA.MIT.EDU>
Received: from ATHENA.MIT.EDU by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 131783; 11 Mar 88 16:30:40 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA14576; Fri, 11 Mar 88 16:29:23 EST
Received: by JAREK.MIT.EDU (5.45/4.7) id AA21573; Fri, 11 Mar 88 16:29:13 EST
Message-Id: <8803112129.AA21573@JAREK.MIT.EDU>
To: bug-clx@zermatt.lcs.mit.edu
Subject: timeout type problem in R2
Date: Fri, 11 Mar 88 16:29:07 EST
From: Roman J. Budzianowski <roman@athena.mit.edu>
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Mon, 14 Mar 88 09:59 EST
Resent-Message-Id: <880314095949.8.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   101
### area:         CLX
### severity:     
### assigned to:  rws
### status:       closed


Timeout is defined as : (type (or null number) timeout), 
yet buffer-read-default calls zerop with timeout as argument.
Zerop, at least on Lucid 2.1 doesn't like non number arguments
at all.

To fix:
If there is no semantic difference between timeout=nil and timeout=0
replace the definition od buffer-input from buffer.lisp by:

(defun buffer-input  (buffer vector start end &optional (timeout 0))
...
...

but this would break functions calling (null timeout), so maybe it would
be simpler to change one line in  buffer-read-default from dependent.lisp
to:
...
 (if (and (null timeout) (null (listen stream))) ;; changed zerop to null
...

Now when this is fixed we learn that 'listen' hangs in Lucid 2.1 when called
on the X stream... Anybody tested clx.R2 in Lucid ?



