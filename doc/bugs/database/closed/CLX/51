Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: by expo.lcs.mit.edu; Tue, 5 Jul 88 09:15:44 EDT
Date: Tue, 5 Jul 88 09:15 EDT
From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Subject: CLX defsystem changes
To: xbugs@expo.lcs.mit.edu
Message-Id: <19880705131559.9.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   685
### area:         CLX
### severity:     low
### comments:     

VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	any

DISPLAY:
	any

WINDOW MANAGER:
	any

AREA:
	CLX

SYNOPSIS:
	Missing Explorer dependency for attributes.l
	Add Apollo/Lucid connection support

DESCRIPTION:
	ditto

REPEAT-BY:

FILES:
	lib/CLX/defsystem.l

FIX:


*** /tmp/,RCSt1a01176	Mon Jul  4 15:03:43 1988
--- lib/CLX/defsystem.l	Sat Jun 18 11:39:06 1988
***************
*** 83,89 ****
     (:fasload depdefs clx dependent macros fonts bufmac buffer display fonts))
    (:compile-load text
     (:fasload depdefs clx dependent macros fonts bufmac buffer display gcontext fonts))
!   (:compile-load attributes
     (:fasload depdefs clx dependent macros bufmac buffer display))
    (:compile-load translate
     (:fasload depdefs clx dependent macros bufmac buffer display))
--- 83,90 ----
     (:fasload depdefs clx dependent macros fonts bufmac buffer display fonts))
    (:compile-load text
     (:fasload depdefs clx dependent macros fonts bufmac buffer display gcontext fonts))
!   (:compile-load-init attributes
!    (dependent)					;<- There may be other modules needed here.
     (:fasload depdefs clx dependent macros bufmac buffer display))
    (:compile-load translate
     (:fasload depdefs clx dependent macros bufmac buffer display))
***************
*** 175,184 ****
--- 176,194 ----
  #+lucid
  (defun clx-foreign-files ()
    #-lcl3.0 (load "make-sequence-patch")
+   #+apollo
+   (define-foreign-function '(xlib::connect-to-server "connect_to_server")
+     '((:val host    :string)
+       (:val display :integer32))
+     :integer32)
+   #-apollo
    (define-c-function (xlib::connect-to-server "_connect_to_server")
  		     (host display)
  		     :result-type :integer)
    (unintern 'display)
+   #+apollo
+   (load-foreign-file "socket" :preserve-pathname t)
+   #-apollo
    (load-foreign-files '("socket.o") *foreign-libraries*))
  
  #-lispm

