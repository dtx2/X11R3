Return-Path: Hornig@alderaan.scrc.symbolics.com
Received: from ALDERAAN.SCRC.Symbolics.COM ([128.81.41.109]) by expo.lcs.mit.edu; Wed, 6 Apr 88 11:17:29 EDT
Received: from WINTER.SCRC.Symbolics.COM by ALDERAAN.SCRC.Symbolics.COM via CHAOS with CHAOS-MAIL id 183537; Wed 6-Apr-88 11:15:59 EDT
Date: Wed, 6 Apr 88 11:16 EDT
From: Charles Hornig <Hornig@alderaan.scrc.symbolics.com>
Subject: CLX use of Symbolics Generic Network System
To: xbugs@expo.lcs.mit.edu
Cc: Hornig@alderaan.scrc.symbolics.com, York@alderaan.scrc.symbolics.com
Message-Id: <19880406151609.3.HORNIG@WINTER.SCRC.Symbolics.COM>

### bug number:   317
### area:         CLX
### severity:     
### assigned to:  
### status:       closed
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	Symbolics 3600

CLIENT OPERATING SYSTEM:
	Symbolics Genera 7.2

DISPLAY:
	NA

SYNOPSIS:
	CLX should make use of the Symbolics Generic Network System.

DESCRIPTION:
	This would let it automatically choose the appropriate network
protocol for a given host.

FIX:
	Here is the new code replacing the expsting XLIB:OPEN-X-STREAM:

#+symbolics-3600
(progn

;;; TCP and DNA are both layered products, so try to work with either one.

(when (fboundp 'tcp:add-tcp-port-for-protocol)
  (tcp:add-tcp-port-for-protocol :x-window-system 6000))

(when (fboundp 'dna:add-dna-contact-id-for-protocol)
  (dna:add-dna-contact-id-for-protocol :x-window-system "X0"))

(net:define-protocol :x-window-system (:x-window-system :byte-stream)
  (:invoke-with-stream ((stream :characters nil :ascii-translation nil))
    stream))

(defun open-x-stream (host display protocol)
  (setf host (net:parse-host host))
  ;; If PROTOCOL is NIL (the default), we use the generic network system to choose a network
  ;; protocol. Since the GNS has no way to communicate the display number, this only works for
  ;; display 0.  For other displays, we blindly default to TCP.
  ;;
  ;; To take advantage of this, add a service triple to the service host such as:
  ;;   X-WINDOW-SYSTEM TCP X-WINDOW-SYSTEM
  ;; or
  ;;   X-WINDOW-SYSTEM DNA X-WINDOW-SYSTEM
  (when (and (null protocol) (zerop display))
    (return-from open-x-stream
      (let ((neti:*invoke-service-automatic-retry* t))
	(net:invoke-service-on-host :x-window-system host))))
  (ccase protocol
    ((:tcp nil)
     (tcp:open-tcp-stream host (+ *x-tcp-port* display) nil
			  :direction :io
			  :characters nil
			  :ascii-translation nil))
    ((:dna)
     (dna:open-dna-bidirectional-stream host (format nil "X~D" display)
					:characters nil :ascii-translation nil))))

)

