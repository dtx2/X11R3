Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: by expo.lcs.mit.edu; Tue, 5 Jul 88 09:12:40 EDT
Date: Tue, 5 Jul 88 09:13 EDT
From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Subject: CLX uses the types gcmask and xgcmask incorrectly in places
To: xbugs@expo.lcs.mit.edu
Message-Id: <19880705131300.6.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   682
### area:         CLX
### severity:     low
### comments:     

VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	any

DISPLAY:
	any

WINDOW MANAGER:
	any

AREA:
	CLX

SYNOPSIS:
	incorrect use of types gcmask and xgcmask

DESCRIPTION:
	CLX uses the types gcmask and xgcmask incorrectly in places

REPEAT-BY:
	run on a system that cares about such things

FILES:
	lib/CLX/gcontext.l

FIX:

*** /tmp/,RCSt1a01085	Mon Jul  4 14:28:50 1988
--- lib/CLX/gcontext.l	Sat Jun 18 12:24:29 1988
***************
*** 187,193 ****
  (eval-when (eval compile)  ;; I'd rather use macrolet, but Symbolics doesn't like it...
  
  (defmacro xgcmask->gcmask (mask)
!   `(logand ,mask #.(1- (ash 1 *gcontext-fast-change-length*))))
  
  (defmacro access-gcontext ((gcontext local-state) &body body)
    `(let ((,local-state (gcontext-local-state ,gcontext)))
--- 187,193 ----
  (eval-when (eval compile)  ;; I'd rather use macrolet, but Symbolics doesn't like it...
  
  (defmacro xgcmask->gcmask (mask)
!   `(the gcmask (logand ,mask #.(1- (ash 1 *gcontext-fast-change-length*)))))
  
  (defmacro access-gcontext ((gcontext local-state) &body body)
    `(let ((,local-state (gcontext-local-state ,gcontext)))
***************
*** 392,398 ****
  	      (gcontext gcontext)
  	      (progn
  		(do ((i 0 (index+ i 1))
! 		     (bit 1 (the gcmask (ash bit 1)))
  		     (nbyte 12)
  		     (mask 0)
  		     (local 0))
--- 392,398 ----
  	      (gcontext gcontext)
  	      (progn
  		(do ((i 0 (index+ i 1))
! 		     (bit 1 (the xgcmask (ash bit 1)))
  		     (nbyte 12)
  		     (mask 0)
  		     (local 0))
***************
*** 408,414 ****
  		     (card16-put 2 (index-ash nbyte -2))
  		     (index-incf (buffer-boffset display) nbyte))
  		  (declare (type array-index i nbyte)
! 			   (type gcmask bit mask)
  			   (type (or null card32) local))
  		  (unless (eql (the (or null card32) (svref server-state i))
  			       (setq local (the (or null card32) (svref local-state i))))
--- 408,415 ----
  		     (card16-put 2 (index-ash nbyte -2))
  		     (index-incf (buffer-boffset display) nbyte))
  		  (declare (type array-index i nbyte)
! 			   (type xgcmask bit)
! 			   (type gcmask mask)
  			   (type (or null card32) local))
  		  (unless (eql (the (or null card32) (svref server-state i))
  			       (setq local (the (or null card32) (svref local-state i))))
***************
*** 610,621 ****
        (deallocate-temp-gcontext temp-gc)
        ;; Copy saved state back to server state
        (do ((server-state (gcontext-server-state gcontext))
! 	   (bit (xgcmask->gcmask temp-mask) (the xgcmask (ash bit -1)))
  	   (i 0 (index+ i 1)))
  	  ((zerop bit)
  	   (incf-internal-timestamp server-state))
  	(declare (type gcontext-state server-state)
! 		 (type xgcmask bit)
  		 (type array-index i))
  	(when (oddp bit)
  	  (setf (svref server-state i) nil))))))
--- 611,622 ----
        (deallocate-temp-gcontext temp-gc)
        ;; Copy saved state back to server state
        (do ((server-state (gcontext-server-state gcontext))
! 	   (bit (xgcmask->gcmask temp-mask) (the gcmask (ash bit -1)))
  	   (i 0 (index+ i 1)))
  	  ((zerop bit)
  	   (incf-internal-timestamp server-state))
  	(declare (type gcontext-state server-state)
! 		 (type gcmask bit)
  		 (type array-index i))
  	(when (oddp bit)
  	  (setf (svref server-state i) nil))))))
***************
*** 739,745 ****
        (resource-id gcontextid)
        (drawable drawable)
        (progn (do* ((i 0 (index+ i 1))
! 		   (bit 1 (the gcmask (ash bit 1)))
  		   (nbyte 16)
  		   (mask 0)
  		   (local (svref local-state i) (svref local-state i)))
--- 740,746 ----
        (resource-id gcontextid)
        (drawable drawable)
        (progn (do* ((i 0 (index+ i 1))
! 		   (bit 1 (the xgcmask (ash bit 1)))
  		   (nbyte 16)
  		   (mask 0)
  		   (local (svref local-state i) (svref local-state i)))
***************
*** 748,754 ****
  		  (card16-put 2 (index-ash nbyte -2))
  		  (index-incf (buffer-boffset display) nbyte))
  	       (declare (type array-index i nbyte)
! 			(type gcmask bit mask)
  			(type (or null card32) local))
  	       (unless (eql local (the (or null card32) (svref server-state i)))
  		 (setf (svref server-state i) local)
--- 749,756 ----
  		  (card16-put 2 (index-ash nbyte -2))
  		  (index-incf (buffer-boffset display) nbyte))
  	       (declare (type array-index i nbyte)
! 			(type xgcmask bit)
! 			(type gcmask mask)
  			(type (or null card32) local))
  	       (unless (eql local (the (or null card32) (svref server-state i)))
  		 (setf (svref server-state i) local)

