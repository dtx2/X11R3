Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: from KILLINGTON.LCS.MIT.EDU by EXPO.LCS.MIT.EDU; Fri, 18 Mar 88 07:46:06 EST
Return-Path: <@TI.COM:Oren@Home.csc.ti.com>
Received: from ti.com (TI.COM) by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 133608; 17 Mar 88 18:47:26 EST
Received: by ti.com id AA18961; Thu, 17 Mar 88 17:45:49 CST
Received: from SI by tilde id AA02657; Thu, 17 Mar 88 10:00:41 CST
Message-Id: <2783606517-10513521@SI>
Sender: OREN@si.csc.ti.com
Date: Thu, 17 Mar 88  10:01:57 CST
From: LaMott Oren <Oren@home.csc.ti.com>
To: bug-clx@zermatt.lcs.mit.edu
Subject: CLX Gcontext nit
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Fri, 18 Mar 88 07:45 EST
Resent-Message-Id: <880318074535.7.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   173
### area:         CLX
### severity:     
### assigned to:  
### status:       closed
### comments:     

copy-gcontext-local-state calls allocate-temp-gcontext then immediately
bashes the gcontext-local-state and server-state, dropping the newly
allocated ones to the garbage collector.  Its more efficient to never
have them allocated in the first place, so I suggest this change:

;; From the GCONTEXT file:
(defun allocate-temp-gcontext ()
  (or (atomic-pop *temp-gcontext-cache*)
      (make-gcontext :local-state '#() :server-state '#())))

P.S. I've noticed other problems in with-gcontext - it appears to always
     create a temporary gc and do a copy, even when it shouldn't have
     to.  It works, but its inefficient... I'll look into it soon.


