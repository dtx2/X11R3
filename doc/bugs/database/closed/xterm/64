Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: by expo.lcs.mit.edu; Sun, 7 Aug 88 16:04:16 EDT
Return-Path: <mips!judy@ames.arc.nasa.gov>
Received: from ames.arc.nasa.gov (INTERNET|128.102.18.3) by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 179671; 29 Jul 88 20:55:18 EDT
Received: Fri, 29 Jul 88 17:06:35 PDT by ames.arc.nasa.gov (5.59/1.2)
Received: from quacky.UUCP (quacky) by mips.UUCP (5.52/4.7)
	id AA24503; Fri, 29 Jul 88 16:23:17 PDT
Received: by quacky.UUCP (5.52/4.7)
	id AA09648; Fri, 29 Jul 88 16:23:13 PDT
Date: Fri, 29 Jul 88 16:23:13 PDT
From: mips!judy@ames.arc.nasa.gov (Judy Szikora)
Message-Id: <8807292323.AA09648@quacky.UUCP>
To: ames!zermatt.lcs.mit.edu!RWS@ames.arc.nasa.gov
In-Reply-To: Robert Scheifler's message of Sat, 14 May 88 10:52 EDT <19880514145202.0.RWS@KILLINGTON.LCS.MIT.EDU>
Subject: MIPS version of X.V11R2
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Sun, 7 Aug 88 16:04 EDT
Resent-Message-Id: <19880807200422.7.RWS@KILLINGTON.LCS.MIT.EDU>
Resent-Comments: MIPS support

### bug number:   833
### area:         xterm
### severity:     low
### comments:     other sections also affected, but less so

Here's the stuff required to get the core software working on a Mips
machine, all in a shar archive.  There's context diffs for 16 files,
and four new files.  There's a README for you and releasenotes
intended for users.  Please email me if you have any questions or
problems. 

	     -	Judy Szikora		MIPS Computer Systems, (408) 991 0381
					{decvax,ucbvax,ihnp4}!decwrl!mips!judy
					judy@mips.com

#--------------------------Cut Here--------------------------
#! /bin/sh
# This is a shell archive.  Remove anything before the "#! /bin/sh" line,
# then unpack it by saving it in a file and typing "sh file."
#
# Wrapped by Judy Szikora,,,,quacky,open (judy) at quacky on Thu Jul 28 18:24:05 1988
#
# unpacks with default permissions
#
# Contents : README relnotes.mips difflist Mips.macros mips_berk_c.c
#	mips_sysv_c.c mips_sysv_s.s
#
if `test ! -s README`
then
echo "x - README"
cat > README << '@\Rogue\Monster\'


CONTENTS:

- README: this file, containing information for Project Athena.

- mips.relnotes: information users should see before building X.  

- difflist: context diffs for modified files, can be applied from top 
    level. Diff'd from X.V11R2 + 33 patches.
    Files affected by these patches:
	Imakefile
	X11/Xos.h
	clients/xterm/main.c
	clients/xterm/charproc.c
	clients/xterm/Tekproc.c
	clients/xmh/command.c
	clients/xmh/util.c
	lib/Xaw/Load.c
	lib/X/Xlibos.h
	lib/X/Imakefile
	util/imake.includes/Imake.rules
	util/imake.includes/Imake.tmpl
	util/makedepend/pr.c
	util/makedepend/main.c
	util/imake/ccflags.c
	doc/Xlib/Xman/Imakefile

- Mips.macros: macro file to go in util/imake.includes.

- mips_*.*: additional files for Xlib, to go in lib/X/mips.



NOTES ON MIPS VERSION:

- The MIPS modifications are for os's UMIPS 3.0 or later (SysV) and for
  UMIPS/BSD.

- Mips modifications are for clients only, and include the following
    directories: 
	- X11
	- lib, except CLX
	- clients, except xhost and xinit
	- demos
	- util/imake, util/makedepend
	- doc/Xlib
	- extensions/lib, extensions/test
	- examples
    Other directories may not build.

- None of this has been thoroughly tested due to lack of QA resources,
    but the essentials seem to work adequately.

- Significant differences:
  - added MANTOPDIR and MAN3DIR in Imakefiles for SysV manpage
    installation, also changed Imakefiles to format man pages on
    UMIPS
  - added INSTFILEFLAGS for Mips install program
  - clients/xterm/main.c: changed the way pty's are found (for SysV)
  - lib/X/Xos.h: changed ReadFromServer & WriteToServer to be
    procedures which check for errno=EINTR on read and write; also
    block SIGIO and SIGALRM on write.  These procs are in
    lib/X/mips/mips_sysv_c.c.
  - lib/X/Imakefile: SysV awk requires a ";" after the BEGIN clause.
  - New files in lib/X/mips.  Included through BandAid mechanism in
    Imakefiles. 
	mips_berk_c.c: procs required for UMIPS/BSD
	mips_sysv_c.c: c procs required for UMIPS
	mips_sysv_s.s: assembler procs required for UMIPS
  - New macro file in util/imake.includes: Mips.macros.

- All other changes are just code changes to make it work on our os's.

- Some changes were required in the Imakefiles for SysV.  I tried to
    minimize these, but I could not eliminate them.  I had to ifdef
    MipsArchitecture to get them in.
@\Rogue\Monster\
else
  echo "shar: Will not over write README"
fi
if `test ! -s relnotes.mips`
then
echo "x - relnotes.mips"
cat > relnotes.mips << '@\Rogue\Monster\'

NOTES:

- The MIPS modifications are for UMIPS (System V) release 3.0 or later
    and for UMIPS/BSD.

- MIPS modifications are for clients only, and include the following
    directories: 
	- X11
	- lib, except CLX
	- clients, except xhost and xinit
	- demos
	- util/imake, util/makedepend
	- doc/Xlib
	- extensions/lib, extensions/test
	- examples
    Other directories may not build.

- None of this has been tested thoroughly due to lack of QA resources,
    but the essentials seem to work adequately.

- To make makefiles for UMIPS os's you MUST set your environment
    variable IMAKEINCLUDE to "-I. -Dmips -DSYSTYPE_SYSV" or
    SYSTYPE_BSD as appropriate.  Cpp does not set these on UMIPS; cc
    does, but cc is not used with imake.

- UMIPS makefiles contain commands to format the man pages and install
  them as required; however since UMIPS does not include nroff this
  will typically not be effective.


BUGLIST:

- makedepend only works when compiled with -g.

- If you use lineedit in your shell, the tty settings in your xterm
    windows may be initialized with bad values.

- Xlib on UMIPS may have problems due to signals interrupting write
    calls. 

- On UMIPS, uwm cannot start a local xterm if its controlling terminal
    is gone.

- puzzle has problems.


@\Rogue\Monster\
else
  echo "shar: Will not over write relnotes.mips"
fi
if `test ! -s difflist`
then
echo "x - difflist"
cat > difflist << '@\Rogue\Monster\'

Files affected by these patches:

	Imakefile
	X11/Xos.h
	clients/xterm/main.c
	clients/xterm/charproc.c
	clients/xterm/Tekproc.c
	clients/xmh/command.c
	clients/xmh/util.c
	lib/Xaw/Load.c
	lib/X/Xlibos.h
	lib/X/Imakefile
	util/imake.includes/Imake.rules
	util/imake.includes/Imake.tmpl
	util/makedepend/pr.c
	util/makedepend/main.c
	util/imake/ccflags.c
	doc/Xlib/Xman/Imakefile


*** Imakefile.orig	Wed Jul 27 20:55:45 1988
--- Imakefile	Wed Jul 27 20:55:27 1988
***************
*** 39,44 ****
--- 39,45 ----
  
  DependSubdirs($(SUBDIRS))
  
+ #if defined (MipsArchitecture) && defined (SYSTYPE_SYSV)
  install::
  	-mkdir $(USRLIBDIR)
  	-mkdir $(BINDIR)
***************
*** 48,54 ****
--- 49,69 ----
  	-mkdir $(INCDIR)
  	-mkdir $(FONTDIR)
  	-mkdir $(UWMDIR)
+ 	-mkdir $(MANTOPDIR)
+ 	-mkdir $(MAN3DIR)
  	-mkdir $(MANDIR)
+ #else /* not (MipsArchitecture && SYSTYPE_SYSV) */
+ install::
+ 	-mkdir $(USRLIBDIR)
+ 	-mkdir $(BINDIR)
+ 	-mkdir $(LIBDIR)
+ 	-mkdir $(LINTLIBDIR)
+ 	-mkdir $(XAPPLOADDIR)
+ 	-mkdir $(INCDIR)
+ 	-mkdir $(FONTDIR)
+ 	-mkdir $(UWMDIR)
+ 	-mkdir $(MANDIR)
+ #endif /* MipsArchitecture && SYSTYPE_SYSV */
  
  InstallManPage(X,$(MANDIR))
  
*** X11/Xos.h.orig	Wed Jul 27 20:59:16 1988
--- X11/Xos.h	Tue Jul 26 14:15:02 1988
***************
*** 1,4 ****
! /* $Header: Xos.h,v 1.1 88/05/03 14:13:55 judy Exp $ */
  /* 
   * Copyright 1987 by the Massachusetts Institute of Technology
   *
--- 1,4 ----
! /* $Header: Xos.h,v 1.2 88/05/16 18:56:48 judy Exp $ */
  /* 
   * Copyright 1987 by the Massachusetts Institute of Technology
   *
***************
*** 40,45 ****
--- 40,48 ----
  
  #ifdef SYSV
  #include <time.h>
+ #ifdef mips
+ #include <bsd/sys/time.h>
+ #endif /* mips */
  #else /* SYSV */
  #include <sys/time.h>
  #endif /* SYSV */
***************
*** 51,55 ****
--- 54,63 ----
  #ifdef hpux
  #define sigvec sigvector
  #endif /* hpux */
+ 
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ #include <bsd/sys/ioctl.h>
+ #include <bsd/sys/file.h>
+ #endif /* mips && SYSTYPE_SYSV */
  
  #endif /* _XOS_H_ */
*** clients/xterm/main.c.orig	Wed Jul 27 21:12:51 1988
--- clients/xterm/main.c	Tue Jul 26 14:15:49 1988
***************
*** 1,5 ****
  #ifndef lint
! static char rcs_id[] = "$Header: main.c,v 1.2 88/04/27 14:39:28 judy Exp $";
  #endif	/* lint */
  
  /*
--- 1,5 ----
  #ifndef lint
! static char rcs_id[] = "$Header: main.c,v 1.5 88/05/17 10:58:42 judy Locked $";
  #endif	/* lint */
  
  /*
***************
*** 43,49 ****
--- 43,51 ----
  #ifdef SYSV
  #include <sys/ioctl.h>
  #include <sys/termio.h>
+ #ifndef mips
  #include <sys/ptyio.h>
+ #endif /* not mips */
  #include <sys/stat.h>
  #ifdef JOBCONTROL
  #include <sys/bsdtty.h>
***************
*** 652,657 ****
--- 654,676 ----
  {
  	int devindex, letter = 0;
  
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ 	struct stat fstat_buf;
+ 
+ 	*pty = open ("/dev/ptc", O_RDWR);
+ 	if (*pty < 0 || (fstat (*pty, &fstat_buf)) < 0) {
+ 	  fprintf (stderr, "%s: Out of ptys.\n", xterm_name);
+ 	  exit (ERROR_PTYS);
+ 	}
+ 	sprintf (ttydev, "/dev/ttyq%d", minor(fstat_buf.st_rdev));
+ 	sprintf (ptydev, "/dev/ptyq%d", minor(fstat_buf.st_rdev));
+ 	if ((*tty = open (ttydev, O_RDWR)) < 0) {
+ 	  fprintf (stderr, "%s: Unable to open tty.\n", xterm_name);
+ 	  close (*pty);
+ 	  exit (ERROR_PTYS);
+ 	}
+ 	return;
+ #else /* not (mips && SYSTYPE_SYSV) */
  	while (letter < 11) {
  	    ttydev [strlen(ttydev) - 2]  = ptydev [strlen(ptydev) - 2] =
  		    PTYCHAR1 [letter++];
***************
*** 669,677 ****
  		return;
  	    }
  	}
- 	
  	fprintf (stderr, "%s: Not enough available pty's\n", xterm_name);
  	exit (ERROR_PTYS);
  }
  
  get_terminal ()
--- 688,696 ----
  		return;
  	    }
  	}
  	fprintf (stderr, "%s: Not enough available pty's\n", xterm_name);
  	exit (ERROR_PTYS);
+ #endif /* mips && SYSTYPE_SYSV */
  }
  
  get_terminal ()
***************
*** 754,760 ****
--- 773,781 ----
  #ifdef TIOCSLTC
  	struct ltchars ltc;
  #endif	/* TIOCSLTC */
+ #ifndef mips
  	struct request_info reqinfo;
+ #endif /* not mips */
  	int one = 1;
  	int zero = 0;
  	int status;
***************
*** 938,943 ****
--- 959,974 ----
  		   with minor modifications for efficiency */
  
  #ifdef SYSV
+ #ifdef mips
+ 		/* If the control tty had its modes screwed around with, 
+ 		   eg. by lineedit in the shell, or emacs, etc. then tio
+ 		   will have bad values.  Let's just get termio from the 
+ 		   new tty and tailor it.  */
+ 		if (ioctl (tty, TCGETA, &tio) == -1)
+ 		    SysError (ERROR_TIOCGETP);
+ 		tio.c_lflag |= ECHOE;
+ #endif /* mips */
+ 
  		/* input: nl->nl, don't ignore cr, cr->nl */
  		tio.c_iflag &= ~(INLCR|IGNCR);
  		tio.c_iflag |= ICRNL;
***************
*** 1226,1232 ****
--- 1257,1265 ----
  				(void) close(fd);
  			}
  
+ #ifndef mips
  			ioctl (0, TIOCTTY, &zero);
+ #endif /* mips */
  			execlp ("/etc/getty", "getty", get_ty, "Xwindow", 0);
  
  #else	/* !SYSV */
*** clients/xterm/charproc.c.orig	Wed Jul 27 21:11:41 1988
--- clients/xterm/charproc.c	Tue Jul 26 14:15:55 1988
***************
*** 1,5 ****
  /*
!  * $Header: charproc.c,v 1.1 88/05/06 14:17:18 judy Exp $
   */
  
  
--- 1,5 ----
  /*
!  * $Header: charproc.c,v 1.3 88/05/17 11:07:00 judy Exp $
   */
  
  
***************
*** 33,39 ****
--- 33,41 ----
  /* charproc.c */
  
  #include <stdio.h>
+ #if !defined (mips) || !defined (SYSTYPE_SYSV)
  #include <sgtty.h>
+ #endif /* !mips || !SYSTYPE_SYSV */
  #include <ctype.h>
  #include <errno.h>
  #include <setjmp.h>
***************
*** 110,116 ****
  #define	doinput()		(bcnt-- > 0 ? *bptr++ : in_put())
  
  #ifndef lint
! static char rcs_id[] = "$Header: charproc.c,v 1.1 88/05/06 14:17:18 judy Exp $";
  #endif	/* lint */
  
  static long arg;
--- 112,118 ----
  #define	doinput()		(bcnt-- > 0 ? *bptr++ : in_put())
  
  #ifndef lint
! static char rcs_id[] = "$Header: charproc.c,v 1.3 88/05/17 11:07:00 judy Exp $";
  #endif	/* lint */
  
  static long arg;
*** clients/xterm/Tekproc.c.orig	Wed Jul 27 21:10:35 1988
--- clients/xterm/Tekproc.c	Tue Jul 26 14:16:01 1988
***************
*** 1,5 ****
  /*
!  * $Header: Tekproc.c,v 1.1 88/05/05 20:19:07 judy Exp $
   *
   * Warning, there be crufty dragons here.
   */
--- 1,5 ----
  /*
!  * $Header: Tekproc.c,v 1.3 88/05/17 11:04:02 judy Exp $
   *
   * Warning, there be crufty dragons here.
   */
***************
*** 43,49 ****
--- 43,51 ----
  #include "ptyx.h"
  #include "Tekparse.h"
  #include <stdio.h>
+ #if !defined (mips) || !defined (SYSTYPE_SYSV)
  #include <sgtty.h>
+ #endif /* !mips || !SYSTYPE_SYSV */
  #include <ctype.h>
  #include <errno.h>
  #include <setjmp.h>
***************
*** 115,121 ****
  #define	unput(c)	*Tpushback++ = c
  
  #ifndef lint
! static char rcs_id[] = "$Header: Tekproc.c,v 1.1 88/05/05 20:19:07 judy Exp $";
  #endif	/* lint */
  
  static XPoint *T_box[TEKNUMFONTS] = {
--- 117,123 ----
  #define	unput(c)	*Tpushback++ = c
  
  #ifndef lint
! static char rcs_id[] = "$Header: Tekproc.c,v 1.3 88/05/17 11:04:02 judy Exp $";
  #endif	/* lint */
  
  static XPoint *T_box[TEKNUMFONTS] = {
*** clients/xmh/command.c.orig	Wed Jul 27 21:02:34 1988
--- clients/xmh/command.c	Tue Jul 26 14:16:29 1988
***************
*** 1,5 ****
  #ifndef lint
! static char rcs_id[] = "$Header: command.c,v 1.1 88/04/29 18:26:21 judy Exp $";
  #endif lint
  /*
   *			  COPYRIGHT 1987
--- 1,5 ----
  #ifndef lint
! static char rcs_id[] = "$Header: command.c,v 1.2 88/05/17 11:11:47 judy Exp $";
  #endif lint
  /*
   *			  COPYRIGHT 1987
***************
*** 28,33 ****
--- 28,34 ----
  
  /* command.c -- interface to exec mh commands. */
  
+ #include <X11/Xos.h>
  #include "xmh.h"
  #include <sys/stat.h>
  #include <sys/signal.h>
*** clients/xmh/util.c.orig	Thu Jul 28 11:42:20 1988
--- clients/xmh/util.c	Tue Jul 26 14:16:35 1988
***************
*** 28,33 ****
--- 28,34 ----
  
  /* util.c -- little miscellaneous utilities. */
  
+ #include <X11/Xos.h>
  #include "xmh.h"
  #include <sys/stat.h>
  #include <errno.h>
*** lib/Xaw/Load.c.orig	Wed Jul 27 21:18:20 1988
--- lib/Xaw/Load.c	Tue Jul 26 14:17:09 1988
***************
*** 1,5 ****
  #ifndef lint
! static char rcsid[] = "$Header: Load.c,v 1.1 88/05/04 15:36:42 judy Exp $";
  #endif
  
  /***********************************************************
--- 1,5 ----
  #ifndef lint
! static char rcsid[] = "$Header: Load.c,v 1.3 88/06/02 13:56:25 judy Exp $";
  #endif
  
  /***********************************************************
***************
*** 40,45 ****
--- 40,48 ----
  #ifdef sun
  #include <sys/param.h>
  #endif
+ #ifdef mips
+ #include <sys/fixpoint.h>
+ #endif /* mips */
  #include <X11/LoadP.h>
  
  extern long lseek();
***************
*** 361,378 ****
  #ifndef KERNEL_FILE
  #ifdef hpux
  #define KERNEL_FILE "/hp-ux"
! #else
  #define KERNEL_FILE "/vmunix"
! #endif
! #endif
  
- static struct nlist namelist[] = {	    /* namelist for vmunix grubbing */
  #define LOADAV 0
      {"_avenrun"},
      {0}
  };
  
- 
  /* ARGSUSED */
  static void GetLoadPoint( w, closure, call_data )
       Widget	w;		/* unused */
--- 364,391 ----
  #ifndef KERNEL_FILE
  #ifdef hpux
  #define KERNEL_FILE "/hp-ux"
! #else /* not hpux */
! #if defined (mips) && defined (SYSTYPE_SYSV)
! #define KERNEL_FILE "/unix"
! #else /* not (mips && SYSTYPE_SYSV) */
  #define KERNEL_FILE "/vmunix"
! #endif /* mips && SYSTYPE_SYSV */
! #endif /* hpux */
! #endif /* not KERNEL_FILE */
  
  #define LOADAV 0
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ static struct nlist namelist[] = {	    /* namelist for vmunix grubbing */
+     {"avenrun"},
+     {0}
+ };
+ #else /* not (mips && SYSTYPE_SYSV) */
+ static struct nlist namelist[] = {	    /* namelist for vmunix grubbing */
      {"_avenrun"},
      {0}
  };
+ #endif /* mips && SYSTYPE_SYSV */
  
  /* ARGSUSED */
  static void GetLoadPoint( w, closure, call_data )
       Widget	w;		/* unused */
***************
*** 392,397 ****
--- 405,413 ----
  		exit(-1);
  	    }
  	    loadavg_seek = namelist[LOADAV].n_value;
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ 	    loadavg_seek = loadavg_seek & 0x7fffffff;
+ #endif /* mips && SYSTYPE_SYSV */
  	    kmem = open(KMEM_FILE, O_RDONLY);
  	    if (kmem < 0) xload_error("cannot open", KMEM_FILE);
  	    init = 1;
***************
*** 405,413 ****
  		(void) read(kmem, (char *)&temp, sizeof(long));
  		*loadavg = (double)temp/FSCALE;
  	}
! #else
  	(void) read(kmem, (char *)loadavg, sizeof(double));
! #endif
  	return;
  }
  
--- 421,437 ----
  		(void) read(kmem, (char *)&temp, sizeof(long));
  		*loadavg = (double)temp/FSCALE;
  	}
! #else /* not sun */
! #ifdef mips
! 	{
! 		fix temp;
! 		(void) read(kmem, (char *)&temp, sizeof(fix));
! 		*loadavg = FIX_TO_DBL(temp);
! 	}
! #else /* not mips */
  	(void) read(kmem, (char *)loadavg, sizeof(double));
! #endif /* mips */
! #endif /* sun */
  	return;
  }
  
*** lib/X/Xlibos.h.orig	Wed Jul 27 21:17:01 1988
--- lib/X/Xlibos.h	Tue Jul 26 14:17:30 1988
***************
*** 123,131 ****
  #endif
  
  #define BytesReadable(fd, ptr) ioctl ((fd), FIONREAD, (ptr))
  #define ReadFromServer(dpy, data, size) read((dpy), (data), (size))
- #define ReadvFromServer(dpy, iov, iovcnt) readv((dpy), (iov), (iovcnt))
  #define WriteToServer(dpy, bufind, size) write((dpy), (bufind), (size))
  #define WritevToServer(dpy, iov, iovcnt) writev((dpy), (iov), (iovcnt))
  /*
   *	ReadvFromServer and WritevToSever use struct iovec, normally found
--- 123,133 ----
  #endif
  
  #define BytesReadable(fd, ptr) ioctl ((fd), FIONREAD, (ptr))
+ #if !defined (mips) || !defined (SYSTYPE_SYSV)
  #define ReadFromServer(dpy, data, size) read((dpy), (data), (size))
  #define WriteToServer(dpy, bufind, size) write((dpy), (bufind), (size))
+ #endif /* !mips || !SYSTYPE_SYSV */
+ #define ReadvFromServer(dpy, iov, iovcnt) readv((dpy), (iov), (iovcnt))
  #define WritevToServer(dpy, iov, iovcnt) writev((dpy), (iov), (iovcnt))
  /*
   *	ReadvFromServer and WritevToSever use struct iovec, normally found
*** lib/X/Imakefile.orig	Wed Jul 27 21:15:56 1988
--- lib/X/Imakefile	Tue Jul 26 14:18:11 1988
***************
*** 283,298 ****
--- 283,312 ----
  BandAidLibraryMake()
  #endif
  
+ /* MIPS uses sysv awk & needs ";" after BEGIN stmt */
+ #if defined (MipsArchitecture) && defined (SYSTYPE_SYSV)
  ks_names.h: $(INCLUDESRC)/keysymdef.h
  	@echo "generating $@"; \
  	awk 'BEGIN { \
  		printf("/*\n * This is a machine generated file."); \
  		printf(" * Do not put under source control.\n */\n"); \
+ 	}; \
+ 	/^#define/ { \
+ 		len = length($$2)-3; \
+ 		printf("{ \"%s\", %s },\n", substr($$2,4,len), $$3); \
+ 	}' < $? > $@
+ #else /* not (MipsArchitecture && SYSTYPE_SYSV) */
+ ks_names.h: $(INCLUDESRC)/keysymdef.h
+ 	@echo "generating $@"; \
+ 	awk 'BEGIN { \
+ 		printf("/*\n * This is a machine generated file."); \
+ 		printf(" * Do not put under source control.\n */\n"); \
  	} \
  	/^#define/ { \
  		len = length($$2)-3; \
  		printf("{ \"%s\", %s },\n", substr($$2,4,len), $$3); \
  	}' < $? > $@
+ #endif /* MipsArchitecture && SYSTYPE_SYSV */
  
  clean::
  	$(RM) ks_names.h
*** util/imake.includes/Imake.rules.orig	Thu Jul 28 12:54:16 1988
--- util/imake.includes/Imake.rules	Thu Jul 28 12:57:26 1988
***************
*** 126,137 ****
   * Install a man page.
   */
  #if InstallManPages
  #define	InstallManPage(file,dest)					@@\
  install:: file.man							@@\
! 	$(INSTALL) -c $(INSTMANFLAGS) file.man dest/file.ManSuffix
! #else
  #define	InstallManPage(file,dest)
! #endif
  
  /*
   * Install a non-executable file.
--- 126,145 ----
   * Install a man page.
   */
  #if InstallManPages
+ #if defined (MipsArchitecture) && defined (SYSTYPE_SYSV)
  #define	InstallManPage(file,dest)					@@\
  install:: file.man							@@\
! 	cat file.man | tbl | nroff -man | col > file.ManSuffix		@@\
! 	$(INSTALL) -c $(INSTMANFLAGS) $(INSTFILEFLAGS) file.ManSuffix dest/file.ManSuffix @@\
! 	rm file.ManSuffix
! #else /* not (MipsArchitecture && SYSTYPE_SYSV) */
! #define	InstallManPage(file,dest)					@@\
! install:: file.man							@@\
! 	$(INSTALL) -c $(INSTMANFLAGS) $(INSTFILEFLAGS) file.man dest/file.ManSuffix
! #endif /* MipsArchitecture && SYSTYPE_SYSV */
! #else /* not InstallManPages */
  #define	InstallManPage(file,dest)
! #endif /* InstallManPages */
  
  /*
   * Install a non-executable file.
***************
*** 152,158 ****
   */
  #define	InstallScript(program,dest)					@@\
  install:: program.script						@@\
! 	$(INSTALL) -c $(INSTALLFLAGS) program.script dest/program
  
  /*
   * Install multiple programs
--- 160,166 ----
   */
  #define	InstallScript(program,dest)					@@\
  install:: program.script						@@\
! 	$(INSTALL) -c $(INSTALLFLAGS) $(INSTFILEFLAGS) program.script dest/program
  
  /*
   * Install multiple programs
***************
*** 170,176 ****
  #if InstallAppDefFiles
  #define	InstallAppDefaults(class)					@@\
  install:: class.ad							@@\
! 	$(INSTALL) -c $(INSTAPPFLAGS) class.ad $(XAPPLOADDIR)/class
  #else
  #define	InstallAppDefaults(class)
  #endif
--- 178,184 ----
  #if InstallAppDefFiles
  #define	InstallAppDefaults(class)					@@\
  install:: class.ad							@@\
! 	$(INSTALL) -c $(INSTAPPFLAGS) $(INSTFILEFLAGS) class.ad $(XAPPLOADDIR)/class
  #else
  #define	InstallAppDefaults(class)
  #endif
*** util/imake.includes/Imake.tmpl.orig	Wed Jul 27 21:24:24 1988
--- util/imake.includes/Imake.tmpl	Tue Jul 26 14:20:59 1988
***************
*** 44,49 ****
--- 44,56 ----
  #define ApolloArchitecture
  #endif apollo
  
+ #ifdef mips
+ #define MacroIncludeFile "Mips.macros"
+ #define MacroFile Mips.macros
+ #undef mips
+ #define MipsArchitecture
+ #endif mips
+ 
  #ifndef MacroIncludeFile
  #define MacroIncludeFile "Guess.macros"
  #define MacroFile Guess.macros
***************
*** 75,81 ****
--- 82,93 ----
           INCDIR = $(DESTDIR)/usr/include/X11
          FONTDIR = $(LIBDIR)/fonts
           UWMDIR = $(LIBDIR)/uwm
+ #if defined (MipsArchitecture) && defined (SYSTYPE_SYSV)
+          MANDIR = $(DESTDIR)/usr/man/x_man/man/**/ManSuffix
+         MAN3DIR = $(DESTDIR)/usr/man/x_man/man3
+ #else /* not (MipsArchitecture && SYSTYPE_SYSV) */
           MANDIR = $(DESTDIR)/usr/man/man/**/ManSuffix
+ #endif /* MipsArchitecture && SYSTYPE_SYSV */
      XAPPLOADDIR = $(LIBDIR)/app-defaults
           ADMDIR = $(DESTDIR)/usr/adm /* server wants this for logging */
  /* end changeable items */
*** util/makedepend/pr.c.orig	Wed Jul 27 21:26:01 1988
--- util/makedepend/pr.c	Tue Jul 26 14:21:21 1988
***************
*** 1,7 ****
  /*
!  * $Header: pr.c,v 1.1 88/05/04 13:29:23 judy Exp $
   *
   * $Log:	pr.c,v $
   * Revision 1.1  88/05/04  13:29:23  judy
   * Initial revision
   * 
--- 1,10 ----
  /*
!  * $Header: pr.c,v 1.2 88/05/17 13:23:27 judy Exp $
   *
   * $Log:	pr.c,v $
+  * Revision 1.2  88/05/17  13:23:27  judy
+  * mods for umipsv
+  * 
   * Revision 1.1  88/05/04  13:29:23  judy
   * Initial revision
   * 
***************
*** 118,125 ****
--- 121,136 ----
  		printf("\n#\t%s", ip->i_list[ i ]->i_incstring);
  }
  
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ void catch()
+ {
+ 	fflush(stdout);
+ 	log_fatal("got signal\n");
+ }
+ #else /* not (mips && SYSTYPE_SYSV) */
  catch(n)
  {
  	fflush(stdout);
  	log_fatal("got signal %d\n", n);
  }
+ #endif /* mips && SYSTYPE_SYSV */
*** util/makedepend/main.c.orig	Wed Jul 27 21:38:36 1988
--- util/makedepend/main.c	Wed Jul 27 21:40:46 1988
***************
*** 1,5 ****
  /*
!  * $Header: main.c,v 1.1 88/05/04 13:29:19 judy Exp $
   *
   * $Log:	main.c,v $
   * Revision 1.12  88/05/04  14:39:50  jim
--- 1,5 ----
  /*
!  * $Header: main.c,v 1.3 88/05/25 16:23:38 judy Exp $
   *
   * $Log:	main.c,v $
   * Revision 1.12  88/05/04  14:39:50  jim
***************
*** 107,114 ****
  boolean	printed = FALSE;
  boolean	verbose = FALSE;
  boolean	show_where_not = FALSE;
- int	catch();
  
  struct sigvec sig_vec = {
  	catch,
  	 (1<<(SIGINT -1))
--- 107,117 ----
  boolean	printed = FALSE;
  boolean	verbose = FALSE;
  boolean	show_where_not = FALSE;
  
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ void	catch();
+ #else /* !(mips && SYSTYPE_SYSV) */
+ int	catch();
  struct sigvec sig_vec = {
  	catch,
  	 (1<<(SIGINT -1))
***************
*** 121,126 ****
--- 124,130 ----
  	|(1<<(SIGSYS-1)),
  	0
  };
+ #endif /* mips && SYSTYPE_SYSV */
  
  main(argc, argv)
  	int	argc;
***************
*** 240,245 ****
--- 244,259 ----
  	/*
  	 * catch signals.
  	 */
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ /*  should really reset SIGINT to SIG_IGN if it was.  */
+ 	signal (SIGHUP, catch);
+ 	signal (SIGINT, catch);
+ 	signal (SIGQUIT, catch);
+ 	signal (SIGILL, catch);
+ 	signal (SIGBUS, catch);
+ 	signal (SIGSEGV, catch);
+ 	signal (SIGSYS, catch);
+ #else /* not (mips && SYSTYPE_SYSV) */
  	sigvec(SIGHUP, &sig_vec, (struct sigvec *)0);
  	sigvec(SIGINT, &sig_vec, (struct sigvec *)0);
  	sigvec(SIGQUIT, &sig_vec, (struct sigvec *)0);
***************
*** 247,253 ****
--- 261,269 ----
  	sigvec(SIGBUS, &sig_vec, (struct sigvec *)0);
  	sigvec(SIGSEGV, &sig_vec, (struct sigvec *)0);
  	sigvec(SIGSYS, &sig_vec, (struct sigvec *)0);
+ #endif /* mips && SYSTYPE_SYSV */
  
+ 
  	/*
  	 * now peruse through the list of files.
  	 */
***************
*** 451,455 ****
--- 467,475 ----
  		puts(line); /* same as fputs(fdout); but with newline */
  	}
  	fflush(fdout);
+ #if defined (mips) && defined (SYSTYPE_SYSV)
+ 	chmod(makefile, st.st_mode);
+ #else /* not (mips && SYSTYPE_SYSV) */
  	fchmod(fileno(fdout), st.st_mode);
+ #endif /* mips && SYSTYPE_SYSV */
  }
*** util/imake/ccflags.c.orig	Wed Jul 27 21:19:50 1988
--- util/imake/ccflags.c	Tue Jul 26 14:19:51 1988
***************
*** 1,8 ****
  #ifdef hpux
  #define ccflags "-Wc,-Nd4000,-Ns3000 -DSYSV"
! #else
  #define ccflags "-O"
! #endif
  
  main()
  {
--- 1,12 ----
  #ifdef hpux
  #define ccflags "-Wc,-Nd4000,-Ns3000 -DSYSV"
! #else /* hpux */
! #if defined (mips) && defined (SYSTYPE_SYSV)
! #define ccflags "../../lib/X/mips/mips_sysv_c.c -DSYSV -I../../lib/X//mips -I/usr/include/bsd -lbsd"
! #else /* not (mips && SYSTYPE_SYSV) */
  #define ccflags "-O"
! #endif /* mips && SYSTYPE_SYSV */
! #endif /* hpux */
  
  main()
  {
*** doc/Xlib/Xman/Imakefile.orig	Wed Jul 27 21:14:35 1988
--- doc/Xlib/Xman/Imakefile	Tue Jul 26 15:15:58 1988
***************
*** 3,10 ****
--- 3,17 ----
  TROFF= psroff
  PRINTER= lpr
  
+ #if defined (MipsArchitecture) && defined (SYSTYPE_SYSV)
+ #define Dot3XList(arg) \@@	arg.3x
+ #define CreateRule(arg) @@arg.3x: arg@@\
+ 	(cat macros.t $? | tbl | nroff -man | col) > $@
+ #else /* not (MipsArchitecture && SYSTYPE_SYSV) */
  #define Dot3XList(arg) \@@	arg.3X
  #define CreateRule(arg) @@arg.3X: arg@@	(cat macros.t; soelim $?) > $@
+ #endif /* MipsArchitecture && SYSTYPE_SYSV */
+ 
  #define NoSuffixList(arg) \@@	arg
  
  #define ManPages(transform) \
***************
*** 128,133 ****
--- 135,144 ----
  
  ManPages(CreateRule)
  
+ #if defined (MipsArchitecture) && defined (SYSTYPE_SYSV)
+ InstallMultiple($(MANPAGES),$(MAN3DIR))
+ #else /* not (MipsArchitecture && SYSTYPE_SYSV) */
  InstallMultiple($(MANPAGES),$(MANDIR))
+ #endif /* MipsArchitecture and SYSTYPE_SYSV */
  
  depend:
@\Rogue\Monster\
else
  echo "shar: Will not over write difflist"
fi
if `test ! -s Mips.macros`
then
echo "x - Mips.macros"
cat > Mips.macros << '@\Rogue\Monster\'

#ifdef SYSTYPE_SYSV
#define StandardDefines -I$(XLIBSRC)/mips -I/usr/include/bsd -DSYSV
#else
#define StandardDefines 
#endif 

          SHELL = /bin/sh
            TOP = TOPDIR
             AS = as
             CC = cc
            CPP = /lib/cpp
             LD = ld
           LINT = lint
        INSTALL = /etc/mipsinstall
           TAGS = ctags
             RM = rm -f
             MV = mv
             LN = ln -s
         RANLIB = ranlib
             AR = ar clq
             LS = ls
       LINTOPTS = -axz
    LINTLIBFLAG = -C
           MAKE = make
    STD_DEFINES = StandardDefines
    CDEBUGFLAGS = 
#ifdef SYSTYPE_BSD
SYSAUX_LIBRARIES = -lmld
#else
SYSAUX_LIBRARIES = -lbsd -lmld
#endif
  INSTFILEFLAGS = -f
        DESTDIR =

#define MakeContributed		NO	/* make contrib/ */

/* This defines the server you want */

/* define this as you like for normal library compilation */
#define LibraryDefines 		StandardDefines
#define LibraryCDebugFlags	

#define BandAidLibrary			YES
#ifdef SYSTYPE_SYSV
#define BandAidLibrarySources		mips_sysv_c.c mips_sysv_s.s
#define BandAidLibraryObjects		mips_sysv_c.o mips_sysv_s.o
#define BandAidLibraryMake()					@@\
mips_sysv_c.c: mips/mips_sysv_c.c				@@\
	-rm -f mips_sysv_c.c					@@\
	-ln -s mips/mips_sysv_c.c .				@@\
mips_sysv_s.s: mips/mips_sysv_s.s				@@\
	-rm -f mips_sysv_s.s					@@\
	-ln -s mips/mips_sysv_s.s .				@@\
.s.o:									@@\
	$(RM) $@							@@\
	$(CC) -c $(CFLAGS) $*.s
#else
#define BandAidLibrarySources		mips_berk_c.c
#define BandAidLibraryObjects		mips_berk_c.o
#define BandAidLibraryMake()					@@\
mips_berk_c.c: mips/mips_berk_c.c				@@\
	-rm -f mips_berk_c.c					@@\
	-ln -s mips/mips_berk_c.c .
#endif

/* -DTCPCONN allows TCP connections */
/* -DUNIXCONN allows Unix domain connections */
/* -DDNETCONN allows DECnet connections */

#define ConnectionFlags		-DTCPCONN

/* This defines the extensions you want */
/* #define ExtensionDefines	-DZOID -DBEZIER */
#define ExtensionDefines

#define InstallLintLibs		NO	/* install .ln libraries */
#define InstallManPages		NO	/* install man pages */
#define InstallAppDefFiles	YES	/* install application defaults */
#define DebugLibX		NO	/* debugged X library */
#define DebugLibXArchive	NO	/* archive file of above */
#define ProfileLibX		NO	/* profiled X library */
#define ProfileLibXArchive	NO	/* archive file of above */
#define DebugOldLibX		NO	/* debugged old X library */
#define ProfileOldLibX		NO	/* profiled old X library */
#define DebugLibXt		NO	/* debugged toolkit library */
#define ProfileLibXt		NO	/* profiled toolkit library */
#define DebugLibXaw		NO	/* debugged widget library */
#define ProfileLibXaw		NO	/* profiled widget library */
#define DebugLibXext		NO	/* debugged Xext library */
#define ProfileLibXext		NO	/* profiled Xext library */

/*
 * Uncomment this if you have cpp sources.
 */
/* #define CppSourcesPresent /usr/src/lib/cpp */

/*
 * use only one tab here.
 */
#ifdef SYSTYPE_SYSV
#define ManSuffix	1	/* for /usr/man/x_man/man?/manpage.? */
#else
#define ManSuffix	l	/* for /usr/man/man?/manpage.? */
#endif

/* uncomment this if your make program has MAKEFLAGS but not MFLAGS */
/* #define ConstructMFLAGS */
@\Rogue\Monster\
else
  echo "shar: Will not over write Mips.macros"
fi
if `test ! -s mips_berk_c.c`
then
echo "x - mips_berk_c.c"
cat > mips_berk_c.c << '@\Rogue\Monster\'
/* $Header: mips_berk_c.c,v 1.3 88/05/25 16:04:18 judy Exp $ */

#ifndef lint
static char *sccsid = "@(#)mips_vfork.c	1.11	3/02/88";
#endif lint
/*
 * Copyright 1988 by Mips Computer Systems, Sunnyvale, California.
 */




/*  Need a bcopy than can copy backwards if necessary  */
void bcopy (src, dst, length)
     char *src, *dst;
     int length;
{
  if (src < dst && src + length > dst)
    {src = src + length - 1;
     dst = dst + length - 1;
     for (; length > 0; length--, dst--, src--) *dst = *src;
   }
  else if (src != dst)
    for (; length > 0; length--, dst++, src++) *dst = *src;
}
@\Rogue\Monster\
else
  echo "shar: Will not over write mips_berk_c.c"
fi
if `test ! -s mips_sysv_c.c`
then
echo "x - mips_sysv_c.c"
cat > mips_sysv_c.c << '@\Rogue\Monster\'
/* $Header: mips_sysv_c.c,v 1.3 88/07/26 14:04:36 judy Exp $ */

#ifndef lint
static char *sccsid = "@(#)mips_vfork.c	1.11	3/02/88";
#endif lint
/*
 * Copyright 1988 by Mips Computer Systems, Sunnyvale, California.
 */

#include <errno.h>
#include <limits.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/uio.h>

#define TRUE 1
#define FALSE 0

char *malloc ();

int vfork ()
{
  int pid;

  pid = fork ();
  return pid;
}



/*  Need a bcopy than can copy backwards if necessary  */
void bcopy (src, dst, length)
     char *src, *dst;
     int length;
{
  if (src < dst && src + length > dst)
    {src = src + length - 1;
     dst = dst + length - 1;
     for (; length > 0; length--, dst--, src--) *dst = *src;
   }
  else if (src != dst)
    for (; length > 0; length--, dst++, src++) *dst = *src;
}



int readv (d, iov, iovcnt)
     int d;
     struct iovec *iov;
     int iovcnt;
{
  int i, isum, cnt, mc, inext, j;
  struct iovec *tiov;
  char *mybuf;

  if (iovcnt <= 0 || iovcnt > 16) {
    errno = EINVAL;
    return (-1);
  }

  isum = 0;
  for (i = 0, tiov = iov; i < iovcnt; i++, tiov++) {
    if (tiov->iov_len < 0 || INT_MAX - tiov->iov_len < isum) {
      errno = EINVAL;
      return (-1);
    }
    isum += tiov->iov_len;
  }

/*  We do not check whether part of the iov points outside the process's
    allocated data space, and therefore cannot return EFAULT.  */

  mybuf = malloc (isum+8);
  while (-1 == (cnt = read (d, mybuf, isum)) && errno == EINTR);
  if (cnt <= 0) return cnt;
  mc = 0;
  for (i = 0, tiov = iov; i < iovcnt; i++, tiov++) {
    inext = tiov->iov_len;
    if (inext > cnt - mc) inext = cnt - mc;
    for (j = 0; j < inext; j++) 
      (*(tiov->iov_base + j)) = (*(mybuf + mc + j));
    mc += inext;
  }
  free (mybuf);
  return (cnt);
}


int writev (d, iov, iovcnt)
     int d;
     struct iovec *iov;
     int iovcnt;
{
  int i, isum, cnt, mc, j;
  struct iovec *tiov;
  char *mybuf;

  if (iovcnt <= 0 || iovcnt > 16) {
    errno = EINVAL;
    return (-1);
  }

  isum = 0;
  for (i = 0, tiov = iov; i < iovcnt; i++, tiov++) {
    if (tiov->iov_len < 0 || INT_MAX - tiov->iov_len < isum) {
      errno = EINVAL;
      return (-1);
    }
    isum += tiov->iov_len;
  }

  mybuf = malloc (isum+4);
  mc = 0;
  for (i = 0, tiov = iov; i < iovcnt; i++, tiov++) {
    for (j = 0; j < tiov->iov_len; j++) 
      (*(mybuf + mc + j)) = (*(tiov->iov_base + j));
    mc += tiov->iov_len;
  }
  while (-1 == (cnt = write (d, mybuf, mc)) && errno == EINTR);
  free (mybuf);
  return (cnt);
}



int ReadFromServer (d, buf, nbytes)
     int d;
     char *buf;
     int nbytes;
{
  int nn;

  while (-1 == (nn = read (d, buf, nbytes)) && errno == EINTR);
  return nn;
}


int WriteToServer (d, buf, nbytes)
     int d;
     char *buf;
     int nbytes;
{
  int nn;
  void (*save_io)(), (*save_alarm)();

  save_io = sigset(SIGIO, SIG_HOLD);
  save_alarm = sigset(SIGALRM, SIG_HOLD);
  while (-1 == (nn = write (d, buf, nbytes)) && errno == EINTR);
  sigset(SIGIO, save_io);
  sigset(SIGALRM, save_alarm);
  return nn;
}
@\Rogue\Monster\
else
  echo "shar: Will not over write mips_sysv_c.c"
fi
if `test ! -s mips_sysv_s.s`
then
echo "x - mips_sysv_s.s"
cat > mips_sysv_s.s << '@\Rogue\Monster\'
/* --------------------------------------------------- */
/* | Copyright (c) 1986 MIPS Computer Systems, Inc.  | */
/* | All Rights Reserved.                            | */
/* --------------------------------------------------- */
/* $Header: mips_sysv_s.s,v 1.1 88/05/23 14:59:29 judy Exp $ */

#include <regdef.h>
#include <asm.h>

/*
 * ffs(word)
 * find first bit set in word (a la VAX instruction)
 * looks at low order bits first, lowest order bit is 1, highest bit is 32
 * no bits returns 0
 */
LEAF(ffs)
	.set	noreorder
	move	v0,zero
	beq	a0,zero,2f		# no bits set, return zero
1:	and	v1,a0,1
	addu	v0,1
	beq	v1,zero,1b
	srl	a0,1			# BDSLOT: shift right to next bit
2:	j	ra
	nop
	.set	reorder
.end ffs

#ifdef notdef
LEAF(ffs)
	move	v1,zero			# initial table offset
	and	v0,a0,0xffff		# check lower halfword
	bne	v0,zero,1f		# bits in lower halfword
	addu	v1,64			# table offset for halfword
	srl	a0,16			# check upper halfword
1:	and	v0,a0,0xff		# check lower byte of halfword
	bne	v0,zero,2f		# bits in lower byte
	addu	v1,32			# table offset for byte
	srl	a0,8			# check upper byte of halfword
2:	and	v0,a0,0xf		# check lower nibble
	bne	v0,zero,3f		# bits in lower nibble
	addu	v1,16			# table offset for nibble
	srl	v0,a0,4			# check upper nibble
	and	v0,0xf
3:	addu	v1,v0			# total table offset
	lbu	v0,ffstbl(v1)		# load bit number from table
	j	ra
.end ffs

	.data
#define NIBBLE(x) \
	.byte	0,       1+(x)*4, 2+(x)*4, 1+(x)*4; \
	.byte	3+(x)*4, 1+(x)*4, 2+(x)*4, 1+(x)*4; \
	.byte	4+(x)*4, 1+(x)*4, 2+(x)*4, 1+(x)*4; \
	.byte	3+(x)*4, 1+(x)*4, 2+(x)*4, 1+(x)*4
ffstbl:
	NIBBLE(0)
	NIBBLE(1)
	NIBBLE(2)
	NIBBLE(3)
	NIBBLE(4)
	NIBBLE(5)
	NIBBLE(6)
	NIBBLE(7)
#endif notdef
@\Rogue\Monster\
else
  echo "shar: Will not over write mips_sysv_s.s"
fi
# to concatenate archives, remove anything after this line
exit 0

