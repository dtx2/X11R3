Return-Path: bst@research.att.com
Received: by expo.lcs.mit.edu; Mon, 27 Jun 88 09:19:48 EDT
From: bst@research.att.com
Received: from localhost by black.att.com (4.0/SMI-4.0Beta)
	id AA01375; Mon, 27 Jun 88 09:14:05 EDT
Message-Id: <8806271314.AA01375@black.att.com>
To: xbugs@expo.lcs.mit.edu
Subject: sunOs 4.0 vs xterm
Date: Mon, 27 Jun 88 09:14:03 -0400
>From: Brent Townshend <bst@black>

### bug number:   644
### area:         xterm
### severity:     low
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/110

CLIENT OPERATING SYSTEM:
	SunOS 4.0

DISPLAY:
	BW

SYNOPSIS:
	xterm does not work under SUN OS 4.0 on a yellow pages client.

DESCRIPTION:
	xterm dies with a HANGUP message when run under OS4.0.  The problem
	only occurs when running on a YP client.  The new OS now keeps a
	file descriptor open that is a socket connected to the yp server.
	This reduces the overhead in making YP calls.  Xterm, however,
	assumes that it knowns about all open file descriptors and manually
	dups the pseudo-tty fds into file descriptors 4 and 5.  Since 4
	ends up being the YP socket, this hopelessly confuses the YP
	routines.


FIX:

	Diffs for xterm/main.c


920,921c919,920
< 		if (screen->respond < 3) {
< 			int newrespond = dupHigh (screen->respond);
- ---
> 		if (screen->respond != Xsocket + 1) {
> 			dup2 (screen->respond, Xsocket + 1);
923c922
< 			screen->respond = newrespond;
- ---
> 			screen->respond = Xsocket + 1;
932,933c931,932
< 		if (tty < 3) {
< 			int newtty = dupHigh (tty);
- ---
> 		if (tty != Xsocket + 2)	{
> 			dup2 (tty, Xsocket + 2);
935c934
< 			tty = newtty;
- ---
> 			tty = Xsocket + 2;
1476,1494d1474
< }
< 
< int dupHigh(oldfd)
< {
<     int desc[3],i,j;
<     /* Find an fd > 2 */
<     for (i=0;i<3;i++) {
< 	desc[i] = dup(oldfd);
< 	if (desc[i] > 2)
< 	    break;
< 	}
<     if (i==3) {
< 	fprintf(stderr,"dupHigh failed\n");
< 	exit(1);
< 	}
<     /* Close unneeded ones */
<     for (j=0;j<i;j++)
< 	close(desc[j]);
<     return  desc[i];

