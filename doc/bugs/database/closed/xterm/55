Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: by expo.lcs.mit.edu; Fri, 8 Jul 88 08:04:37 EDT
Return-Path: <xpert-request@ATHENA.MIT.EDU>
Received: from EXPO.LCS.MIT.EDU by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 171432; 7 Jul 88 22:24:44 EDT
Received: by expo.lcs.mit.edu; Thu, 7 Jul 88 22:17:20 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA06148; Thu, 7 Jul 88 19:18:30 EDT
Received: by BLOOM-BEACON.MIT.EDU with sendmail-5.59/4.7 
	id <AA13217@BLOOM-BEACON.MIT.EDU>; Thu, 7 Jul 88 19:13:11 EDT
Received: from USENET by bloom-beacon.mit.edu with netnews
	for xpert@athena.mit.edu (xpert@athena.mit.edu)
	(contact usenet@bloom-beacon.mit.edu if you have questions)
Date: 7 Jul 88 21:39:58 GMT
From: how@ucdavis.ucdavis.edu  (W. Wilson Ho)
Organization: University of California at Davis.
Subject: Re: Assigning keys on the Sun keyboard under X11
Message-Id: <HOW.88Jul7144135@iris.ucdavis.ucdavis.edu>
References: <401@athen.sinix.UUCP>, <111300003@hcx1>, <1586@eneevax.UUCP>
Sender: xpert-request@athena.mit.edu
To: xpert@athena.mit.edu
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Fri, 8 Jul 88 08:05 EDT
Resent-Message-Id: <19880708120513.4.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   719
### area:         xterm
### severity:     low
### comments:     Need to try out the R keys...


> How do I get the escape keys which are assigned to the R1, R2, ... keys
> on the sun keyboard to have the same values under X11. It seems
> like X strips there values after it is started. It doesn't seem like
> xmodmap will do the job.
The problem lies on xterm, which ignores all those key events
generated by the R1, ..., R15 function keys.  You may modified
"input.c" of the xterm source to redefine the sun's function keys to
the default.  Here is the diff for the new input.c:

*** input.c	Tue May 31 14:41:56 1988
--- my_input.c	Tue May 31 14:06:24 1988
***************
*** 104,110
  		reply.a_type = CSI;
  		reply.a_nparam = 1;
  		reply.a_param[0] = funcvalue(keycode);
! 		reply.a_final = '~';
  		if (reply.a_param[0] > 0)
  			unparseseq(&reply, pty);
  		key = TRUE;

--- 104,110 -----
  		reply.a_type = CSI;
  		reply.a_nparam = 1;
  		reply.a_param[0] = funcvalue(keycode);
! 		reply.a_final = 'z';
  		if (reply.a_param[0] > 0)
  			unparseseq(&reply, pty);
  		key = TRUE;
***************
*** 148,175
  funcvalue(keycode)
  {
  	switch (keycode) {
! 		case XK_F1:	return(11);
! 		case XK_F2:	return(12);
! 		case XK_F3:	return(13);
! 		case XK_F4:	return(14);
! 		case XK_F5:	return(15);
! 		case XK_F6:	return(17);
! 		case XK_F7:	return(18);
! 		case XK_F8:	return(19);
! 		case XK_F9:	return(20);
! 		case XK_F10:	return(21);
! 		case XK_F11:	return(23);
! 		case XK_F12:	return(24);
! 		case XK_F13:	return(25);
! 		case XK_F14:	return(26);
! 		case XK_F15:	return(28);
! 		case XK_Help:	return(28);
! 		case XK_F16:	return(29);
! 		case XK_Menu:	return(29);
! 		case XK_F17:	return(31);
! 		case XK_F18:	return(32);
! 		case XK_F19:	return(33);
! 		case XK_F20:	return(34);
  
  		case XK_Find :	return(1);
  		case XK_Insert:	return(2);

--- 148,191 -----
  funcvalue(keycode)
  {
  	switch (keycode) {
! 		case XK_F1:	return(224);
! 		case XK_F2:	return(225);
! 		case XK_F3:	return(226);
! 		case XK_F4:	return(227);
! 		case XK_F5:	return(228);
! 		case XK_F6:	return(229);
! 		case XK_F7:	return(230);
! 		case XK_F8:	return(231);
! 		case XK_F9:	return(232);
! 		case XK_F10:	return(233);
! 		case XK_F11:	return(192);
! 		case XK_F12:	return(193);
! 		case XK_F13:	return(194);
! 		case XK_F14:	return(195);
! 		case XK_F15:	return(196);
! 		case XK_Help:	return(196);
! 		case XK_F16:	return(197);
! 		case XK_Menu:	return(197);
! 		case XK_F17:	return(198);
! 		case XK_F18:	return(199);
! 		case XK_F19:	return(200);
! 		case XK_F20:	return(201);
! 
! 		case XK_R1:	return(208);
! 		case XK_R2:	return(209);
! 		case XK_R3:	return(210);
! 		case XK_R4:	return(211);
! 		case XK_R5:	return(212);
! 		case XK_R6:	return(213);
! 		case XK_R7:	return(214);
! 		case XK_R8:	return(215);
! 		case XK_R9:	return(216);
! 		case XK_R10:	return(217);
! 		case XK_R11:	return(218);
! 		case XK_R12:	return(219);
! 		case XK_R13:	return(220);
! 		case XK_R14:	return(221);
! 		case XK_R15:	return(222);
  
  		case XK_Find :	return(1);
  		case XK_Insert:	return(2);
--
-------------------------------------------------------------------------------
  W. Wilson Ho		        |  INTERNET:  how@iris.ucdavis.edu
  Division of Computer Science	|  UUCP:      ...!ucbvax!ucdavis!iris!how
  EECS Department		|
  University of California	|  Phone:     (916)752-7109
  Davis, CA 95616		|
-------------------------------------------------------------------------------

