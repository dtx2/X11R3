Return-Path: jim
Received: by expo.lcs.mit.edu; Wed, 6 Apr 88 16:18:39 EDT
From: jim@expo.lcs.mit.edu (Jim Fulton)
Message-Id: <8804062018.AA03932@EXPO.LCS.MIT.EDU>
To: xbugs
Subject: xterm should allow redefinition of character classes [with fix]
Date: Wed, 06 Apr 88 16:18:38 EDT

### bug number:   322
### area:         xterm
### severity:     
### assigned to:  jim
### status:       closed
### comments:     fix supplied


VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	all

DISPLAY:
	all

AREA:
	xterm

SYNOPSIS:
	xterm should allow the user to redefine which characters should be
	included in multiclick selects.

DESCRIPTION:
	xterm currently has hardcoded in a table that defines various classes
	of character types.  The multiclick select code will select all
	characters of the same class when doing word selects.  However, it is
	highly desirable for people to be able to tailor this table.  

REPEAT-BY:
	Look at the code; try to cut a filename or mail address.

FILES:
	clients/xterm/ptyx.h
	clients/xterm/charproc.c
	clients/xterm/main.c
	clients/xterm/button.c

FIX:
The following patches add a new resource called "charClass (class CharClass)"
that may be specified with a string containing one or more ranges of the form

	low[-high]:value[,low[-high]:value[...]]

See the table charClass in clients/xterm/button.c for more information.


*** /tmp/,RCSt1a03829	Wed Apr  6 16:06:36 1988
--- ptyx.h	Wed Apr  6 16:00:12 1988
***************
*** 1,5 ****
  /*
!  *	$Header: ptyx.h,v 1.6 88/04/06 13:47:02 jim Exp $
   */
  
  #include <X11/copyright.h>
--- 1,5 ----
  /*
!  *	$Header: ptyx.h,v 1.7 88/04/06 16:00:10 jim Exp $
   */
  
  #include <X11/copyright.h>
***************
*** 326,331 ****
--- 326,332 ----
  	int		pen;		/* current Tektronix pen 0=up, 1=dn */
  	char		*TekGIN;	/* nonzero if Tektronix GIN mode*/
  	int		multiClickTime;	 /* time between multiclick selects */
+ 	char		*charClass;	/* for overriding word selection */
  } TScreen;
  
  /* meaning of bits in screen.select flag */
*** /tmp/,RCSt1a03859	Wed Apr  6 16:08:05 1988
--- charproc.c	Wed Apr  6 16:07:52 1988
***************
*** 1,5 ****
  /*
!  * $Header: charproc.c,v 1.26 88/04/06 13:46:50 jim Exp $
   */
  
  
--- 1,5 ----
  /*
!  * $Header: charproc.c,v 1.28 88/04/06 16:07:43 jim Exp $
   */
  
  
***************
*** 59,64 ****
--- 59,65 ----
  
  #define	XtNboldFont		"boldFont"
  #define	XtNc132			"c132"
+ #define XtNcharClass		"charClass"
  #define	XtNcurses		"curses"
  #define	XtNcursorColor		"cursorColor"
  #define XtNgeometry		"geometry"
***************
*** 87,92 ****
--- 88,94 ----
  #define	XtNvisualBell		"visualBell"
  
  #define	XtCC132			"C132"
+ #define XtCCharClass		"CharClass"
  #define	XtCCurses		"Curses"
  #define XtCGeometry		"Geometry"
  #define	XtCJumpScroll		"JumpScroll"
***************
*** 112,118 ****
  #define	doinput()		(bcnt-- > 0 ? *bptr++ : in_put())
  
  #ifndef lint
! static char rcs_id[] = "$Header: charproc.c,v 1.26 88/04/06 13:46:50 jim Exp $";
  #endif	/* lint */
  
  static long arg;
--- 114,120 ----
  #define	doinput()		(bcnt-- > 0 ? *bptr++ : in_put())
  
  #ifndef lint
! static char rcs_id[] = "$Header: charproc.c,v 1.28 88/04/06 16:07:43 jim Exp $";
  #endif	/* lint */
  
  static long arg;
***************
*** 170,175 ****
--- 172,180 ----
  {XtNc132, XtCC132, XtRBoolean, sizeof(Boolean),
  	XtOffset(XtermWidget, screen.c132),
  	XtRBoolean, (caddr_t) &defaultFALSE},
+ {XtNcharClass, XtCCharClass, XtRString, sizeof(char *),
+ 	XtOffset(XtermWidget, screen.charClass),
+ 	XtRString, (caddr_t) NULL},
  {XtNcurses, XtCCurses, XtRBoolean, sizeof(Boolean),
  	XtOffset(XtermWidget, screen.curses),
  	XtRBoolean, (caddr_t) &defaultFALSE},
***************
*** 1789,1794 ****
--- 1794,1800 ----
     new->screen.TekEmu = request->screen.TekEmu;
     new->misc.re_verse = request->misc.re_verse;
     new->screen.multiClickTime = request->screen.multiClickTime;
+    new->screen.charClass = request->screen.charClass;
  
      /*
       * set the colors if reverse video; this is somewhat tricky since
***************
*** 1841,1846 ****
--- 1847,1854 ----
     XtAddEventHandler(new, 0L, TRUE,
  		VTNonMaskableEvent, (Opaque)NULL);
  
+    set_character_class (new->screen.charClass);
+ 
     /* create it, but don't realize it */
     ScrollBarOn (new, TRUE, FALSE);
  
***************
*** 2585,2587 ****
--- 2593,2698 ----
  }
  #endif	/* MODEMENU */
  
+ /*
+  * set_character_class - takes a string of the form
+  * 
+  *                 low[-high]:val[,low[-high]:val[...]]
+  * 
+  * and sets the indicated ranges to the indicated values.
+  */
+ 
+ int set_character_class (s)
+     register char *s;
+ {
+     register int i;			/* iterator, index into s */
+     int len;				/* length of s */
+     int acc;				/* accumulator */
+     int low, high;			/* bounds of range [0..127] */
+     int base;				/* 8, 10, 16 (octal, decimal, hex) */
+     int numbers;			/* count of numbers per range */
+     int digits;				/* count of digits in a number */
+     static char *errfmt = "%s:  %s in range string \"%s\" (position %d)\n";
+     extern char *ProgramName;
+ 
+     if (!s || !s[0]) return;
+ 
+     base = 10;				/* in case we ever add octal, hex */
+     low = high = -1;			/* out of range */
+ 
+     for (i = 0, len = strlen (s), acc = 0, numbers = digits = 0;
+ 	 i < len; i++) {
+ 	char c = s[i];
+ 
+ 	if (isspace(c)) {
+ 	    continue;
+ 	} else if (isdigit(c)) {
+ 	    acc = acc * base + (c - '0');
+ 	    digits++;
+ 	    continue;
+ 	} else if (c == '-') {
+ 	    low = acc;
+ 	    acc = 0;
+ 	    if (digits == 0) {
+ 		fprintf (stderr, errfmt, ProgramName, "missing number", s, i);
+ 		return (-1);
+ 	    }
+ 	    digits = 0;
+ 	    numbers++;
+ 	    continue;
+ 	} else if (c == ':') {
+ 	    if (numbers == 0)
+ 	      low = acc;
+ 	    else if (numbers == 1)
+ 	      high = acc;
+ 	    else {
+ 		fprintf (stderr, errfmt, ProgramName, "too many numbers",
+ 			 s, i);
+ 		return (-1);
+ 	    }
+ 	    digits = 0;
+ 	    numbers++;
+ 	    acc = 0;
+ 	    continue;
+ 	} else if (c == ',') {
+ 	    /*
+ 	     * now, process it
+ 	     */
+ 
+ 	    if (high < 0) {
+ 		high = low;
+ 		numbers++;
+ 	    }
+ 	    if (numbers != 2) {
+ 		fprintf (stderr, errfmt, ProgramName, "bad value number", 
+ 			 s, i);
+ 	    } else if (SetCharacterClassRange (low, high, acc) != 0) {
+ 		fprintf (stderr, errfmt, ProgramName, "bad range", s, i);
+ 	    }
+ 
+ 	    low = high = -1;
+ 	    acc = 0;
+ 	    digits = 0;
+ 	    numbers = 0;
+ 	    continue;
+ 	} else {
+ 	    fprintf (stderr, errfmt, ProgramName, "bad character", s, i);
+ 	    return (-1);
+ 	}				/* end if else if ... else */
+ 
+     }
+ 
+     if (low < 0 && high < 0) return (0);
+ 
+     /*
+      * now, process it
+      */
+ 
+     if (high < 0) high = low;
+     if (numbers < 1 || numbers > 2) {
+ 	fprintf (stderr, errfmt, ProgramName, "bad value number", s, i);
+     } else if (SetCharacterClassRange (low, high, acc) != 0) {
+ 	fprintf (stderr, errfmt, ProgramName, "bad range", s, i);
+     }
+ 
+     return (0);
+ }
*** /tmp/,RCSt1a03864	Wed Apr  6 16:08:22 1988
--- main.c	Wed Apr  6 16:07:56 1988
***************
*** 1,5 ****
  #ifndef lint
! static char rcs_id[] = "$Header: main.c,v 1.29 88/04/06 13:46:57 jim Exp $";
  #endif	/* lint */
  
  /*
--- 1,5 ----
  #ifndef lint
! static char rcs_id[] = "$Header: main.c,v 1.31 88/04/06 16:07:53 jim Exp $";
  #endif	/* lint */
  
  /*
***************
*** 173,178 ****
--- 173,179 ----
  {"-132",	"*c132",	XrmoptionNoArg,		(caddr_t) "on"},
  {"+132",	"*c132",	XrmoptionNoArg,		(caddr_t) "off"},
  {"-b",		"*internalBorder",XrmoptionSepArg,	(caddr_t) NULL},
+ {"-cc",		"*charClass",	XrmoptionSepArg,	(caddr_t) NULL},
  {"-cr",		"*cursorColor",	XrmoptionSepArg,	(caddr_t) NULL},
  {"-cu",		"*curses",	XrmoptionNoArg,		(caddr_t) "on"},
  {"+cu",		"*curses",	XrmoptionNoArg,		(caddr_t) "off"},
***************
*** 231,236 ****
--- 232,239 ----
  	
  Widget toplevel;
  
+ char *ProgramName;
+ 
  main (argc, argv)
  int argc;
  char **argv;
***************
*** 245,250 ****
--- 248,255 ----
  	int fd2 = -1;
  	int fd3 = -1;
  
+ 	ProgramName = argv[0];
+ 
  	/* close any extra open (stray) file descriptors */
  	for (i = 3; i < NOFILE; i++)
  		(void) close(i);
***************
*** 603,609 ****
  #else	/* TIOCCONS */
  " [-bg backgrnd_color] [-bw border_width] [-cr cursor_color] [-cu] \\\n",
  #endif	/* TIOCCONS */
! " [-fb bold_font] [-fg foregrnd_color] [-fn norm_font] \\\n",
  " [-i] [-j] [-l] [-lf logfile] [-ls] [-mb] [-ms mouse_color] \\\n",
  " [-n name] [-nb bell_margin] [-rv] [-rw] [-s] [-mc msecs]\\\n",
  " [-sb] [-si] [-sk] [-sl save_lines] [-sn] [-st] [-T title] [-t] [-tb] \\\n",
--- 608,614 ----
  #else	/* TIOCCONS */
  " [-bg backgrnd_color] [-bw border_width] [-cr cursor_color] [-cu] \\\n",
  #endif	/* TIOCCONS */
! " [-fb bold_font] [-fg foregrnd_color] [-fn norm_font] [-cc charclasses]\\\n",
  " [-i] [-j] [-l] [-lf logfile] [-ls] [-mb] [-ms mouse_color] \\\n",
  " [-n name] [-nb bell_margin] [-rv] [-rw] [-s] [-mc msecs]\\\n",
  " [-sb] [-si] [-sk] [-sl save_lines] [-sn] [-st] [-T title] [-t] [-tb] \\\n",
*** /tmp/,RCSt1a03871	Wed Apr  6 16:08:55 1988
--- button.c	Wed Apr  6 15:59:53 1988
***************
*** 1,5 ****
  /*
!  *	$Header: button.c,v 1.2 88/04/06 13:46:46 jim Exp $
   */
  
  
--- 1,5 ----
  /*
!  *	$Header: button.c,v 1.3 88/04/06 15:59:50 jim Exp $
   */
  
  
***************
*** 35,41 ****
  				J. Gettys.
  */
  #ifndef lint
! static char rcs_id[] = "$Header: button.c,v 1.2 88/04/06 13:46:46 jim Exp $";
  #endif	/* lint */
  #include <X11/Xos.h>
  #include <X11/Xlib.h>
--- 35,41 ----
  				J. Gettys.
  */
  #ifndef lint
! static char rcs_id[] = "$Header: button.c,v 1.3 88/04/06 15:59:50 jim Exp $";
  #endif	/* lint */
  #include <X11/Xos.h>
  #include <X11/Xlib.h>
***************
*** 644,649 ****
--- 644,662 ----
      48,  48,  48,  48,  48,  48,  48,  48,
  /*   x    y    z    {    |    }    ~  DEL */
      48,  48,  48, 123, 124, 125, 126,   1};
+ 
+ 
+ int SetCharacterClassRange (low, high, value)
+     register int low, high;		/* in range of [0..127] */
+     register int value;			/* arbitrary */
+ {
+ 
+     if (low < 0 || high > 127 || high < low) return (-1);
+ 
+     for (; low <= high; low++) charClass[low] = value;
+ 
+     return (0);
+ }
  
  
  ComputeSelect(startRow, startCol, endRow, endCol)

