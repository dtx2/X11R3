Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Wed, 27 Apr 88 17:50:08 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA05014; Wed, 27 Apr 88 16:48:58 EST
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Wed, 27 Apr 88 08:56:52 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA24159; Wed, 27 Apr 88 09:56:53 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Wed, 27 Apr 88 09:58:00 pdt
Message-Id: <8804271658.AA01741@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: xset pixels
X-Mailer: mh6.5
Date: Wed, 27 Apr 88 09:57:55 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   431
### area:         xset
### severity:     low
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	If xset is used to reset the value of more than one pixel, the first
	pixel specified will be processed more than once.
DESCRIPTION:
	The set_pixel routine is in the parameter processing loop rather than
	outside the loop. This causes the first set of parameters found to
	be processed more than once if more than one pixel is changed.

	The p option parameters are stored in an array, wait until all
	parameters have been processed and then process all p options specified
	or rewrite set_pixel to only process an element of the array rather
	than the whole array every time it is called.
REPEAT-BY:
	xset p 0 blue p 1 yellow
SUGGESTED FIX:
*** clients/xset/xset.c.old	Thu Apr 14 16:08:03 1988
--- clients/xset/xset.c	Thu Apr 14 16:05:04 1988
***************
*** 261,267
      colors[numpixels] = argv[i];
      i++;
      numpixels++;
-     set_pixels(dpy, pixels, colors, numpixels);
    }
    else if (*arg == '-' && *(arg + 1) == 'k') {
      set_lock(dpy, OFF);

--- 261,266 -----
      colors[numpixels] = argv[i];
      i++;
      numpixels++;
    }
    else if (*arg == '-' && *(arg + 1) == 'k') {
      set_lock(dpy, OFF);
***************
*** 276,281
      usage(argv[0]);
  }
  
  XCloseDisplay (dpy);
  
  exit(0);    /*  Done.  We can go home now.  */

--- 275,283 -----
      usage(argv[0]);
  }
  
+ if (numpixels)
+     set_pixels(dpy, pixels, colors, numpixels);
+ 
  XCloseDisplay (dpy);
  
  exit(0);    /*  Done.  We can go home now.  */
***************
*** 443,448
    XColor def;
    int scr = DefaultScreen (dpy);
    Colormap cmap = DefaultColormap (dpy, scr);
  
    if(DisplayCells(dpy, scr) >= 2) {
      while (--numpixels >= 0) {

--- 445,451 -----
    XColor def;
    int scr = DefaultScreen (dpy);
    Colormap cmap = DefaultColormap (dpy, scr);
+   int max_cells = DisplayCells(dpy, scr);
  
    if(DisplayCells(dpy, scr) >= 2) {
      while (--numpixels >= 0) {
***************
*** 447,455
    if(DisplayCells(dpy, scr) >= 2) {
      while (--numpixels >= 0) {
        def.pixel = pixels[numpixels];
!       if (XParseColor (dpy, cmap, colors[numpixels], &def))
! 	XStoreColor(dpy, cmap, &def);
!       else
  	fprintf(stderr, 
  		"%s:  No such color '%s' in colormap %ld = 0x%lx\n",
  		progName, colors[numpixels], cmap, cmap);

--- 450,456 -----
    if(DisplayCells(dpy, scr) >= 2) {
      while (--numpixels >= 0) {
        def.pixel = pixels[numpixels];
!       if (def.pixel >= max_cells)
  	fprintf(stderr, 
  		"%s:  Attempt to set pixel #%d in 0-%d colormap\n",
  		progName, def.pixel, max_cells - 1);
***************
*** 451,456
  	XStoreColor(dpy, cmap, &def);
        else
  	fprintf(stderr, 
  		"%s:  No such color '%s' in colormap %ld = 0x%lx\n",
  		progName, colors[numpixels], cmap, cmap);
      }

--- 452,464 -----
        def.pixel = pixels[numpixels];
        if (def.pixel >= max_cells)
  	fprintf(stderr, 
+ 		"%s:  Attempt to set pixel #%d in 0-%d colormap\n",
+ 		progName, def.pixel, max_cells - 1);
+       else {
+         if (XParseColor (dpy, cmap, colors[numpixels], &def))
+ 	  XStoreColor(dpy, cmap, &def);
+         else
+ 	  fprintf(stderr, 
  		"%s:  No such color '%s' in colormap %ld = 0x%lx\n",
  		progName, colors[numpixels], cmap, cmap);
        }
***************
*** 453,458
  	fprintf(stderr, 
  		"%s:  No such color '%s' in colormap %ld = 0x%lx\n",
  		progName, colors[numpixels], cmap, cmap);
      }
    }
    return;

--- 461,467 -----
  	  fprintf(stderr, 
  		"%s:  No such color '%s' in colormap %ld = 0x%lx\n",
  		progName, colors[numpixels], cmap, cmap);
+       }
      }
    }
    return;

