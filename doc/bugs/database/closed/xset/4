Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Tue, 5 Jul 88 14:45:48 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA26271; Tue, 5 Jul 88 14:44:10 EDT
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Tue, 5 Jul 88 10:44:15 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA29665; Tue, 5 Jul 88 11:44:17 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Tue, 5 Jul 88 11:46:03 pdt
Message-Id: <8807051846.AA17974@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: xset bugs
X-Mailer: mh6.5
Date: Tue, 05 Jul 88 11:45:59 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   695
### area:         xset
### severity:     low
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	'xset c' does not set the click volume to default.
	'xset b' does not set the bell volume to default.
	'xset led' does not set the leds to default.
	'xset p pixel color' on monochrome causes X protocal error.
		Check and ignore if ColorCells not greater than 2.
DESCRIPTION:
	<More detailed description>
REPEAT-BY:
	<What you did to get the error>
SUGGESTED FIX:
*** clients/xset/xset.c.old	Wed Jun 22 16:58:02 1988
--- clients/xset/xset.c	Fri Jun 24 19:09:32 1988
***************
*** 75,80
    } 
    else if (*arg == 'c') {         /* Well, does it start with "c", then? */
      percent = -1;   /* Default click volume.      */
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let click be default. */
        i++;

--- 75,84 -----
    } 
    else if (*arg == 'c') {         /* Well, does it start with "c", then? */
      percent = -1;   /* Default click volume.      */
+     if (i >= argc) {
+       set_click(dpy, percent);
+       break;
+     }
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let click be default. */
        i++;
***************
*** 94,99
    } 
    else if (*arg == 'b') {                       /* Does it start w/ "b".  */
      percent = -1;             /* Set bell to default.   */
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let it stay that way.  */
        set_bell_vol(dpy, percent);

--- 98,107 -----
    } 
    else if (*arg == 'b') {                       /* Does it start w/ "b".  */
      percent = -1;             /* Set bell to default.   */
+     if (i >= argc) {
+       set_bell_vol(dpy, percent);
+       break;
+     }
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {               /* Let it stay that way.  */
        set_bell_vol(dpy, percent);
***************
*** 121,126
  	}
        }
      }
    }
    else if (strcmp(arg, "fp") == 0) {	       /* set font path */
      arg = nextarg(i, argv);

--- 129,135 -----
  	}
        }
      }
+     else set_bell_vol(dpy, percent);	/* set to default */
    }
    else if (strcmp(arg, "fp") == 0) {	       /* set font path */
      arg = nextarg(i, argv);
***************
*** 140,145
    else if (strcmp(arg, "led") == 0) {         /* Turn on one or all LEDs  */
      values.led_mode = ON;
      values.led = ALL;
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {
        i++;

--- 149,158 -----
    else if (strcmp(arg, "led") == 0) {         /* Turn on one or all LEDs  */
      values.led_mode = ON;
      values.led = ALL;
+     if (i >= argc) {
+       set_led(dpy, values.led, values.led_mode);
+       break;
+     }
      arg = nextarg(i, argv);
      if (strcmp(arg, "on") == 0) {
        i++;
***************
*** 449,455
    Colormap cmap = DefaultColormap (dpy, scr);
    int max_cells = DisplayCells(dpy, scr);
  
!   if(DisplayCells(dpy, scr) >= 2) {
      while (--numpixels >= 0) {
        def.pixel = pixels[numpixels];
        if (def.pixel >= max_cells)

--- 462,468 -----
    Colormap cmap = DefaultColormap (dpy, scr);
    int max_cells = DisplayCells(dpy, scr);
  
!   if(DisplayCells(dpy, scr) > 2) {
      while (--numpixels >= 0) {
        def.pixel = pixels[numpixels];
        if (def.pixel >= max_cells)

