Return-Path: cph@kleph.ai.mit.edu
Received: by expo.lcs.mit.edu; Fri, 22 Apr 88 04:07:47 EDT
Received: by kleph.AI.MIT.EDU; Fri, 22 Apr 88 04:09:35 edt
Date: Fri, 22 Apr 88 04:09:35 edt
From: cph@kleph.ai.mit.edu (Chris Hanson)
Message-Id: <8804220809.AA09972@kleph>
To: xbugs@expo.lcs.mit.edu
Subject: lossage in xinit
Reply-To: cph@zurich.ai.mit.edu

### bug number:   404
### area:         xinit
### severity:     medium high
### assigned to:  
### status:       closed
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	HP 9000 model 320

CLIENT OPERATING SYSTEM:
	HP-UX

DISPLAY:
	HP TOPCAT

SYNOPSIS:
	xinit gets "Alarm Call" error when server too slow

DESCRIPTION:
	When the X server takes too long to start up (> 2 seconds) the
	xinit program is killed with an Alarm Call error.  The problem
	is that the `sigAlarm()' procedure does not reset the signal.
	Thus, the first time that the alarm goes off, everything works
	OK, but the second time the handler is not in place, so the
	default handler kills the xinit process.

FIX:
	The `sigAlarm()' procedure should be redefined as follows:

#ifdef SYSV
sigAlarm(sig)
	int sig;
{
	signal(sig, sigAlarm);
}
#endif /* SYSV */

