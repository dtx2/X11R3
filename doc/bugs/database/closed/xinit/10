Return-Path: elsie!ado@cvl.umd.edu
Received: by expo.lcs.mit.edu; Sun, 17 Jul 88 22:00:32 EDT
Received: by cvl.umd.edu (5.54/4.7)
	id AA16104; Sun, 17 Jul 88 22:00:39 EDT
Received: by elsie.UUCP (5.51/4.7)
	id AA14876; Sun, 17 Jul 88 21:43:02 EDT
Date: Sun, 17 Jul 88 21:43:02 EDT
From: elsie!ado@cvl.umd.edu (Arthur David Olson)
Message-Id: <8807180143.AA14876@elsie.UUCP>
Apparently-To: expo.lcs.mit.edu!xbugs

### bug number:   765
### area:         xinit
### severity:     low
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/160

CLIENT OPERATING SYSTEM:
	Sun UNIX 4.2 Release 3.5

DISPLAY:
	Sun B&W

SYNOPSIS:
	Some printf formats don't match the argument lists.

DESCRIPTION:
	This can lead to inappropriate core dumps, as witness:
		Script started on Sun Jul 17 21:22:25 1988
		daisy$ DISPLAY=foobar xhost
		Memory fault - core dumped
		daisy$ exit
		script done on Sun Jul 17 21:23:05 1988
	Clearly the command shouldn't work, but it shouldn't dump core
	either.

REPEAT-BY:
	Linting the code on a system that checks printf formats against
	their argument lists.

FIX:
*** 1.3/clients/xinit/xinit.c	Sun Jul 17 21:37:54 1988
--- 1.4/clients/xinit/xinit.c	Sun Jul 17 21:37:55 1988
***************
*** 213,219 ****
  			if (i == 0 && string != laststring)
  				fprintf(stderr, "\nwaiting for %s ", string);
  			else
! 				fprintf(stderr, ".", string);
  			fflush(stderr);
  		}
  		if (timeout)
--- 213,219 ----
  			if (i == 0 && string != laststring)
  				fprintf(stderr, "\nwaiting for %s ", string);
  			else
! 				fprintf(stderr, ".");
  			fflush(stderr);
  		}
  		if (timeout)
*** 1.1/clients/xhost/xhost.c	Sun Jul 17 21:38:16 1988
--- 1.2/clients/xhost/xhost.c	Sun Jul 17 21:38:18 1988
***************
*** 96,102 ****
  #endif
   
  	if ((dpy = XOpenDisplay(NULL)) == NULL) {
! 	    fprintf(stderr, "%s: Can't open display /* '%s' */\n",
  		    argv[0]/*, XDisplayName("\0")*/);
  	    exit(1);
  	}
--- 96,102 ----
  #endif
   
  	if ((dpy = XOpenDisplay(NULL)) == NULL) {
! 	    fprintf(stderr, "%s: Can't open display\n",
  		    argv[0]/*, XDisplayName("\0")*/);
  	    exit(1);
  	}
*** 1.1/clients/xlsfonts/xlsfonts.c	Sun Jul 17 21:38:22 1988
--- 1.2/clients/xlsfonts/xlsfonts.c	Sun Jul 17 21:38:24 1988
***************
*** 20,27 ****
  
  usage()
  {
! 	fprintf(stderr,"usage: %s [-lmC1] [display] [pattern]\n", program_name,
! 		program_name);
  	fprintf (stderr,
  	    "    -l                   give long info about each font\n");
  	fprintf (stderr,
--- 20,26 ----
  
  usage()
  {
! 	fprintf(stderr,"usage: %s [-lmC1] [display] [pattern]\n", program_name);
  	fprintf (stderr,
  	    "    -l                   give long info about each font\n");
  	fprintf (stderr,
*** 1.1/server/ddx/hp/hp/x_threebut.c	Sun Jul 17 21:38:28 1988
--- 1.2/server/ddx/hp/hp/x_threebut.c	Sun Jul 17 21:38:30 1988
***************
*** 317,323 ****
  	{   printf ("ILLEGAL New state Button %d. \n",
  			new_state->button);
  	    printf ( "Input State %d ; Input Keycode %d, Stimulus %x\n",
! 			state, keycode);
  	    printf ("Current State : State %d,  button %d \n",
  			new_state->state, new_state->button);
  	    getchar();
--- 317,323 ----
  	{   printf ("ILLEGAL New state Button %d. \n",
  			new_state->button);
  	    printf ( "Input State %d ; Input Keycode %d, Stimulus %x\n",
! 			state, keycode, (int) stimulus);
  	    printf ("Current State : State %d,  button %d \n",
  			new_state->state, new_state->button);
  	    getchar();
-- 
	ado@ncifcrf.gov			ADO is a trademark of Ampex.

