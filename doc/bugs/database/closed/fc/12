Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Wed, 3 Aug 88 15:20:53 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA14266; Wed, 3 Aug 88 15:20:56 EDT
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Wed, 3 Aug 88 11:19:59 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA07302; Wed, 3 Aug 88 12:21:10 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Wed, 3 Aug 88 12:22:32 pdt
Message-Id: <8808031922.AA02091@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: fc minor bugs
X-Mailer: mh6.5
Date: Wed, 03 Aug 88 12:22:27 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   814
### area:         fc
### severity:     low
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	fixes several (very) minor problems:
	- only allow the 1,2,4 or 8 to follow the -p option.
	- upgrade the usage message.
	- don't allow a point size less than 1.
	- tighten the syntax on STARTPROPERTIES.
	- tighten the syntax on CHARS.
	- tighten the syntax on BBX.
	- clearer messages when something has gone wrong with STARTCHAR
		secotions.
DESCRIPTION:
	<More detailed description>
SUGGESTED FIX:
	<Preferred, but not necessary>
*** fc.c.old	Tue Jul  5 21:43:19 1988
--- fc.c	Tue Jul  5 21:38:01 1988
***************
*** 323,328
  		case '2':
  		case '4':
  		case '8':
  		    glyphPad = argv[0][2] - '0';
  		    break;
  		}

--- 323,330 -----
  		case '2':
  		case '4':
  		case '8':
+ 		    if (argv[0][3] != '\0')
+ 			goto usage;
  		    glyphPad = argv[0][2] - '0';
  		    break;
  		}
***************
*** 345,351
  	} else {
  	    if (bdffile)
  	usage:
! 		fatal("usage: %s [-p#] [bdf file]", myname);
  	    currentFile = bdffile = argv[0];
  	    if (freopen( bdffile, "r", stdin) == NULL)
  		fatal("could not open  file %s\n", bdffile);

--- 347,354 -----
  	} else {
  	    if (bdffile)
  	usage:
! 		fatal("usage: %s [-p#] [bdf file] with '#' = 1,2,4 or 8",
! 				myname);
  	    currentFile = bdffile = argv[0];
  	    if (freopen( bdffile, "r", stdin) == NULL)
  		fatal("could not open  file %s\n", bdffile);
***************
*** 387,393
      if (!prefix(linebuf, "SIZE"))
  	fatal("missing 'SIZE'");
      if ((sscanf(linebuf, "SIZE %f%d%d", &pointSize, &xRes, &yRes) != 3) ||
! 		xRes < 1 || yRes < 1)
  	fatal("bad 'SIZE'");
      if (xRes != yRes)
          fatal("x and y resolution must be equal");

--- 390,396 -----
      if (!prefix(linebuf, "SIZE"))
  	fatal("missing 'SIZE'");
      if ((sscanf(linebuf, "SIZE %f%d%d", &pointSize, &xRes, &yRes) != 3) ||
! 		pointSize < 1 || xRes < 1 || yRes < 1)
  	fatal("bad 'SIZE'");
      if (xRes != yRes)
          fatal("x and y resolution must be equal");
***************
*** 401,407
  	int nprops;
  	FontPropPtr pfp;
  
! 	sscanf(linebuf, "%*s%d", &nprops);
  	fi.nProps = nprops;
  	pfp = (FontPropPtr)malloc((nprops+GENPROPS) * sizeof(FontPropRec));
  	font.pFP = pfp;

--- 404,411 -----
  	int nprops;
  	FontPropPtr pfp;
  
! 	if (sscanf(linebuf, "STARTPROPERTIES %d", &nprops) != 1)
! 	   fatal("bad 'STARTPROPERTIES'");
  	fi.nProps = nprops;
  	pfp = (FontPropPtr)malloc((nprops+GENPROPS) * sizeof(FontPropRec));
  	font.pFP = pfp;
***************
*** 505,511
  	    quadWidthProp = pfp++;
  	}
      } else { /* no properties */
! 	fatal("missing 'PROPERTIES'");
      }
      getline(linebuf);
  

--- 509,515 -----
  	    quadWidthProp = pfp++;
  	}
      } else { /* no properties */
! 	fatal("missing 'STARTPROPERTIES'");
      }
      getline(linebuf);
  
***************
*** 511,517
  
      if (!prefix(linebuf, "CHARS"))
          fatal("missing 'CHARS'");
!     sscanf(linebuf, "%*s%d", &nchars);
      getline(linebuf);
  
      while ((nchars-- > 0) && prefix(linebuf, "STARTCHAR"))  {

--- 515,522 -----
  
      if (!prefix(linebuf, "CHARS"))
          fatal("missing 'CHARS'");
!     if (sscanf(linebuf, "CHARS %d", &nchars) != 1 || nchars < 1)
! 	fatal("bad 'CHARS'");
      getline(linebuf);
  
      while ((nchars-- > 0) && prefix(linebuf, "STARTCHAR"))  {
***************
*** 574,580
  	    fatal("bad 'DWIDTH'");
  
  	getline( linebuf);
! 	sscanf( linebuf, "BBX %d %d %d %d", &bw, &bh, &bl, &bb);
  	if ((bh < 0) || (bw < 0))
  	    fatal("character '%s' has a negative sized bitmap, %dx%d",
  			charName, bw, bh);

--- 579,586 -----
  	    fatal("bad 'DWIDTH'");
  
  	getline( linebuf);
! 	if (sscanf( linebuf, "BBX %d %d %d %d", &bw, &bh, &bl, &bb) != 4)
! 	    fatal("bad 'BBX'");
  	if ((bh < 0) || (bw < 0))
  	    fatal("character '%s' has a negative sized bitmap, %dx%d",
  			charName, bw, bh);
***************
*** 642,647
  	getline( linebuf);		/* get STARTCHAR or ENDFONT */
      }
  
      if (!prefix(linebuf, "ENDFONT"))
          fatal("missing 'ENDFONT'");
      if (nchars != -1)

--- 648,655 -----
  	getline( linebuf);		/* get STARTCHAR or ENDFONT */
      }
  
+     if (nchars != -1 && !prefix(linebuf, "STARTCHAR"))
+ 	fatal("missing 'STARTCHAR' or %d too few characters", nchars+1);
      if (!prefix(linebuf, "ENDFONT"))
          fatal("missing 'ENDFONT'");
      if (nGl == 0)
***************
*** 644,651
  
      if (!prefix(linebuf, "ENDFONT"))
          fatal("missing 'ENDFONT'");
-     if (nchars != -1)
-         fatal("%d too few characters", nchars+1);
      if (nGl == 0)
          fatal("No characters with valid encodings");
  

--- 652,657 -----
  	fatal("missing 'STARTCHAR' or %d too few characters", nchars+1);
      if (!prefix(linebuf, "ENDFONT"))
          fatal("missing 'ENDFONT'");
      if (nGl == 0)
          fatal("No characters with valid encodings");
  

