Return-Path: jim@EXPO.LCS.MIT.EDU 
Received: by EXPO.LCS.MIT.EDU; Thu, 10 Mar 88 08:58:00 EST
Date: Thu, 10 Mar 88 08:58:00 EST
From: jim@expo.lcs.mit.edu (Jim Fulton)
Message-Id: <8803101358.AA05111@EXPO.LCS.MIT.EDU>
To: bugs
Subject: fonts makefile not flexible in building snf/Makefile

### bug number:   62
### area:         fc
### severity:     
### assigned to:  
### status:       closed

(Message inbox:9)
Return-Path: deboor%buddy.Berkeley.EDU@ucbvax.berkeley.edu
Received: from buddy.Berkeley.EDU by EXPO.LCS.MIT.EDU; Wed, 9 Mar 88 19:58:47 EST
Received: by buddy.Berkeley.EDU (5.57/1.26)
	id AA08926; Wed, 9 Mar 88 16:59:04 PST
Message-Id: <8803100059.AA08926@buddy.Berkeley.EDU>
From: deboor%buddy.Berkeley.EDU@ucbvax.berkeley.edu
To: xbugs@expo.lcs.mit.edu
Subject: fonts makefile not flexible in building snf/Makefile
Date: Wed, 09 Mar 88 16:58:38 PST
Sender: deboor%buddy.Berkeley.EDU@ucbvax.berkeley.edu

VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/160C or 3/75M

CLIENT OPERATING SYSTEM:
	SunOS 3.2 or Sprite (Berkeley experimental)

DISPLAY:
	cg2 or bw2

SYNOPSIS:
	 fonts/Makefile assumes bdf files contain only one period, something
	 not true for fonts converted from X10 (e.g. cour.r.10).

DESCRIPTION:
	 When snf/Makefile is created, awk is used to extract the suffix
	 of each bdf file in turn. Unfortunately, unless the font has a single
	 period in its name, this process will fail miserably.

	 While one response to this is to say "font files should only have
	 one period in their names," this is unreasonable. A better
	 response is to use the command given below.

REPEAT-BY:
	Attempt a "make" in fonts with a font like "cour.r.10.bdf" in the
	bdf directory.

FIX:
	Change the rule for snf/Makefile in fonts/Makefile to read:

	(cd bdf; for i in *.bdf; do \
		f=`expr $$i : '\(.*\)\.bdf$$'`; \
		echo $$f.snf'$$(ZSUFFIX)' : ../bdf/$$f.bdf '$$(FC)' >> ../$@; \
		echo '	$$(FC)' ../bdf/$$f.bdf '$$(COMPRESS) > $$@' >> ../$@; \
	done)
#	(cd bdf; $(LS) *.bdf) \
#	| awk -F. '{printf "%s.snf$$(ZSUFFIX): ../bdf/%s.bdf $$(FC)\n\t$$(FC) .
./bdf/%s.bdf $$(COMPRESS) >$$@\n", $$1, $$1, $$1}' >> $@

Note that "echo '  $$(FC)'" is actually "echo '\t$$(FC)'"


