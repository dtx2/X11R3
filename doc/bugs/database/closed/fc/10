Return-Path: @XX.LCS.MIT.EDU,@relay.cs.net:alt%shark.gwd.tek.com@tektronix.tek.com
Received: by EXPO.LCS.MIT.EDU; Tue, 19 Jul 88 16:57:12 EDT
Received: from RELAY.CS.NET by XX.LCS.MIT.EDU with TCP/SMTP; Tue 19 Jul 88 16:55:29-EDT
Received: from relay2.cs.net by RELAY.CS.NET id ai22310; 19 Jul 88 15:31 EDT
Received: from tektronix.tek.com by RELAY.CS.NET id aa15091; 19 Jul 88 15:14 EDT
Received: from shark.GWD.TEK.COM by tektronix.TEK.COM (5.51/6.24)
	id AA16420; Tue, 19 Jul 88 11:12:09 PDT
Received: by shark.GWD.TEK.COM (5.16/6.24)
	id AA24076; Tue, 19 Jul 88 11:13:27 PDT
From: Al Tabayoyon <alt@shark.gwd.tek.com>
Message-Id: <8807191813.AA24076@shark.GWD.TEK.COM>
Date: Tue, 19 Jul 88 11:13:23 PDT
To: xbugs@expo.lcs.mit.edu
Cc: alt@shark.gwd.tek.com
Fcc: //shark/bd/X11/doc/bugtracking/xbugs_mail
Subject: X11 R2 bug report: fc canot set inkInside to TRUE

### bug number:   747
### area:         fc
### severity:     low
### comments:     


Al Tabayoyon
M.S. 61-277
Tektronix, Inc.
P.O. Box 1000
Wilsonville, OR
	 97070-1000

(503) 685-2149
alt@shark.TEK.COM

--------------------
VERSION:
	X11 release 2 with fixes 1-124 applied

CLIENT MACHINE:
	4310
	(Tektronix 4310 == 4315, 4316, 4317)
	(Tektronix 4320 == 4324, 4325)
	(Tektronix 4330 == 4335, 4336, 4337)

CLIENT OPERATING SYSTEM:
	UTEK 2.3 (== 4.2bsd kernel with some 4.3 utilities)

DISPLAY:
	4310

SYNOPSIS:
	SNF Font Compiler (fc) can never set inkInside to TRUE.

DESCRIPTION:
	Area: fc
	Files:
	    fonts/compiler/fontutil.c
	    server/include/fontstruct.h

	The font compiler (fc) currently cannot set inkInside to TRUE
	because of type vs. operation inconsistencies:
	    (minbounds->metrics.ascent >= -font->pFI->fontDescent) 
	    (minbounds->metrics.descent <= -font->pFI->fontAscent)
	where font->pFi->fontAscent and font->pFi->fontDescent are of
	type "unsigned int".  This problem affects servers that can
	write text via a faster mode if font has the "inkInside"
	characteristic.

	We have one of two possible problems:
	    1. Incorrect type for "fontAscent" in FontInfoRec.
	    2. Unnecessary checks in "fontutil.c" for setting inkInside.
	The essential question is "Can a font have a negative fontAscent value?"
	If YES, then change server/include/fontstruct.h:
	    from: unsigned int fontAscent;
	    to:   int fontAscent;
	If NO, then change fonts/compiler/fontutil.c:
	    remove following lines from inkInside checks because they are
	    unnecessary since fontAscent is never negative:
		(minbounds->metrics.ascent >= -font->pFI->fontDescent) &&
		(minbounds->metrics.descent <= -font->pFI->fontAscent) &&

REPEAT-BY:
	Bug was detected via stepping through server glyphblting with dbx.
	An easier method is to extend 'showsnf' to print the value for
	pFI->inkInside, then run 'showsnf' on fixed.snf.

FIX:
	The following patch is an intermediate fix that allows the checks
	for inkInside currently in "fontutil.c" to work with the current
	FontInfoRec structure.  The "real" fix is described in the
	DESCRIPTION section above and requires an answer to the posed
	question.

patch for fonts/compiler/fontutil.c:
*** 152,161
  
      if ((minbounds->metrics.leftSideBearing >= 0) &&
  	(maxoverlap <= 0) &&
! 	(minbounds->metrics.ascent >= -font->pFI->fontDescent) &&
! 	(maxbounds->metrics.ascent <= font->pFI->fontAscent) &&
! 	(minbounds->metrics.descent <= -font->pFI->fontAscent) &&
! 	(maxbounds->metrics.descent <= font->pFI->fontDescent))
  	font->pFI->inkInside = TRUE;
      else
  	font->pFI->inkInside = FALSE;

--- 152,161 -----
  
      if ((minbounds->metrics.leftSideBearing >= 0) &&
  	(maxoverlap <= 0) &&
! 	(minbounds->metrics.ascent >= -(int)(font->pFI->fontDescent)) &&
! 	(maxbounds->metrics.ascent <= (int)(font->pFI->fontAscent)) &&
! 	(minbounds->metrics.descent >= -(int)(font->pFI->fontAscent)) &&
! 	(maxbounds->metrics.descent <= (int)(font->pFI->fontDescent)))
  	font->pFI->inkInside = TRUE;
      else
  	font->pFI->inkInside = FALSE;

