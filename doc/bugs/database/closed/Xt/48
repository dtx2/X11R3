Return-Path: fred%hpcvxft@sde.hp.com
Received: by expo.lcs.mit.edu; Tue, 16 Aug 88 12:31:54 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA13575; Tue, 16 Aug 88 12:31:50 EDT
Received: from hp-pcd.HP.COM by hp-sde ; Tue, 16 Aug 88 09:33:48 pdt
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA12576; Tue, 16 Aug 88 09:32:18 PDT
Received: from hpcvxft by hpcvxft.HP.COM; Tue, 16 Aug 88 09:31:35 pdt
Message-Id: <8808161631.AA01782@hpcvxft.HP.COM>
To: xbugs%expo.lcs.mit.edu@athena.mit.edu
Subject: Xtk bug: AddForwardingHandler()
X-Mailer: mh6.5
Date: Tue, 16 Aug 88 09:31:27 PDT
From: Fred Taft <fred%hpcvxft@sde.hp.com>

### bug number:   880
### area:         Xt
### severity:     low
### comments:     


VERSION:
	Xtk release 2

SYNOPSIS:
	AddForwardingHandler() does not take window borders into
        consideration when checking if cursor is in a window.

DESCRIPTION:
	AddForwardingHandler(), which is part of the input focus
        mechanism within Xtk, does not take window borders into
        consideration when it checks to see if the cursor is already
        in the window to which the focus is being set.  This causes
        the widget to not get the initial FocusIn event, which is also
        generated by AddForwardingHandler().

FIX:

/* The following is a patch to Event.c */

997a998
>     int ul_x, lr_x, ul_y, lr_y;
1047,1048c1048,1063
< 	if (win_x >= 0 && win_x < widget->core.width &&
< 	    win_y >= 0 && win_y < widget->core.height) {
---
> 
>         /*
>          * The work variables are necessary because
>          * the core's height and width fields are unsigned, and win_x and
>          * win_y may be negative; if they are, then the comparison can fail
>          * when it shouldn't.  Additionally, the widget's borders need to
>          * be considered in this calculation.
>          */
>         ul_x = (int)(0 - widget->core.border_width);
>         ul_y = (int)(0 - widget->core.border_width);
>         lr_x = (int)(widget->core.width + (widget->core.border_width << 1));
>         lr_y = (int)(widget->core.height + (widget->core.border_width << 1));
> 
> 	if ((win_x >= ul_x) && (win_x < lr_x) &&
> 	   (win_y >= ul_y) && (win_y < lr_y))
>         {

