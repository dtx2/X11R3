Return-Path: fred%hpcvxft@hplabs.hp.com
Received: by expo.lcs.mit.edu; Mon, 25 Apr 88 13:07:28 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA13313; Mon, 25 Apr 88 12:06:12 EST
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Mon, 25 Apr 88 09:05:34 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA11280; Mon, 25 Apr 88 10:05:20 PDT
Received: from hpcvxft by hpcvxft.HP.COM; Mon, 25 Apr 88 10:06:00 pdt
Message-Id: <8804251706.AA02307@hpcvxft.HP.COM>
To: xbugs%expo.lcs.mit.edu@athena.mit.edu
Cc: haynes@decwrl.dec.com
Subject: Bug in shell destroy
X-Mailer: mh6.5
Date: Mon, 25 Apr 88 10:05:49 PDT
From: fred%hpcvxft@hplabs.hp.com

### bug number:   413
### area:         Xt
### severity:     high
### comments:     
### see also:     338, 356, 410

VERSION:
	Xtk release 2

SYNOPSIS:
	Deleting a widget which has popup children dumps core

DESCRIPTION:
	When deleting a widget which has some popup children attached,
        there appears to be some nasty interactions going on between the
        core_destroy procedure and the shell_destroy procedure.

        During the destroy process, the shell_destroy routine checks to
        see if the parent is being destroyed; if so, then it does not update
        the popup list or popup count for the parent.  When the parent is
        finally destroyed (in core_destroy) it attempts to destroy the
        windows for each of its popup children; unfortunately, the popup
        children have all already been destroyed, but the parents popup list
        is bogus (this causes the segmentation fault).  As an aside, when
        destroying the popup childrens window, core_destroy should first
        verify that the popup child has a window!

REPEAT-BY:
	Destroying a widget which has some popup children.


