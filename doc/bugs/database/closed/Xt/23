Return-Path: hrp%rothko.CRAY.COM@uc.msc.umn.edu
Received: by expo.lcs.mit.edu; Tue, 12 Jul 88 14:13:59 EDT
Received: by uc.msc.umn.edu (5.54/1.14)
	id AA16513; Tue, 12 Jul 88 13:10:59 CDT
Received: from rothko.cray.com by hall.cray.com
	id AA00319; 3.2/CRI-2.9; Tue, 12 Jul 88 13:15:23 CDT
Received: by rothko.cray.com
	id AA05619; 3.2/CRI-2.9; Tue, 12 Jul 88 13:14:56 CDT
Date: Tue, 12 Jul 88 13:14:56 CDT
From: hrp%rothko.CRAY.COM@uc.msc.umn.edu (Hal Peterson)
Message-Id: <8807121814.AA05619@rothko.cray.com>
To: xbugs@expo.lcs.mit.edu
Cc: jlf@sierra.cray.com
Subject: Xtk dumps core while destroying top-level widget

### bug number:   755
### area:         Xt
### severity:     low
### comments:     

VERSION:
	X11 release 2

CLIENT MACHINE:
	Sun 3/50.

CLIENT OPERATING SYSTEM:
	SunOS 3.5.

DISPLAY:
	Monochrome

SYNOPSIS:
	Program using Xt and Xaw dumps core when top-level widget is destroyed.

DESCRIPTION:
	See REPEAT-BY; the program gets a SIGSEGV and dumps core when
	the user hits the quit button.

REPEAT-BY:
	The following program is derived from examples/Xaw/xwidgets.c.
	When the commented-out XtAddCallback is restored (along with
	the Destroyed function), the core dump goes away.

    #include <stdio.h>
    #include <X11/Xatom.h>
    #include <X11/Intrinsic.h>
    #include <X11/Atoms.h>
    #include <X11/Box.h>
    #include <X11/Command.h>
    #include <X11/VPaned.h>

    /* ARGSUSED */
    void Quit(widget,closure,callData)
	Widget widget;
	caddr_t closure;		/* Widget */
	caddr_t callData;
    {
	fprintf(stderr,"command callback.\n");
	XtDestroyWidget((Widget)closure);
    }


    void main(argc, argv)
	unsigned int argc;
	char **argv;
    {
	Widget toplevel, outer;
	static XtCallbackRec callback[2]; /* K&R: initialized to NULL */
	Arg arg[10];

	toplevel = XtInitialize( NULL, "XBoxes", NULL, 0, &argc, argv);

	XtSetArg( arg[0], XtNwidth, 200 );
	outer = XtCreateManagedWidget( "vpaned", vPanedWidgetClass, toplevel,
				       arg, 1 );
    /*    XtAddCallback( outer, XtNdestroyCallback, Destroyed, NULL );*/

	callback[0].callback = Quit;
	callback[0].closure = (caddr_t)toplevel;
	XtSetArg( arg[0], XtNcallback, callback );
	XtCreateManagedWidget( "quit", commandWidgetClass, outer, arg, 1 );

	XtRealizeWidget(toplevel);
	XtMainLoop();
    }


FIX:
	The problem is in ShellDestroy, in lib/Xt/Shell.c, line 864.
	There is a test of something in the parent widget's structure
	following a test to see if the parent exists; but the program
	has a single-bar or (bitwise) instead of a double-bar or
	(logical).  Here is the diff:

*** hack/Xt/Shell.c~	Tue Jul 12 11:51:58 1988
--- hack/Xt/Shell.c	Tue Jul 12 12:13:34 1988
***************
*** 864,870 ****
      Boolean found = FALSE;
      register Widget parent;
      parent = widget->core.parent;
!     if (parent == NULL | parent->core.being_destroyed) return;
      for (i=0;i<=parent->core.num_popups-1;i++)
          if (parent->core.popup_list[i] == widget){
              found = TRUE; break;
--- 864,870 ----
      Boolean found = FALSE;
      register Widget parent;
      parent = widget->core.parent;
!     if (parent == NULL || parent->core.being_destroyed) return;
      for (i=0;i<=parent->core.num_popups-1;i++)
          if (parent->core.popup_list[i] == widget){
              found = TRUE; break;


--
Hal Peterson / Cray Research / 1440 Northland Dr. / Mendota Hts, MN  55120
hrp%hall.cray.com@uc.msc.umn.edu	ihnp4!cray!hrp	    (612) 681-3145

