Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Wed, 3 Aug 88 15:19:21 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA14234; Wed, 3 Aug 88 15:19:22 EDT
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Wed, 3 Aug 88 11:18:37 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA07151; Wed, 3 Aug 88 12:19:54 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Wed, 3 Aug 88 12:21:15 pdt
Message-Id: <8808031921.AA02069@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: bitmap minor bugs
X-Mailer: mh6.5
Date: Wed, 03 Aug 88 12:21:09 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   813
### area:         bitmap
### severity:     low
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	Fixed several minor bugs:
	- when an option is specified more than once.
	- must specify "-d" or "-display".
	- must specify "-g" or "-geometry".
	- support obsoleted display specification (other clients still
		support it, why not this one?).
	- invalid screen specified.
DESCRIPTION:
	<More detailed description>
REPEAT-BY:
	bitmap junk -fg blue -fg red
	bitmap junk -depot :dpy
	bitmap junk -george 10x20
	bitmap junk host:display
	bitmap junk -d host:display.-1
SUGGESTED FIX:
	I would have preferred that XOpenDipslay return NULL if the screen
	is invalid, but our Xlib person says its the responsiblility of the
	client to check.
*** bitmap.c.old	Tue Jul  5 15:50:10 1988
--- bitmap.c	Tue Jul  5 15:49:44 1988
***************
*** 445,451
  
  	for (attr = attributes; attr->argname != NULL; attr++) {
  	    if (strcmp (arg, attr->argname) == 0) {
! 		if (++i >= argc) usage ();
  		attr->value = argv[i];
  		break;				/* out of deepest for loop */
  	    }

--- 445,451 -----
  
  	for (attr = attributes; attr->argname != NULL; attr++) {
  	    if (strcmp (arg, attr->argname) == 0) {
! 		if (++i >= argc || attr->value != NULL) usage ();
  		attr->value = argv[i];
  		break;				/* out of deepest for loop */
  	    }
***************
*** 453,459
  	if (attr->argname) continue;		/* got an arg */
  	switch (arg[1]) {
  	    case 'd':				/* -display host:dpy */
! 		if (++i >= argc) usage ();
  		host = argv[i];
  		continue;
  	    case 'g':				/* -geometry geom */

--- 453,460 -----
  	if (attr->argname) continue;		/* got an arg */
  	switch (arg[1]) {
  	    case 'd':				/* -display host:dpy */
! 		if ((strlen(arg) > 2 && strcmp(arg, "-display")) || 
! 			host != NULL || ++i >= argc) usage ();
  		host = argv[i];
  		continue;
  	    case 'g':				/* -geometry geom */
***************
*** 457,463
  		host = argv[i];
  		continue;
  	    case 'g':				/* -geometry geom */
! 		if (++i >= argc) usage ();
  		geometry = argv[i];
  		continue;
  	    case 'n':				/* -nodashed */

--- 458,465 -----
  		host = argv[i];
  		continue;
  	    case 'g':				/* -geometry geom */
! 		if ((strlen(arg) > 2 && strcmp(arg, "-geometry")) || 
! 			geometry != NULL || ++i >= argc) usage ();
  		geometry = argv[i];
  		continue;
  	    case 'n':				/* -nodashed */
***************
*** 466,472
  	    default:
  		usage ();
  	}
!     } else if (arg[0] == '=')			/* obsolete */
  	geometry = arg;
      else if (rindex(arg, ':'))			/* obsolete */
  	host = argv[i];

--- 468,476 -----
  	    default:
  		usage ();
  	}
!     } else if (arg[0] == '=') {			/* obsolete */
! 	if (geometry != NULL)
! 	   usage();
  	geometry = arg;
  	}
      else if (rindex(arg, ':')) {		/* obsolete */
***************
*** 468,474
  	}
      } else if (arg[0] == '=')			/* obsolete */
  	geometry = arg;
!     else if (rindex(arg, ':'))			/* obsolete */
  	host = argv[i];
      else if (filename == NULL)
      	filename = argv[i];

--- 472,481 -----
  	if (geometry != NULL)
  	   usage();
  	geometry = arg;
! 	}
!     else if (rindex(arg, ':')) {		/* obsolete */
! 	if (host != NULL)
! 	   usage();
  	host = argv[i];
  	}
      else if (filename == NULL)
***************
*** 470,475
  	geometry = arg;
      else if (rindex(arg, ':'))			/* obsolete */
  	host = argv[i];
      else if (filename == NULL)
      	filename = argv[i];
      else if (dimensions == NULL)

--- 477,483 -----
  	if (host != NULL)
  	   usage();
  	host = argv[i];
+ 	}
      else if (filename == NULL)
      	filename = argv[i];
      else if (dimensions == NULL)
***************
*** 489,494
  	exit (1);
      }
  
    if (geometry == NULL) geometry = XGetDefault (d, progname, "Geometry");
    if (dimensions == NULL) 
      dimensions = XGetDefault (d, progname, "Dimensions");

--- 497,509 -----
  	exit (1);
      }
  
+   screen = DefaultScreen(d);
+   if (screen < 0 || ScreenCount(d) <= screen) {
+ 	fprintf(stderr, "%s:  unable to open display '%s'\n",
+ 		argv[0], XDisplayName(host));
+ 	exit (1);
+     }
+ 
    if (geometry == NULL) geometry = XGetDefault (d, progname, "Geometry");
    if (dimensions == NULL) 
      dimensions = XGetDefault (d, progname, "Dimensions");
***************
*** 499,505
  	    use_dashed_lines = FALSE;
    }
  
-   screen = DefaultScreen(d);
    gc = DefaultGC (d, screen);
    XSetLineAttributes (d, gc, 0, LineSolid, CapNotLast, JoinMiter);
  

--- 514,519 -----
  	    use_dashed_lines = FALSE;
    }
  
    gc = DefaultGC (d, screen);
    XSetLineAttributes (d, gc, 0, LineSolid, CapNotLast, JoinMiter);
  

