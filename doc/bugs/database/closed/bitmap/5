Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: from ATHENA (ATHENA.MIT.EDU) by EXPO.LCS.MIT.EDU; Wed, 16 Mar 88 21:22:28 EST
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA08324; Wed, 16 Mar 88 21:21:35 EST
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Wed, 16 Mar 88 13:29:34 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA11625; Wed, 16 Mar 88 13:33:21 PST
Received: from hpcvxlc by hpcvxlc.HP.COM; Wed, 16 Mar 88 13:33:56 pst
Message-Id: <8803162133.AA24735@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: bitmap bug
X-Mailer: mh6.5
Date: Wed, 16 Mar 88 13:33:51 PST
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   145
### area:         bitmap
### severity:     
### assigned to:  
### status:       closed
### comments:     

VERSION:
	X11 release 2
SYNOPSIS:
	Can attempt to use a directory as a file and can access
	a file that is write only.
DESCRIPTION:
	If a directory is given to bitmap for its filename, bitmap will
	attempt to read it. Often getting 'lost' in the process (I suspect
	it just keeps reading blocks trying to find its information.)
	If a file is write only, bitmap will not be able to read it
	so it simply creates an empty bitmap. When a WriteOutput command
	is given, the file can now be overwritten since write permission
	is available.
REPEAT-BY:
	bitmap 'directory name'
	bitmap 'write only filename'
FIX:
*** bitmap.c.R2	Tue Mar 15 16:10:10 1988
--- bitmap.c	Tue Mar 15 16:20:59 1988
***************
*** 17,22
  #include <X11/cursorfont.h>  
  #include <ctype.h>
  
  #define TOP_MARGIN 10
  #define LEFT_MARGIN 10
  #define BOTTOM_MARGIN 10

--- 17,24 -----
  #include <X11/cursorfont.h>  
  #include <ctype.h>
  
+ #include <sys/stat.h>
+ 
  #define TOP_MARGIN 10
  #define LEFT_MARGIN 10
  #define BOTTOM_MARGIN 10
***************
*** 206,211
    int padding;
    int bytes_of_input;		/* bytes of raster data to be read in */
    int bytes_per_line_input;	/* includes padding */
  
    if (!(stream = fopen(filename, "r")))
      return(BitmapOpenFailed);

--- 208,230 -----
    int padding;
    int bytes_of_input;		/* bytes of raster data to be read in */
    int bytes_per_line_input;	/* includes padding */
+   struct stat buf;
+   int fd;
+ 
+   if (!(stat(filename, &buf))) {
+      if ((buf.st_mode & 0170000) == 040000) {
+ 	fprintf(stderr, "Permission denied: file \"%s\" is a directory!\n",
+ 			filename);
+ 	exit(1);
+      }
+   }
+   if ((fd = open(filename, O_RDONLY)) == -1) {
+      if (errno == EACCES) {
+ 	fprintf(stderr, "Read permission denied on file \"%s\"\n", filename);
+ 	exit(1);
+      }
+   }
+   close(fd);
  
    if (!(stream = fopen(filename, "r")))
      return(BitmapOpenFailed);

