Return-Path: lori%hpcvxlc@hplabs.hp.com
Received: by expo.lcs.mit.edu; Thu, 9 Jun 88 12:34:34 EDT
Received: by ATHENA.MIT.EDU (5.45/4.7) id AA29265; Thu, 9 Jun 88 12:33:07 EDT
Received: from hp-pcd.HP.COM (hp-pcd) by hplabs.HP.COM with SMTP ; Thu, 9 Jun 88 08:32:30 PST
Received: by hp-pcd.HP.COM (5.51/4.7)
	id AA07742; Thu, 9 Jun 88 09:31:02 PDT
Received: from hpcvxlc by hpcvxlc.HP.COM; Thu, 9 Jun 88 09:33:06 pdt
Message-Id: <8806091633.AA07480@hpcvxlc.HP.COM>
To: xbugs@athena.mit.edu
Subject: bitmap hints
X-Mailer: mh6.5
Date: Thu, 09 Jun 88 09:33:02 PDT
From: Lori Cook <lori%hpcvxlc@hplabs.hp.com>

### bug number:   582
### area:         bitmap
### severity:     enhancement
### comments:     this is bogus; if not set, window manager should choose  -Jim

VERSION:
	X11 release 2
SYNOPSIS:
	bitmap should set max hints to be a good client
DESCRIPTION:
	bitmap should set maximum width and height for
	consistancy sake. While currently 'uwm' will clip
	this to the display size, other window managers may
	handle this differently plus new and larger displays
	may be developed.

	MAX_INT was chosen as the upper boundary for two
	reasons. 1) values can't be larger than the maximum
	integer and 2) ANSI standard for 'C' is trying to
	define a MAX_INT that will be machine dependent.
	Maybe this define could be provided in a generic
	X file for machine dependencies?
	
REPEAT-BY:
	<What you did to get the error>
SUGGESTED FIX:
*** clients/bitmap/bitmap.c.old	Wed Jun  8 13:32:13 1988
--- clients/bitmap/bitmap.c	Wed Jun  8 13:31:35 1988
***************
*** 9,14
  static char *rcsid_bitmap_c = "$Header: bitmap.c,v 1.20 88/06/07 16:24:16 lori Exp $";
  #endif
  
  #include <X11/Xos.h>
  #include <X11/Xlib.h>
  #include <errno.h>

--- 9,22 -----
  static char *rcsid_bitmap_c = "$Header: bitmap.c,v 1.20 88/06/07 16:24:16 lori Exp $";
  #endif
  
+ #ifndef	MAX_INT
+ #ifdef	hpux
+ #define	MAX_INT ((1<<31)-1)
+ #else
+ #define	MAX_INT ((1<<15)-1)
+ #endif
+ #endif
+ 
  #include <X11/Xos.h>
  #include <X11/Xlib.h>
  #include <errno.h>
***************
*** 667,672
          &hints.width, &hints.height);
       hints.flags |= PSize;
       }
    if (!(hints.flags & USPosition)) {
       hints.x = min (200, display_width - hints.width - 2*borderwidth);
       hints.y = min (200, display_height - hints.height - 2*borderwidth);

--- 675,682 -----
          &hints.width, &hints.height);
       hints.flags |= PSize;
       }
+   hints.flags |= PMaxSize;
+   hints.max_width = hints.max_height = MAX_INT - 2 * borderwidth;
    if (!(hints.flags & USPosition)) {
       hints.x = min (200, display_width - hints.width - 2*borderwidth);
       hints.y = min (200, display_height - hints.height - 2*borderwidth);
***************
*** 670,675
    if (!(hints.flags & USPosition)) {
       hints.x = min (200, display_width - hints.width - 2*borderwidth);
       hints.y = min (200, display_height - hints.height - 2*borderwidth);
       hints.flags |= PPosition;
       }
    if ((geom_result & XValue) && (geom_result & XNegative))

--- 680,687 -----
    if (!(hints.flags & USPosition)) {
       hints.x = min (200, display_width - hints.width - 2*borderwidth);
       hints.y = min (200, display_height - hints.height - 2*borderwidth);
+      if (hints.x < 0) hints.x = 0;
+      if (hints.y < 0) hints.y = 0;
       hints.flags |= PPosition;
       }
    if ((geom_result & XValue) && (geom_result & XNegative))

