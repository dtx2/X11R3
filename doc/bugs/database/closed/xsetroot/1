Return-Path: ibmuupa!erik@ucbvax.berkeley.edu
Received: from ucbvax.Berkeley.EDU by EXPO.LCS.MIT.EDU; Wed, 16 Mar 88 03:02:53 EST
Received: by  (5.58/1.26)
	id AA04433; Tue, 15 Mar 88 20:54:01 PST
Received: by ibmpa.pasc.ibm.com (5.51/4.7)
	id AA02032; Tue, 15 Mar 88 07:10:08 PST
Received: by salmon.pasc.ibm.com (5.51/5.17)
	id AA05464; Tue, 15 Mar 88 07:14:58 PST
Date: Tue, 15 Mar 88 07:14:58 PST
From: ibmuupa!erik@ucbvax.berkeley.edu (Erik Fortune)
Message-Id: <8803151514.AA05464@salmon.pasc.ibm.com>
To: xbugs@expo.lcs.mit.edu
Subject: xsetroot doesn't take color defn's

### bug number:   123
### area:         xsetroot
### severity:     
### assigned to:  
### status:       closed

VERSION:
	X11 release 2

CLIENT MACHINE:
	Any

CLIENT OPERATING SYSTEM:
	Any

DISPLAY:
	Any

SYNOPSIS:
	 xsetroot doesn't accept numeric pixel definitions.
	 (Release 2 IBM TCS bug #2)

DESCRIPTION:
	 xsetroot should accept either color names or pixel definitions (#00f,
	 for example), but currently only accepts color names.

REPEAT-BY:
	Try:
	% xsetroot -solid #f00
	Should turn the screen solid red, instead complains about unknown 
	colors.

FIX:
In .../clients/xsetroot/xsetroot.c:
*** /tmp/,RCSt1005430	Tue Mar 15 07:07:24 1988
--- xsetroot.c	Tue Mar 15 07:05:43 1988
***************
*** 394,407 ****
      char *name;
      unsigned long pixel;
  {
!     XColor scolor, ecolor;
  
      if (!name || !*name)
  	return pixel;
!     if (!XAllocNamedColor(dpy, DefaultColormap(dpy, screen), name,
! 			  &scolor, &ecolor)) {
! 	fprintf(stderr, "%s: unknown color, or allocation failure: %s\n",
! 			program_name, name);
  	exit(1);
  	/*NOTREACHED*/
      }
--- 394,410 ----
      char *name;
      unsigned long pixel;
  {
!     XColor ecolor;
  
      if (!name || !*name)
  	return pixel;
!     if (!XParseColor(dpy,DefaultColormap(dpy,screen),name,&ecolor)) {
! 	fprintf(stderr,"%s: unknown color %d\n",program_name,name);
! 	exit(1);
! 	/*NOTREACHED*/
!     }
!     if (!XAllocColor(dpy, DefaultColormap(dpy, screen),&ecolor)) {
! 	fprintf(stderr, "%s: allocation failure: %s\n",program_name, name);
  	exit(1);
  	/*NOTREACHED*/
      }

