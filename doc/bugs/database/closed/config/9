Return-Path: swick
Received: by expo.lcs.mit.edu; Wed, 3 Aug 88 09:07:42 EDT
From: swick@expo.lcs.mit.edu (Ralph Swick)
Message-Id: <8808031307.AA10762@EXPO.LCS.MIT.EDU>
To: xbugs
Subject: makedepend doesn't understand X3J11 #pragma directive
Date: Wed, 03 Aug 88 09:07:41 EDT

### bug number:   812
### area:         config
### severity:     low
### comments:     

VERSION:
	X Window System, Version 11, Release 2

CLIENT MACHINE and OPERATING SYSTEM:
	Any supporting X3J11 compilers

DISPLAY:
	NA

WINDOW MANAGER:
	NA

AREA:
	config

SYNOPSIS:
	makedepend reports 'unknown directive' when it encounters #pragma.
	[reported by user]

REPEAT BY:
	Compile on a Sun 4:

	Date: 2 Aug 88 18:56:33 GMT
	From: romeo!ndd@cs.duke.edu  (Ned D. Danieley)
	Subject: X11R2 on Sun 4/110

	I'm trying to install X11R2 on a 4/110, and I'm getting some strange
	error messages from makedepend:

	xpr.c, line 103: unknown directive == "#pragma unknown_control_flow(setjmp)"
	xpr.c, line 105: unknown directive == "#pragma
unknown_control_flow(on_fault)"

	The name of the .c file varies, but the lines are always the same (2 per
	file). Has anyone seen this? 

	Ned Danieley (ndd@sunbar.mc.duke.edu)
	Basic Arrhythmia Laboratory
	Box 3140, Duke University Medical Center
	Durham, NC  27710
	(919) 684-6807 or 684-6942

FIX:
	Files: util/makedepend/{def.h,main.c,parse.c}

*** util/makedepend/def.h.old
--- util/makedepend/def.h
***************
*** 1,7 ****
  /*
!  * $Header: def.h,v 1.2 87/08/20 12:13:09 toddb Exp $
   *
   * $Log:	def.h,v $
   * Revision 1.2  87/08/20  12:13:09  toddb
   * add define for u_char for the sake of USG.
   * 
--- 1,10 ----
  /*
!  * $Header: def.h,v 1.3 88/08/03 08:55:12 xswick Exp $
   *
   * $Log:	def.h,v $
+  * Revision 1.3  88/08/03  08:55:12  xswick
+  * ignore X3J11 #pragma directive
+  * 
   * Revision 1.2  87/08/20  12:13:09  toddb
   * add define for u_char for the sake of USG.
   * 
***************
*** 36,41 ****
--- 39,46 ----
  #define SYMTABINC	10	/* must be > 1 for define() to work right */
  #define	TRUE		1
  #define	FALSE		0
+ 
+ /* the following must match the directives table in main.c */
  #define	IF		0
  #define	IFDEF		1
  #define	IFNDEF		2
***************
*** 45,52 ****
  #define	UNDEF		6
  #define	INCLUDE		7
  #define	LINE		8
! #define	IFFALSE		9	/* pseudo value --- never matched */
! #define	INCLUDEDOT	10	/* pseudo value --- never matched */
  
  #ifdef DEBUG
  extern int	debug;
--- 50,58 ----
  #define	UNDEF		6
  #define	INCLUDE		7
  #define	LINE		8
! #define	PRAGMA		9
! #define	IFFALSE		10	/* pseudo value --- never matched */
! #define	INCLUDEDOT	11	/* pseudo value --- never matched */
  
  #ifdef DEBUG
  extern int	debug;

*** util/makedepend/main.c.old
--- util/makedepend/main.c
***************
*** 1,7 ****
  /*
!  * $Header: main.c,v 1.12 88/05/04 14:39:50 jim Exp $
   *
   * $Log:	main.c,v $
   * Revision 1.12  88/05/04  14:39:50  jim
   * fixed problem with makedepend misinterpretting cc flags
   * 
--- 1,10 ----
  /*
!  * $Header: main.c,v 1.13 88/08/03 08:56:32 xswick Exp $
   *
   * $Log:	main.c,v $
+  * Revision 1.13  88/08/03  08:56:32  xswick
+  * ignore X3J11 #pragma directive    
+  * 
   * Revision 1.12  88/05/04  14:39:50  jim
   * fixed problem with makedepend misinterpretting cc flags
   * 
***************
*** 69,74 ****
--- 72,78 ----
  	"undef",
  	"include",
  	"line",
+ 	"pragma",
  	NULL
  };
  
*** util/makedepend/parse.c.old
--- util/makedepend/parse.c
***************
*** 1,7 ****
  /*
!  * $Header: parse.c,v 1.1 87/09/11 08:13:35 toddb Exp $
   *
   * $Log:	parse.c,v $
   * Revision 1.1  87/09/11  08:13:35  toddb
   * Initial revision
   * 
--- 1,10 ----
  /*
!  * $Header: parse.c,v 1.2 88/08/03 08:55:57 xswick Exp $
   *
   * $Log:	parse.c,v $
+  * Revision 1.2  88/08/03  08:55:57  xswick
+  * ignore X3J11 #pragma directive    
+  * 
   * Revision 1.1  87/09/11  08:13:35  toddb
   * Initial revision
   * 
***************
*** 91,96 ****
--- 94,101 ----
  		case INCLUDEDOT:
  			add_include(file, file_red, line, TRUE);
  			break;
+ 		case PRAGMA:
+ 			break;
  		case -1:
  			log("%s, line %d: unknown directive == \"%s\"\n",
  				file_red->i_file, filep->f_line, line);
***************
*** 131,136 ****
--- 136,142 ----
  		case UNDEF:
  		case INCLUDE:
  		case INCLUDEDOT:
+ 		case PRAGMA:
  			break;
  		case -1:
  			log("%s, line %d: unknown directive == \"%s\"\n",
***************
*** 231,236 ****
--- 237,243 ----
  		break;
  	case ELSE:
  	case ENDIF:
+ 	case PRAGMA:
  		debug0("%s, line %d: #%s\n",
  			file->i_file, filep->f_line, directives[ret]);
  		/*

