Return-Path: stoller%morgan@cs.utah.edu
Received: by expo.lcs.mit.edu; Thu, 22 Sep 88 12:36:23 EDT
Received: by cs.utah.edu (5.54/utah-2.0-cs)
	id AA28892; Thu, 22 Sep 88 10:36:28 MDT
Received: by morgan.utah.edu (5.54/utah-2.0-leaf)
	id AA02947; Thu, 22 Sep 88 10:36:25 MDT
Date: Thu, 22 Sep 88 10:36:25 MDT
From: stoller%morgan@cs.utah.edu (Leigh B. Stoller)
Message-Id: <8809221636.AA02947@morgan.utah.edu>
To: gcc-bugs@prep.ai.mit.edu
Cc: xbugs@expo.lcs.mit.edu
Subject: Gcc and X11 imake

### bug number:   997
### area:         config
### severity:     enhancement
### comments:     not very likely...

Hi,
  Here at the university of Utah we recently installed the gcc
compiler suite as the default on our BSD4.3 hp9000's. This caused a
problem in the X11 imake utility, which depends heavily on /lib/cpp.

The problem results from some of the Imakefiles having the following.
(see server/os/4.2bsd/Imakefile)

SpecialObjectRule(osinit.o, $(IRULESRC)/$(MACROFILE), -DADMPATH=\"$(FOO)/foo\")

When this file is run through gcc cpp, it has trouble with \". For example
the results of pcc cpp on:

#define foo(x) =x=
foo(\"$(BAR)/bar\")

is:

# 1 ""


 =\"$(BAR)/bar\"=


while the results of gcc cpp are:

:3: unterminated macro call
:3: only 0 args to macro `foo'
# 1 ""


==


An alternative syntax for the for the Imakefiles could be:

#define foo(x) =x=
foo('"$(BAR)/bar"')

The single quotes produce the same results as escaping the double quotes.


The other solution would be to change gcc cpp to handle this case, as pcc
cpp does.

Either way is fine by me.


Thanks,
Leigh Stoller

