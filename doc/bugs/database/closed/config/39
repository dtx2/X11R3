Return-Path: @KILLINGTON.LCS.MIT.EDU:RWS@zermatt.lcs.mit.edu
Received: from KILLINGTON.LCS.MIT.EDU by EXPO.LCS.MIT.EDU; Wed, 16 Mar 88 13:48:17 EST
Return-Path: <@[128.32.183.24]:rusty%velveeta.Berkeley.EDU@Berkeley.EDU>
Received: from velveeta.Berkeley.EDU ([128.32.183.24]) by ZERMATT.LCS.MIT.EDU via INTERNET with SMTP id 131580; 10 Mar 88 21:45:19 EST
Received: by velveeta.Berkeley.EDU (5.57/1.26)
	id AA00152; Thu, 10 Mar 88 18:43:26 PST
Date: Thu, 10 Mar 88 18:43:26 PST
From: rusty%velveeta.Berkeley.EDU@berkeley.edu (rusty wright)
Message-Id: <8803110243.AA00152@velveeta.Berkeley.EDU>
To: rws@zermatt.lcs.mit.edu
Subject: x11 installation layout
Resent-To: xbugs@expo.lcs.mit.edu
Resent-From: Robert Scheifler <RWS@zermatt.lcs.mit.edu>
Resent-Date: Wed, 16 Mar 88 13:47 EST
Resent-Message-Id: <880316134734.1.RWS@KILLINGTON.LCS.MIT.EDU>

### bug number:   131
### area:         config
### severity:     
### assigned to:  
### status:       closed

This is my old pet peeve.  Hopefully someone will eventually either
explain to me why this is a bad idea or adopt it.

The goal is to minimize the number of files from "imported" software
that get installed in the "system" directories.  By "system" I mean
such directories as /usr/lib, /usr/include, /usr/bin, etc.  By
"imported" I mean anything that wasn't on the disk after you received
your computer or after you installed the system if the computer comes
with the disk empty and you have to install the system from tape.  The
reasons that this minimization is a good thing are:

(*) It really helps when you have to upgrade and the upgrade is a "big
one" which requires you to backup the disks, erase the disk, and then
install the new system.  When imported software has files and
directories that are scattered here and there it's a pain to have to
go hunt them down and make a separate backup of them or to extract
them individually off of a unix dump tape (of /usr, for example).
It's also nice to know that when the manufacturer says that /usr, for
example, requires N meg of disk, and you partition your disk for that
much, that it will really fit.

(*) It's nice to be able to answer the question "how much space does
software product xyz use?".

(*) It's nice to be able to answer the question "where are all of the
files for xyz?"; when imported software has its stuff scattered around
it's not always easy to answer such questions

There are probably other reasons, which I can't think of at the
moment.  My solution for the above issues is to take advantage of the
shells' and man command's search path variable (e.g., $path, $PATH,
$MANPATH, etc.), and put everything for software package "xyz" in the
directory /usr/local/xyz with subdirectories

	/usr/local/xyz/bin
	/usr/local/xyz/lib
	/usr/local/xyz/include
	/usr/local/xyz/man
	/usr/local/xyz/man/man1
	/usr/local/xyz/man/man3
	/usr/local/xyz/man/man4
	/usr/local/xyz/man/man8

Then I:

(*) Config and compile the xyz software to use /usr/local/xyz.

(*) Set the shell $path variable to include /usr/local/xyz/bin.

(*) Set the environment variable MANPATH to /usr/local/xyz/man.

(*) Make a soft link from /usr/local/xyz/include to /usr/include.

(*) Make soft links from /usr/local/xyz/lib/lib*.a to /usr/local/lib.

This makes it very easy to "drop in" new software packages.  The 3rd
step is the only one that "dirties" the system directories.  The 3rd
step (along with the 4th) also has the advantage that when you've done
a major system upgrade and forgotten to redo that soft link, that it's
trivial to put it back when one of the users complains that it's
missing.


